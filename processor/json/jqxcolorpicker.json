{
    "widget": {
        "name": "jqxColorPicker",
        "description": "Enables the user to easily pick a color.",
        "angular2": {
            "name": "jqxColorPickerComponent",
            "selector": "jqxColorPicker"
        }
    },
    "dataTypes": [
        {
            "name": "ColorPickerColorMode",
            "ts_dataType": "enum",
            "enumOptions": [ "hue", "saturation" ]
        }
    ],
    "exampleInit": {
        "width": "250",
        "height": "250"
    },
    "properties": [
        {
            "name": "color",
            "defaultValue": "'#ff0000'",
            "description": "",
            "example": "",
            "exampleURL": "",
            "exampleDescription": "",
            "dataType": "string",
            "exampleInit": {
                "color": "#ffff00"
            },
            "customExample": {
                "codeType": "get"
            }
        },
        {
            "name": "colorMode",
            "defaultValue": "'saturation'",
            "description": "<P>Sets or gets the color mode. </P>\n<B>Possible Values:</B>\n<PRE><CODE>'hue'</CODE></PRE>\n<PRE><CODE>'saturation'</CODE></PRE>\n\r\n<H4>Code examples</H4>\n\r\n<P>Set the <CODE>colorMode</CODE> property. </P>\n<PRE><CODE>$('#ColorPicker').jqxColorPicker({colorMode: 'hue' });</CODE></PRE>\n\r\n<P>Get the <CODE>colorMode</CODE> property. </P>\n<PRE><CODE>var colorMode = $('#jqxColorPicker').jqxColorPicker('colorMode');</CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/ECqVg/",
            "exampleDescription": "colorMode is set to 'hue'",
            "dataType": "string",
            "ts_dataType": "enum:ColorPickerColorMode",
            "exampleInit": {
                "colorMode": "hue"
            },
            "customExample": {
                "codeType": "get"
            }
        },
        {
            "name": "disabled",
            "defaultValue": "false",
            "description": "<P>Enables or disables the color picker. </P>\n\r\n<H4>Code examples</H4>\n\r\n<P>Set the <CODE>disabled</CODE> property. </P>\n<PRE><CODE>$('#ColorPicker').jqxColorPicker({disabled: true });</CODE></PRE>\n\r\n<P>Get the <CODE>disabled</CODE> property. </P>\n<PRE><CODE>var disabled = $('#jqxColorPicker').jqxColorPicker('disabled');</CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/LSE2c/",
            "exampleDescription": "disabled is set to true",
            "dataType": "boolean",
            "exampleInit": {
                "disabled": "true"
            },
            "customExample": {
                "codeType": "get"
            }
        },
        {
            "name": "height",
            "defaultValue": "null",
            "description": "<P>Sets or gets the height of the color picker. </P>\n\r\n<H4>Code examples</H4>\n\r\n<P>Set the <CODE>height</CODE> property. </P>\n<PRE><CODE>$('#ColorPicker').jqxColorPicker({height: 300 });</CODE></PRE>\n\r\n<P>Get the <CODE>height</CODE> property. </P>\n<PRE><CODE>var height = $('#jqxColorPicker').jqxColorPicker('height');</CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/kGrJG/",
            "exampleDescription": "height is set to 300",
            "dataType": "number",
            "ts_dataType": "string | number",
            "customExample": {
                "codeType": "get"
            }
        },
        {
            "name": "showTransparent",
            "defaultValue": "false",
            "description": "<P>Sets or gets the showTransparent property. </P>\n\r\n<H4>Code examples</H4>\n\r\n<P>Set the <CODE>showTransparent</CODE> property. </P>\n<PRE><CODE>$('#ColorPicker').jqxColorPicker({showTransparent: true });</CODE></PRE>\n\r\n<P>Get the <CODE>showTransparent</CODE> property. </P>\n<PRE><CODE>var showTransparent = $('#jqxColorPicker').jqxColorPicker('showTransparent');</CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/a43VE/",
            "exampleDescription": "showTransparent is set to true",
            "dataType": "boolean",
            "exampleInit": {
                "showTransparent": "true"
            },
            "customExample": {
                "codeType": "get"
            }
        },
        {
            "name": "width",
            "defaultValue": "null",
            "description": "<P>Sets or gets the width of the color picker. </P>\n\r\n<H4>Code examples</H4>\n\r\n<P>Set the <CODE>width</CODE> property. </P>\n<PRE><CODE>$('#ColorPicker').jqxColorPicker({width: 300 });</CODE></PRE>\n\r\n<P>Get the <CODE>width</CODE> property. </P>\n<PRE><CODE>var width = $('#jqxColorPicker').jqxColorPicker('width');</CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/GKXvL/",
            "exampleDescription": "width is set to 300",
            "dataType": "number",
            "ts_dataType": "string | number",
            "customExample": {
                "codeType": "get"
            }
        }
    ],
    "events": [
        {
            "name": "colorchange",
            "description": "<P>This event is triggered when a new color is picked. </P>\n<H4>Code examples</H4>\n<P>Bind to the <CODE>colorchange</CODE> event by type: jqxColorPicker. </P>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/MPrJj/",
            "exampleDescription": "Bind to the colorchange event by type:jqxColorPicker",
            "example": "<PRE><CODE>$('#jqxColorPicker').bind('colorchange', function (event)\r\n{ \r\n    var color = event.args;\r\n});\r\n                        </CODE></PRE>"
        }
    ],
    "methods": [
        {
            "name": "getColor",
            "description": "<P>Gets the color. </P>\n<H4>Code examples</H4>\n<P>Invoke the <CODE>getColor</CODE> method. </P>\n<PRE><CODE>var color = $(\"#jqxColorPicker\").jqxColorPicker('getColor');\r\n                        </CODE></PRE>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/cHD9a/",
            "exampleDescription": "gets the color of the jqxColorPicker",
            "returnDataType": "object",
            "ts_returnDataType": "any",
            "arguments": [
                {
                    "name": "None",
                    "dataType": null,
                    "description": "",
                    "optional": false
                }
            ]
        },
        {
            "name": "setColor",
            "description": "<P>Sets a color. </P>\n<H4>Code examples</H4>\n<P>Invoke the <CODE>setColor</CODE> method. </P>\n<PRE><CODE> $(\"#jqxColorPicker\").jqxColorPicker('setColor', '#bbaaff');\r\n                        or\r\n $(\"#jqxColorPicker\").jqxColorPicker('setColor', {r: 150, g: 250, b: 255});\r\n                        </CODE></PRE>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/g99La/",
            "exampleDescription": "sets the color of the jqxColorPicker",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "color",
                    "dataType": "object | string",
                    "description": "hex color string or object with object.r, object.g, object.b number properties. Each property value should be from 0 to 255.",
                    "optional": false
                }
            ],
            "exampleInit": {
                "args": [ "'#ffaaff'" ]
            }
        }
    ]
}