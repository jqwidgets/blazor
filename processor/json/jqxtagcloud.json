{
    "widget": {
        "name": "jqxTagCloud",
        "description": "Displays a collection of user-generated tags accompanying the articles, posts, or videos on your website. Each tag has weight value which corresponds to its popularity, importance or recurrence on the page. The keywords in the cloud can have their own URL which navigates to a collection of items associated with the relevant tag. The user can easily customize the appearance of the control, choose the items that will be displayed in the cloud, their font size and color, sort the tags alphabetically or by value, in ascending or descending order.",
        "angular2": {
            "name": "jqxTagCloudComponent",
            "selector": "jqxTagCloud"
        }
    },
    "dataTypes": [
        {
            "name": "TagCloudAlterTextCase",
            "ts_dataType": "enum",
            "enumOptions": [ "none", "allLower", "allUpper", "firstUpper", "titleCase" ]
        },
        {
            "name": "TagCloudFontSizeUnit",
            "ts_dataType": "enum",
            "enumOptions": [ "px", "em", "%" ]
        },
        {
            "name": "TagCloudSortBy",
            "ts_dataType": "enum",
            "enumOptions": [ "none", "label", "value" ]
        },
        {
            "name": "TagCloudSortOrder",
            "ts_dataType": "enum",
            "enumOptions": [ "ascending", "descending" ]
        },
        {
            "name": "TagCloudDataType",
            "ts_dataType": "enum",
            "enumOptions": [ "xml", "json", "jsonp", "tsv", "csv", "local", "array", "observablearray" ]
        },
        {
            "name": "TagCloudTagRenderer",
            "ts_dataType": "interface",
            "properties": [
                {
                    "name": "itemData",
                    "dataType": "any",
                    "optional": "true",
                    "displayName": "ItemData",
                    "defaultValue": ""
                },
                {
                    "name": "minValue",
                    "dataType": "number",
                    "optional": "true",
                    "displayName": "MinValue",
                    "defaultValue": ""
                },
                {
                    "name": "valueRange",
                    "dataType": "number",
                    "optional": "true",
                    "displayName": "ValueRange",
                    "defaultValue": ""
                }
            ]
        },
        {
            "name": "TagCloudSource",
            "ts_dataType": "interface",
            "properties": [
                {
                    "name": "url",
                    "dataType": "string",
                    "optional": "true",
                    "displayName": "Url",
                    "defaultValue": ""
                },
                {
                    "name": "data",
                    "dataType": "object",
                    "ts_dataType": "any",
                    "optional": "true",
                    "displayName": "Data",
                    "defaultValue": ""
                },
                {
                    "name": "localdata",
                    "dataType": "string",
                    "optional": "true",
                    "displayName": "Localdata",
                    "defaultValue": ""
                },
                {
                    "name": "datatype",
                    "dataType": "string",
                    "ts_dataType": "enum:TagCloudDataType",
                    "optional": "true",
                    "displayName": "Datatype",
                    "defaultValue": ""
                },
                {
                    "name": "type",
                    "dataType": "string",
                    "optional": "true",
                    "displayName": "Type",
                    "defaultValue": ""
                },
                {
                    "name": "id",
                    "dataType": "string",
                    "optional": "true",
                    "displayName": "Id",
                    "defaultValue": ""
                },
                {
                    "name": "root",
                    "dataType": "string",
                    "optional": "true",
                    "displayName": "Root",
                    "defaultValue": ""
                },
                {
                    "name": "record",
                    "dataType": "string",
                    "optional": "true",
                    "displayName": "Record",
                    "defaultValue": ""
                }
            ]
        }
    ],
    "exampleElementsInit": {
        "source": "adapter",
        "displayMember": "countryName",
        "valueMember": "technologyRating"
    },
    "exampleInit": {
        "source": "dataAdapter",
        "width": "800",
        "displayMember": "countryName",
        "valueMember": "technologyRating"
    },
    "exampledInitExtraData": {
        "properties": "dataAdapter: new jqx.dataAdapter(this.source)",
        "beforeCreate": "let data = [\n        { countryName: \"Australia\", technologyRating: 35, url: \"community\" },\n        { countryName: \"United States\", technologyRating: 60, url: \"community\" },\n        { countryName: \"Germany\", technologyRating: 55, url: \"community\" },\n        { countryName: \"Brasil\", technologyRating: 20, url: \"community\" },\n        { countryName: \"United Kingdom\", technologyRating: 50, url: \"community\" },\n        { countryName: \"Japan\", technologyRating: 80, url: \"community\" }\n      ];\n      this.source = {\n        localdata: data,\n        datatype: \"array\",\n        datafields: [\n          { name: 'countryName' },\n          { name: 'technologyRating' },\n          { name: 'url' }\n        ]\n      };",
        "mounted": "",
        "methods": ""
    },
    "properties": [
        {
            "name": "alterTextCase",
            "defaultValue": "'none'",
            "description": "<P>Sets or gets the alterTextCase property used to specify the field by which tags should be sorted. <BR>Possible values are 'none', 'allLower', 'allUpper', 'firstUpper', 'titleCase' </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>alterTextCase</CODE> property. </P>\n<PRE><CODE>$('#jqxTagCloud').jqxTagCloud({ alterTextCase: 'firstUpper' });</CODE></PRE>\n\r\n<P>Get the <CODE>alterTextCase</CODE> property. </P>\n<PRE><CODE>var value = $('#jqxTagCloud').jqxTagCloud({ 'alterTextCase' });</CODE></PRE>",
            "example": "",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqxtagcloud-altertextcase-1",
            "exampleDescription": "alterTextCase is set to 'titleCase'",
            "dataType": "string",
            "ts_dataType": "enum:TagCloudAlterTextCase",
            "exampleInit": {
                "alterTextCase": "titleCase"
            }
        },
        {
            "name": "disabled",
            "defaultValue": "false",
            "description": "<P>Enables or disables the ability to follow tag links in jqxTagCloud. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>disabled</CODE> property. </P>\n<PRE><CODE>$('#jqxTagCloud').jqxTagCloud({ disabled: false });</CODE></PRE>\n\r\n<P>Get the <CODE>disabled</CODE> property. </P>\n<PRE><CODE>var disabled = $('#jqxTagCloud').jqxTagCloud('disabled');</CODE></PRE>",
            "example": "",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqxtagcloud-disabled",
            "exampleDescription": "disabled is set to true",
            "dataType": "boolean",
            "exampleInit": {
                "disabled": "true"
            }
        },
        {
            "name": "displayLimit",
            "defaultValue": "null",
            "description": "<P>Sets or gets the displayLimit property used to filter highest values tags up to the number specified. </P>\n\r\n<H4>Code example </H4>\n\r\n<P>Set the <CODE>displayLimit</CODE> property. </P>\n<PRE><CODE>$('#jqxTagCloud').jqxTagCloud({ displayLimit: 10 });</CODE></PRE>\n\r\n<P>Get the <CODE>displayLimit</CODE> property. </P>\n<PRE><CODE>var value = $('#jqxTagCloud').jqxTagCloud({ 'displayLimit' });</CODE></PRE>",
            "example": "",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqxtagcloud-displaylimit",
            "exampleDescription": "displayLimit is set to 3",
            "dataType": "number",
            "exampleInit": {
                "displayLimit": "3"
            }
        },
        {
            "name": "displayMember",
            "defaultValue": "'label'",
            "description": "<P>Sets or gets the field name used for the tag label. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>displayMember</CODE> property. </P>\n<PRE><CODE>$('#jqxTagCloud').jqxTagCloud({ displayMember: 'tagLabel' });</CODE></PRE>\n\r\n<P>Get the <CODE>displayMember</CODE> property. </P>\n<PRE><CODE>var displayMember = $('#jqxTagCloud').jqxTagCloud('displayMember');</CODE></PRE>",
            "example": "",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqxtagcloud-displaylimit",
            "exampleDescription": "displayMember is set to 'name'",
            "dataType": "string"
        },
        {
            "name": "displayValue",
            "defaultValue": "false",
            "description": "<P>Sets or gets the displayValue property used to specify whether to add the tag value field after the text. </P>\n\r\n<H4>Code example </H4>\n\r\n<P>Set the <CODE>displayValue</CODE> property. </P>\n<PRE><CODE>$('#jqxTagCloud').jqxTagCloud({ displayValue: true });</CODE></PRE>\n\r\n<P>Get the <CODE>displayValue</CODE> property. </P>\n<PRE><CODE>var value = $('#jqxTagCloud').jqxTagCloud({ 'displayValue' });</CODE></PRE>",
            "example": "",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqxtagcloud-displayvalue",
            "exampleDescription": "displayValue is set to true",
            "dataType": "boolean",
            "exampleInit": {
                "displayValue": "true"
            }
        },
        {
            "name": "fontSizeUnit",
            "defaultValue": "'px'",
            "description": "<P>Sets or gets the fontSizeUnit property used to set the font size unit possible values 'px', 'em', '%' </P>\n\r\n<H4>Code example </H4>\n\r\n<P>Set the <CODE>fontSizeUnit</CODE> property. </P>\n<PRE><CODE>$('#jqxTagCloud').jqxTagCloud({ fontSizeUnit: 'em' });</CODE></PRE>\n\r\n<P>Get the <CODE>fontSizeUnit</CODE> property. </P>\n<PRE><CODE>var value = $('#jqxTagCloud').jqxTagCloud({ 'fontSizeUnit' });</CODE></PRE>",
            "example": "",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqxtagcloud-font-sizes",
            "exampleDescription": "fontSizeUnit is set to 'em'",
            "dataType": "string",
            "ts_dataType": "enum:TagCloudFontSizeUnit",
            "exampleInit": {
                "fontSizeUnit": "em"
            }
        },
        {
            "name": "height",
            "defaultValue": "null",
            "description": "<P>Sets or gets the jqxTagCloud's height. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>height</CODE> property. </P>\n<PRE><CODE>$('#jqxTagCloud').jqxTagCloud({ height: 35 });</CODE></PRE>\n\r\n<P>Get the <CODE>height</CODE> property. </P>\n<PRE><CODE>var height = $('#jqxTagCloud').jqxTagCloud('height');</CODE></PRE>",
            "example": "",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqxtagcloud-height",
            "exampleDescription": "height is set to 50",
            "dataType": "number",
            "ts_dataType": "number | string",
            "exampleInit": {
                "height": "50"
            }
        },
        {
            "name": "maxColor",
            "defaultValue": "null",
            "description": "<P>Sets or gets the maxColor property used to specify color of the tags for the elements with highest value attribute. <BR>Together with minColor property will set color of tags in a gradient fashion depending on their value attribute towards the highest value. <BR>Possible values: all browser supported colors including rgba. </P>\n\r\n<H4>Code example </H4>\n\r\n<P>Set the <CODE>maxColor</CODE> property. </P>\n<PRE><CODE>$('#jqxTagCloud').jqxTagCloud({ maxColor: 'red' });</CODE></PRE>\n\r\n<P>Get the <CODE>maxColor</CODE> property. </P>\n<PRE><CODE>var value = $('#jqxTagCloud').jqxTagCloud({ 'maxColor' });</CODE></PRE>",
            "example": "",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqxtagcloud-colors",
            "exampleDescription": "maxColor is set to 'darkgreen'",
            "dataType": "string",
            "exampleInit": {
                "maxColor": "darkgreen",
                "minColor": "lime"
            }
        },
        {
            "name": "maxFontSize",
            "defaultValue": "24",
            "description": "<P>Sets or gets the maxFontSize property used to set the font size of the tags with the highest value attribute. </P>\n\r\n<H4>Code example </H4>\n\r\n<P>Set the <CODE>maxFontSize</CODE> property. </P>\n<PRE><CODE>$('#jqxTagCloud').jqxTagCloud({ maxFontSize: 30 });</CODE></PRE>\n\r\n<P>Get the <CODE>maxFontSize</CODE> property. </P>\n<PRE><CODE>var value = $('#jqxTagCloud').jqxTagCloud({ 'maxFontSize' });</CODE></PRE>",
            "example": "",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqxtagcloud-font-sizes",
            "exampleDescription": "maxFontSize is set to 5",
            "dataType": "number",
            "exampleInit": {
                "maxFontSize": "5"
            }
        },
        {
            "name": "maxValueToDisplay",
            "defaultValue": "0",
            "description": "<P>Sets or gets the maxValueToDisplay property used to filter tags with value higher than the specified. </P>\n\r\n<H4>Code example </H4>\n\r\n<P>Set the <CODE>maxValueToDisplay</CODE> property. </P>\n<PRE><CODE>$('#jqxTagCloud').jqxTagCloud({ maxValueToDisplay: 10 });</CODE></PRE>\n\r\n<P>Get the <CODE>maxValueToDisplay</CODE> property. </P>\n<PRE><CODE>var value = $('#jqxTagCloud').jqxTagCloud({ 'maxValueToDisplay' });</CODE></PRE>",
            "example": "",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqxtagcloud-filter-values",
            "exampleDescription": "maxValueToDisplay is set to 50",
            "dataType": "number",
            "exampleInit": {
                "maxValueToDisplay": "50"
            }
        },
        {
            "name": "minColor",
            "defaultValue": "null",
            "description": "<P>Sets or gets the minColor property used to specify color of the tags for the elements with lowest value attribute. <BR>Together with maxColor property will set color of tags in a gradient fashion depending on their value attribute towards the highest value. <BR>Possible values: all browser supported colors including rgba. </P>\n\r\n<H4>Code example </H4>\n\r\n<P>Set the <CODE>minColor</CODE> property. </P>\n<PRE><CODE>$('#jqxTagCloud').jqxTagCloud({ minColor: 'green' });</CODE></PRE>\n\r\n<P>Get the <CODE>minColor</CODE> property. </P>\n<PRE><CODE>var value = $('#jqxTagCloud').jqxTagCloud({ 'minColor' });</CODE></PRE>",
            "example": "",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqxtagcloud-colors",
            "exampleDescription": "minColor is set to 'lime'",
            "dataType": "string",
            "exampleInit": {
                "maxColor": "darkgreen",
                "minColor": "lime"
            }
        },
        {
            "name": "minFontSize",
            "defaultValue": "10",
            "description": "<P>Sets or gets the minFontSize property used to set the font size of the tags with the lowest value attribute. </P>\n\r\n<H4>Code example </H4>\n\r\n<P>Set the <CODE>minFontSize</CODE> property. </P>\n<PRE><CODE>$('#jqxTagCloud').jqxTagCloud({ minFontSize: 10 });</CODE></PRE>\n\r\n<P>Get the <CODE>minFontSize</CODE> property. </P>\n<PRE><CODE>var value = $('#jqxTagCloud').jqxTagCloud({ 'minFontSize' });</CODE></PRE>",
            "example": "",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqxtagcloud-font-sizes",
            "exampleDescription": "minFontSize is set to 1",
            "dataType": "number",
            "exampleInit": {
                "minFontSize": "1"
            }
        },
        {
            "name": "minValueToDisplay",
            "defaultValue": "0",
            "description": "<P>Sets or gets the minValueToDisplay property used to filter tags with value lower than the specified. </P>\n\r\n<H4>Code example </H4>\n\r\n<P>Set the <CODE>minValueToDisplay</CODE> property. </P>\n<PRE><CODE>$('#jqxTagCloud').jqxTagCloud({ minValueToDisplay: 10 });</CODE></PRE>\n\r\n<P>Get the <CODE>minValueToDisplay</CODE> property. </P>\n<PRE><CODE>var value = $('#jqxTagCloud').jqxTagCloud({ 'minValueToDisplay' });</CODE></PRE>",
            "example": "",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqxtagcloud-filter-values",
            "exampleDescription": "minValueToDisplay is set to 30",
            "dataType": "number",
            "exampleInit": {
                "minValueToDisplay": "30"
            }
        },
        {
            "name": "rtl",
            "defaultValue": "false",
            "description": "<P>Sets or gets a value indicating whether widget's elements are aligned to support locales using right-to-left fonts.</P>\n\r\n<H4>Code example </H4>\n\r\n<P>Set the <CODE>rtl</CODE> property. </P>\n<PRE><CODE>$('#jqxTagCloud').jqxTagCloud({ rtl : true }); </CODE></PRE>\n\r\n<P>Get the <CODE>rtl</CODE> property. </P>\n<PRE><CODE>var rtl = $('#jqxTagCloud').jqxTagCloud('rtl'); </CODE></PRE>",
            "example": "",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqxtagcloud-right-to-left",
            "exampleDescription": "rtl is set to true",
            "dataType": "boolean",
            "exampleInit": {
                "rtl": "true"
            }
        },
        {
            "name": "sortBy",
            "defaultValue": "'none'",
            "description": "<P>Sets or gets the sortBy property used to specify the field by which tags should be sorted. <BR>Possible values are 'none', 'label', 'value' </P>\n\r\n<H4>Code example </H4>\n\r\n<P>Set the <CODE>sortBy</CODE> property. </P>\n<PRE><CODE>$('#jqxTagCloud').jqxTagCloud({ sortBy: 'value' });</CODE></PRE>\n\r\n<P>Get the <CODE>sortBy</CODE> property. </P>\n<PRE><CODE>var value = $('#jqxTagCloud').jqxTagCloud({ 'sortBy' });</CODE></PRE>",
            "example": "",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqxtagcloud-sort",
            "exampleDescription": "sortBy is set to 'label'",
            "dataType": "string",
            "ts_dataType": "enum:TagCloudSortBy",
            "exampleInit": {
                "sortBy": "label"
            }
        },
        {
            "name": "sortOrder",
            "defaultValue": "'ascending'",
            "description": "<P>Sets or gets the sortOrder property used to specify the direction in which tags should be sorted. <BR>Possible values are 'ascending', 'descending' </P>\n\r\n<H4>Code example </H4>\n\r\n<P>Set the <CODE>sortOrder</CODE> property. </P>\n<PRE><CODE>$('#jqxTagCloud').jqxTagCloud({ sortOrder: 'descending' });</CODE></PRE>\n\r\n<P>Get the <CODE>sortOrder</CODE> property. </P>\n<PRE><CODE>var value = $('#jqxTagCloud').jqxTagCloud({ 'sortOrder' });</CODE></PRE>",
            "example": "",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqxtagcloud-sort-order",
            "exampleDescription": "sortOrder is set to 'descending'",
            "dataType": "string",
            "ts_dataType": "enum:TagCloudSortOrder",
            "exampleInit": {
                "sortBy": "label",
                "sortOrder": "descending"
            }
        },
        {
            "name": "source",
            "defaultValue": "{}",
            "description": "",
            "example": "",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqxtagcloud-sort-order",
            "exampleDescription": "jqxTagCloud with data source",
            "dataType": "object",
            "ts_dataType": "TagCloudSource"
        },
        {
            "name": "tagRenderer",
            "defaultValue": "null",
            "description": "<P>A callback function used for custom tags rendering. </P>\n\r\n<P>function tagRenderer (itemData, minValue, valueRange) </P>\n\r\n<P>itemData - the record information of the current tag </P>\n\r\n<P>minValue - the lowest value attribute of all elements in the cloud </P>\n\r\n<P>valueRange - the difference between the lowest and highest value attributes in the cloud ( can be used for custom logic ) </P>\n\r\n<P>The function must return valid content for an anchor tag, usually a string but can be also be a jquery element object. </P>\n\r\n<H4>Code example </H4>\n\r\n<P>Set the <CODE>tagRenderer</CODE> callback function. </P>\n<PRE><CODE>$('#jqxTagCloud').jqxTagCloud({ tagRenderer: function () {\r\n                        var el = $('<SPAN>' + record.countryName + '</SPAN>');\r\n                        var img = $('<IMG style=\"POSITION: relative; TOP: 2px\" src=\"../../jqwidgets/styles/images/close.png\">');\r\n                        img.on('click', function (event) {\r\n                        var id = $(event.target).closest('li').index();\r\n                        var index = $('#tagCloud').jqxTagCloud('getRenderedTags')[id].index;\r\n                        $('#tagCloud').jqxTagCloud('removeAt', index);\r\n                        event.preventDefault();\r\n                        event.stopPropagation();\r\n                        });\r\n                        el.append(img);\r\n                        return el;\r\n                        }\r\n                        });</CODE></PRE>",
            "example": "",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqxtagcloud-tagrenderer",
            "exampleDescription": "Use a custom tagRenderer function",
            "dataType": "function",
            "ts_dataType": "(itemData: TagCloudTagRenderer['itemData'], minValue: TagCloudTagRenderer['minValue'], valueRange: TagCloudTagRenderer['valueRange']) => any",
            "exampleInit": {
                "tagRenderer": "tagRenderer",
                "exampleData": "return '&lt;i>' + itemData.countryName + '&lt;/i>';"
            }
        },
        {
            "name": "takeTopWeightedItems",
            "defaultValue": "false",
            "description": "<P>Sets or gets the takeTopWeightedItems property. Property indicates if <STRONG>displayLimit</STRONG> will prioritize highest value members </P>\n\r\n<H4>Code example </H4>\n\r\n<P>Set the <CODE>takeTopWeightedItems</CODE> property. </P>\n<PRE><CODE>$('#jqxTagCloud').jqxTagCloud({ takeTopWeightedItems: true });</CODE></PRE>\n\r\n<P>Get the <CODE>takeTopWeightedItems</CODE> property. </P>\n<PRE><CODE>var value = $('#jqxTagCloud').jqxTagCloud({ 'takeTopWeightedItems' });</CODE></PRE>",
            "example": "",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqxtagcloud-taketopweighteditems",
            "exampleDescription": "takeTopWeightedItems is set to 'true'",
            "dataType": "boolean",
            "exampleInit": {
                "takeTopWeightedItems": "true"
            }
        },
        {
            "name": "textColor",
            "defaultValue": "null",
            "description": "<P>Sets or gets the textColor property used to specify color of the tags in the case where the minColor and maxColor properties are not set. <BR>Possible values: all browser supported colors including rgba. </P>\n\r\n<H4>Code example </H4>\n\r\n<P>Set the <CODE>textColor</CODE> property. </P>\n<PRE><CODE>$('#jqxTagCloud').jqxTagCloud({ textColor: 'red' });</CODE></PRE>\n\r\n<P>Get the <CODE>textColor</CODE> property. </P>\n<PRE><CODE>var value = $('#jqxTagCloud').jqxTagCloud({ 'textColor' });</CODE></PRE>",
            "example": "",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqxtagcloud-textcolor",
            "exampleDescription": "textColor is set to 'red'",
            "dataType": "string",
            "exampleInit": {
                "textColor": "red"
            }
        },
        {
            "name": "urlBase",
            "defaultValue": "''",
            "description": "<P>Sets or gets the field name used for common base URL path for all tags. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>urlBase</CODE> property. </P>\n<PRE><CODE>$('#jqxTagCloud').jqxTagCloud({ urlBase: 'http://wikipedia.com/' });</CODE></PRE>\n\r\n<P>Get the <CODE>urlBase</CODE> property. </P>\n<PRE><CODE>var urlBase = $('#jqxTagCloud').jqxTagCloud('urlBase');</CODE></PRE>",
            "example": "",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqxtagcloud-urlbase-and-urlmember",
            "exampleDescription": "urlBase is set to 'http://jqwidgets.com/'",
            "dataType": "string",
            "exampleInit": {
                "urlBase": "http://jqwidgets.com/",
                "urlMember": "url"
            }
        },
        {
            "name": "urlMember",
            "defaultValue": "'url'",
            "description": "<P>Sets or gets the field name used by the anchor element. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>urlMember</CODE> property. </P>\n<PRE><CODE>$('#jqxTagCloud').jqxTagCloud({ urlMember: 'tagHref' });</CODE></PRE>\n\r\n<P>Get the <CODE>urlMember</CODE> property. </P>\n<PRE><CODE>var urlMember = $('#jqxTagCloud').jqxTagCloud('urlMember');</CODE></PRE>",
            "example": "",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqxtagcloud-urlbase-and-urlmember",
            "exampleDescription": "urlMember is set to \"url\"",
            "dataType": "string",
            "exampleInit": {
                "urlMember": "url"
            }
        },
        {
            "name": "valueMember",
            "defaultValue": "'value'",
            "description": "<P>Sets or gets the field name used for value/weight. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>valueMember</CODE> property. </P>\n<PRE><CODE>$('#jqxTagCloud').jqxTagCloud({ valueMember: 'postCount' });</CODE></PRE>\n\r\n<P>Get the <CODE>valueMember</CODE> property. </P>\n<PRE><CODE>var valueMember = $('#jqxTagCloud').jqxTagCloud('valueMember');</CODE></PRE>",
            "example": "",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqxtagcloud-urlbase-and-urlmember",
            "exampleDescription": "valueMember is set to 'rating'",
            "dataType": "string"
        },
        {
            "name": "width",
            "defaultValue": "null",
            "description": "<P>Sets or gets the jqxTagCloud's width. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>width</CODE> property. </P>\n<PRE><CODE>$('#jqxTagCloud').jqxTagCloud({ width: '200px' });</CODE></PRE>\n\r\n<P>Get the <CODE>width</CODE> property. </P>\n<PRE><CODE>var width = $('#jqxTagCloud').jqxTagCloud('width');</CODE></PRE>",
            "example": "",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqxtagcloud-urlbase-and-urlmember",
            "exampleDescription": "width is set to 600",
            "dataType": "number",
            "ts_dataType": "string | number"
        }
    ],
    "events": [
        {
            "name": "bindingComplete",
            "description": "<P>This event is triggered when the widget has completed binding to a dataAdapter. </P>\n<H4>Code examples </H4>\n<P>Bind to the <CODE>bindingComplete</CODE> event. </P>",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqxtagcloud-bindingcomplete",
            "exampleDescription": "Bind to the bindingComplete event",
            "example": "<PRE><CODE> $('#jqxTagCloud').on('bindingComplete', function (event) { // Some code here. }); </CODE></PRE>",
            "exampleInit": {
                "source": "this.source"
            }
        },
        {
            "name": "itemClick",
            "description": "<P>This event is triggered when a tag element is clicked. Event Arguments: </P>\n<UL><LI>label - item's label. \r\n<LI>value - item's value. \r\n<LI>url - item's url. \r\n<LI>visibleIndex - item's visible index. \r\n<LI>index - item's index. \r\n<LI>originalEvent - the Click event object. \r\n<LI>target - item's html element. </LI></UL>\n<H4>Code examples </H4>\n<P>Bind to the <CODE>itemClick</CODE> event. </P>",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqxtagcloud-itemclick-event",
            "exampleDescription": "Bind to the itemClick event",
            "example": "<PRE><CODE> $('#jqxTagCloud').on('itemClick', function (event) { var args = event.args; }); </CODE></PRE>"
        }
    ],
    "methods": [
        {
            "name": "destroy",
            "description": "<P>Calls the widget's destroy function. </P>\n<H4>Code examples </H4>\n<P>Invoke the <CODE>destroy</CODE> method. </P>\n<PRE><CODE>$('#jqxTagCloud').jqxTagCloud('destroy'); </CODE></PRE>",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqxtagcloud-destroy-method",
            "exampleDescription": "destroy widget",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "None",
                    "dataType": null,
                    "description": "",
                    "optional": false
                }
            ]
        },
        {
            "name": "findTagIndex",
            "description": "<P>Returns the index of the first tag with the specified label (displayMember). </P>\n<H4>Code examples </H4>\n<P>Get index of a tag with label 'USA' with <CODE>findTagIndex</CODE> method. </P>\n<PRE><CODE>var index = $('#jqxTagCloud').jqxTagCloud('findTagIndex', 'USA'); </CODE></PRE>",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqxtagcloud-findtagindex-method",
            "exampleDescription": "Get tagIndex by label",
            "returnDataType": "number",
            "arguments": [
                {
                    "name": "tag",
                    "dataType": "string",
                    "description": "",
                    "optional": false
                }
            ],
            "exampleInit": {
                "args": [ "'Germany'" ]
            }
        },
        {
            "name": "getHiddenTagsList",
            "description": "<P>Returns an array with indices of all hidden tags. </P>\n<H4>Code examples </H4>\n<P>Get hidden indices with <CODE>getHiddenTagsList</CODE> method. </P>\n<PRE><CODE>var hidden = $('#jqxTagCloud').jqxTagCloud('getHiddenTagsList'); </CODE></PRE>",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqxtagcloud-hide-items",
            "exampleDescription": "Get hidden list",
            "returnDataType": "Array",
            "ts_returnDataType": "Array<any>",
            "arguments": [
                {
                    "name": "None",
                    "dataType": null,
                    "description": "",
                    "optional": false
                }
            ]
        },
        {
            "name": "getRenderedTags",
            "description": "<P>Returns an array with a copy of all tags that have been rendered in the order that they have been rendered. <BR>This array excludes filtered values. But includes hidden ones. </P>\n<H4>Code examples </H4>\n<P>Get rendered tags list with <CODE>getRenderedTags</CODE> method. </P>\n<PRE><CODE>var rendered = $('#jqxTagCloud').jqxTagCloud('getRenderedTags'); </CODE></PRE>",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqxtagcloud-getrenderedtags-and-gettagslist",
            "exampleDescription": "Get rendered tags list",
            "returnDataType": "Array",
            "ts_returnDataType": "Array<any>",
            "arguments": [
                {
                    "name": "None",
                    "dataType": null,
                    "description": "",
                    "optional": false
                }
            ]
        },
        {
            "name": "getTagsList",
            "description": "<P>Returns an array with a copy of all tags. <BR>This list is used before any filtering/sorting/hiding is done. </P>\n<H4>Code examples </H4>\n<P>Get all tags list with <CODE>getTagsList</CODE> method. </P>\n<PRE><CODE>var tagsList = $('#jqxTagCloud').jqxTagCloud('getTagsList'); </CODE></PRE>",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqxtagcloud-getrenderedtags-and-gettagslist",
            "exampleDescription": "Get all tags list",
            "returnDataType": "Array",
            "ts_returnDataType": "Array<any>",
            "arguments": [
                {
                    "name": "None",
                    "dataType": null,
                    "description": "",
                    "optional": false
                }
            ]
        },
        {
            "name": "hideItem",
            "description": "<P>Hides an element with specified index. </P>\n<H4>Code examples </H4>\n<P>Hide the the first visible record of the cloud with <CODE>hideItem</CODE> method. </P>\n<PRE><CODE>\r\n                        var tagItem = $('#jqxTagCloud').jqxTagCloud('getRenderedTags')[0];\r\n                        var index = tagItem.index;\r\n                        $('#jqxTagCloud').jqxTagCloud('hideItem', index);\r\n                        // Note: getRenderedTags will include hidden tags, so doing this repeatedly will have no effect.\r\n                    </CODE></PRE>",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqxtagcloud-hide-items",
            "exampleDescription": "hideItem example",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "index",
                    "dataType": "number",
                    "description": "",
                    "optional": false
                }
            ],
            "exampleInit": {
                "args": [ "1" ]
            }
        },
        {
            "name": "insertAt",
            "description": "<P>Inserts an element before an element with specified index </P>\n<H4>Code examples </H4>\n<P>Add an item at the front of the cloud with <CODE>insertAt</CODE> method. </P>\n<PRE><CODE>\r\n    var index = 0;\r\n    var tagItem = { label: 'hardware', value: 215, url: '/categiries/hardware' };\r\n    // label, value and url fields need to match the respective value of the displayMember, valueMember and urlMember fields of your cloud.\r\n    $('#jqxTagCloud').jqxTagCloud('insertAt', index, tagItem); </CODE></PRE>",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqxtagcloud-crud",
            "exampleDescription": "insertAt example",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "index",
                    "dataType": "number",
                    "description": "",
                    "optional": false
                },
                {
                    "name": "item",
                    "dataType": "object",
                    "ts_dataType": "any",
                    "description": "",
                    "optional": false
                }
            ],
            "exampleInit": {
                "args": [ "1", "{ countryName: \"Bulgaria\", technologyRating: 50, url: \"community\" }" ]
            }
        },
        {
            "name": "removeAt",
            "description": "<P>Deletes an element with specified index. </P>\n<H4>Code examples </H4>\n<P>Delete the the first visible record of the cloud with <CODE>removeAt</CODE> method. </P>\n<PRE><CODE>\r\n                        var tagItem = $('#jqxTagCloud').jqxTagCloud('getRenderedTags')[0];\r\n                        var index = tagItem.index;\r\n                        $('#jqxTagCloud').jqxTagCloud('removeAt', index); </CODE></PRE>",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqxtagcloud-crud",
            "exampleDescription": "removeAt example",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "index",
                    "dataType": "number",
                    "description": "",
                    "optional": false
                }
            ],
            "exampleInit": {
                "args": [ "1" ]
            }
        },
        {
            "name": "updateAt",
            "description": "<P>Updates an element with specified index. </P>\n<H4>Code examples </H4>\n<P>Update the the first visible record of the cloud with <CODE>updateAt</CODE> method. </P>\n<PRE><CODE>\r\n    var tagItem = $('#jqxTagCloud').jqxTagCloud('getRenderedTags')[0];\r\n    var index = tagItem.index;\r\n    tagItem.label = 'Improved' + tagItem.label;\r\n    // label, value and url fields need to match the respective value of the displayMember, valueMember and urlMember fields of your cloud.\r\n    $('#jqxTagCloud').jqxTagCloud('updateAt', index, tagItem); </CODE></PRE>",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqxtagcloud-crud",
            "exampleDescription": "updateAt example",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "index",
                    "dataType": "number",
                    "description": "",
                    "optional": false
                },
                {
                    "name": "item",
                    "dataType": "object",
                    "ts_dataType": "any",
                    "description": "",
                    "optional": false
                }
            ],
            "exampleInit": {
                "args": [ "1", "{ countryName: \"USA\", technologyRating: 70, url: \"community\" }" ]
            }
        },
        {
            "name": "showItem",
            "description": "<P>Reveals a hidden element with specified index. </P>\n<H4>Code examples </H4>\n<P>Reveal the the last hidden record of the cloud with <CODE>showItem</CODE> method. </P>\n<PRE><CODE>\r\n    var hiddenItems = $('#jqxTagCloud').jqxTagCloud('getHiddenTagsList');\r\n    var len = hiddenItems.length;\r\n    if (len &gt; 0) {\r\n        var index = hiddenItems[len - 1];\r\n        $('#jqxTagCloud').jqxTagCloud('showItem', index);\r\n    }\r\n                    </CODE></PRE>",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqxtagcloud-showitem-method",
            "exampleDescription": "showItem example",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "index",
                    "dataType": "number",
                    "description": "",
                    "optional": false
                }
            ],
            "exampleInit": {
                "args": [ "1" ]
            }
        }
    ]
}