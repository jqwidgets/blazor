<!DOCTYPE html>
<html lang="en">

    <head>
        <title>Blazor JqxListBox API Reference</title>
        <meta name="description" content="API Reference Documentation for the Blazor JqxListBox User Interface Component" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />

        <link rel="stylesheet" href="../styles/site.css" media="screen" />
        <link rel= "stylesheet" href="../styles/jqx.apireference.css" media= "screen" />

        <script type="text/javascript" src="../scripts/jquery-1.11.1.min.js"></script>
        <script type="text/javascript" src="../scripts/jqx.apireference.js"></script>
        <script type="text/javascript" src="../scripts/format.js"></script>
        <script type="text/javascript" src="../scripts/toggle.js"></script>

        <script type="text/javascript">
            var _gaq = _gaq || [];
            _gaq.push(['_setAccount', 'UA- 25803467 - 1']);
            _gaq.push(['_trackPageview']);
            (function () {
                var ga = document.createElement('script');
                ga.type = 'text/javascript';
                ga.async = true;
                ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
                var s = document.getElementsByTagName('script')[0];
                s.parentNode.insertBefore(ga, s);
            })();
        </script>
    </head>

    <body>
        <div id="pageTop" class="top"></div>

        <div id="pageDocumentation">
            <div id="properties">

                <table class="documentation-table">
                    <tbody>

                        <tr>
                            <td colspan="3" style="width: 100%">
                                <h2 class="documentation-top-header">
                                    Properties
                                </h2>
                            </td>
                        </tr>

                        <tr>
                            <th>Name</th>
                            <th>Type</th>
                        </tr>

                        
                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan0">autoHeight</span>
                            </td>
                            <td>
                                <span>bool</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Sets or gets whether the listbox's height is equal to the sum of each item's height </P>

<H4>Code example </H4>

<P>Set the <CODE>autoHeight</CODE> property. </P>
<PRE><CODE>$("#jqxListBox").jqxListBox({autoHeight:true}); </CODE></PRE>

<P>Get the <CODE>autoHeight</CODE> property. </P>
<PRE><CODE>var autoHeight = $('#jqxListBox').jqxListBox('autoHeight'); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan1">allowDrag</span>
                            </td>
                            <td>
                                <span>bool</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Enables/disables the dragging of ListBox Items. </P>

<H4>Code example </H4>

<P>Set the <CODE>allowDrag</CODE> property. </P>
<PRE><CODE>$("#jqxListBox").jqxListBox({allowDrag:true}); </CODE></PRE>

<P>Get the <CODE>allowDrag</CODE> property. </P>
<PRE><CODE>var allowDrag = $('#jqxListBox').jqxListBox('allowDrag'); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan2">allowDrop</span>
                            </td>
                            <td>
                                <span>bool</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Enables/disables the dropping of ListBox Items. </P>

<H4>Code example </H4>

<P>Set the <CODE>allowDrop</CODE> property. </P>
<PRE><CODE>$("#jqxListBox").jqxListBox({allowDrop:true}); </CODE></PRE>

<P>Get the <CODE>allowDrop</CODE> property. </P>
<PRE><CODE>var allowDrop = $('#jqxListBox').jqxListBox('allowDrop'); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan3">checkboxes</span>
                            </td>
                            <td>
                                <span>bool</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Sets or gets whether the listbox should display a checkbox next to each item. </P>

<H4>Code example </H4>

<P>Set the <CODE>checkboxes</CODE> property. </P>
<PRE><CODE>$("#jqxListBox").jqxListBox({checkboxes:true}); </CODE></PRE>

<P>Get the <CODE>checkboxes</CODE> property. </P>
<PRE><CODE>var checkboxes = $('#jqxListBox').jqxListBox('checkboxes'); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan4">disabled</span>
                            </td>
                            <td>
                                <span>bool</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Enables/disables the listbox. </P>

<H4>Code example </H4>

<P>Set the <CODE>disabled</CODE> property. </P>
<PRE><CODE>$('#jqxListBox').jqxListBox({ disabled: true }); </CODE></PRE>

<P>Get the <CODE>disabled</CODE> property. </P>
<PRE><CODE>var disabled = $('#jqxListBox').jqxListBox('disabled');</CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan5">displayMember</span>
                            </td>
                            <td>
                                <span>object</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Sets or gets the displayMember of the Items. The displayMember specifies the name of an object property to display. The name is contained in the collection specified by the 'source' property. </P>

<H4>Code example </H4>

<P>Set the <CODE>displayMember</CODE> property. </P>
<PRE><CODE>$("#jqxListBox").jqxListBox({displayMember: 'firstName'});</CODE></PRE>

<P>Get the <CODE>displayMember</CODE> property. </P>
<PRE><CODE>var displayMember = $('#jqxListBox').jqxListBox('displayMember'); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan6">dropAction</span>
                            </td>
                            <td>
                                <span>object</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Sets or gets the drop action when an item is dropped. </P>
<B>Possible Values:</B>
<PRE><CODE>'default'</CODE></PRE>
<PRE><CODE>'copy'-adds a clone of the dropped item</CODE></PRE>
<PRE><CODE>'none'-means that the dropped item will not be added to a new collection and will not be removed from its parent collection</CODE></PRE>

<H4>Code example </H4>

<P>Set the <CODE>dropAction</CODE> property. </P>
<PRE><CODE>$("#jqxListBox").jqxListBox({dropAction:'copy'}); </CODE></PRE>

<P>Get the <CODE>dropAction</CODE> property. </P>
<PRE><CODE>var dropAction = $('#jqxListBox').jqxListBox('dropAction'); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan7">dragStart</span>
                            </td>
                            <td>
                                <span>object</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Callback function which is called when a drag operation starts. </P>

<H4>Code example </H4>

<P>Set the <CODE>dragStart</CODE> property </P>
<PRE><CODE>$("#jqxListBox").jqxListBox({dragStart: function (item)
{
    // disable dragging of 'Café au lait' item.
    if (item.label == 'Café au lait')
    return false;
                        
    // enable dragging for the item.
    return true;
}
});
                        </CODE></PRE>

<P>Get the <CODE>dragStart</CODE> property. </P>
<PRE><CODE>var dragStart = $('#jqxListBox').jqxListBox('dragStart'); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan8">dragEnd</span>
                            </td>
                            <td>
                                <span>object</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Callback function which is called when a drag operation ends. </P>

<H4>Code example </H4>

<P>Set the <CODE>dragEnd</CODE> property </P>
<PRE><CODE>$("#jqxListBox").jqxListBox({ dragEnd: function (dragItem, dropItem) 
{
    // dragItem is the dragged Item.
    // dropItem is the item under the mouse cursor when you dropped the dragged item.
    if (dragItem.label == "Frappuccino")
    return false;
}
});
                        </CODE></PRE>

<P>Get the <CODE>dragEnd</CODE> property. </P>
<PRE><CODE>var dragEnd = $('#jqxListBox').jqxListBox('dragEnd'); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan9">enableHover</span>
                            </td>
                            <td>
                                <span>bool</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Enables/disables the hover state. </P>

<H4>Code example </H4>

<P>Set the <CODE>enableHover</CODE> property. </P>
<PRE><CODE>$("#jqxListBox").jqxListBox({enableHover: false}); </CODE></PRE>

<P>Get the <CODE>enableHover</CODE> property. </P>
<PRE><CODE>var enableHover = $('#jqxListBox').jqxListBox('enableHover'); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan10">enableSelection</span>
                            </td>
                            <td>
                                <span>bool</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Enables/disables the selection. </P>

<H4>Code example </H4>

<P>Set the <CODE>enableSelection</CODE> property. </P>
<PRE><CODE>$("#jqxListBox").jqxListBox({enableSelection: false}); </CODE></PRE>

<P>Get the <CODE>enableSelection</CODE> property. </P>
<PRE><CODE>var enableSelection = $('#jqxListBox').jqxListBox('enableSelection'); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan11">equalItemsWidth</span>
                            </td>
                            <td>
                                <span>bool</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Sets or gets whether the items width should be equal to the listbox's width. </P>

<H4>Code example </H4>

<P>Set the <CODE>equalItemsWidth</CODE> property. </P>
<PRE><CODE>$("#jqxListBox").jqxListBox({equalItemsWidth:false}); </CODE></PRE>

<P>Get the <CODE>equalItemsWidth</CODE> property. </P>
<PRE><CODE>var equalItemsWidth = $('#jqxListBox').jqxListBox('equalItemsWidth'); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan12">filterable</span>
                            </td>
                            <td>
                                <span>bool</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Determines whether the Filtering is enabled. </P>

<H4>Code example </H4>

<P>Set the <CODE>filterable</CODE> property. </P>
<PRE><CODE>$("#jqxListBox").jqxListBox({filterable:true}); </CODE></PRE>

<P>Get the <CODE>filterable</CODE> property. </P>
<PRE><CODE>var filterable = $('#jqxListBox').jqxListBox('filterable'); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan13">filterHeight</span>
                            </td>
                            <td>
                                <span>double</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Determines the Filter's height. </P>

<H4>Code example </H4>

<P>Set the <CODE>filterHeight</CODE> property. </P>
<PRE><CODE>$("#jqxListBox").jqxListBox({filterHeight:30}); </CODE></PRE>

<P>Get the <CODE>filterHeight</CODE> property. </P>
<PRE><CODE>var filterHeight = $('#jqxListBox').jqxListBox('filterHeight'); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan14">filterDelay</span>
                            </td>
                            <td>
                                <span>object</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Determines the Filter's delay. After 100 milliseconds, the widget automatically filters its data based on the filter input's value. To perform filter only on "Enter" key press, set this property to 0. </P>

<H4>Code example </H4>

<P>Set the <CODE>filterDelay</CODE> property. </P>
<PRE><CODE>$("#jqxListBox").jqxListBox({filterDelay:300}); </CODE></PRE>

<P>Get the <CODE>filterDelay</CODE> property. </P>
<PRE><CODE>var filterDelay = $('#jqxListBox').jqxListBox('filterDelay'); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan15">filterPlaceHolder</span>
                            </td>
                            <td>
                                <span>object</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Determines the Filter input's place holder. </P>

<H4>Code example </H4>

<P>Set the <CODE>filterPlaceHolder</CODE> property. </P>
<PRE><CODE>$("#jqxListBox").jqxListBox({filterPlaceHolder:300}); </CODE></PRE>

<P>Get the <CODE>filterPlaceHolder</CODE> property. </P>
<PRE><CODE>var filterPlaceHolder = $('#jqxListBox').jqxListBox('filterPlaceHolder'); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan16">height</span>
                            </td>
                            <td>
                                <span>object</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Sets or gets the listbox's height. </P>

<H4>Code example </H4>

<P>Set the <CODE>height</CODE> property. </P>
<PRE><CODE>$("#jqxListBox").jqxListBox({ width: '250px', height: '250px' }); </CODE></PRE>

<P>Get the <CODE>height</CODE> property. </P>
<PRE><CODE>var height = $('#jqxListBox').jqxListBox('height');</CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan17">hasThreeStates</span>
                            </td>
                            <td>
                                <span>bool</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Sets or gets whether the checkboxes have three states - checked, unchecked and indeterminate. </P>

<H4>Code example </H4>

<P>Set the <CODE>hasThreeStates</CODE> property. </P>
<PRE><CODE>$("#jqxListBox").jqxListBox({hasThreeStates:true}); </CODE></PRE>

<P>Get the <CODE>hasThreeStates</CODE> property. </P>
<PRE><CODE>var hasThreeStates = $('#jqxListBox').jqxListBox('hasThreeStates'); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan18">itemHeight</span>
                            </td>
                            <td>
                                <span>double</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Sets or gets the height of the jqxListBox Items. When the itemHeight == - 1, each item's height is equal to its desired height. </P>

<H4>Code example </H4>

<P>Set the <CODE>itemHeight</CODE> property specified. </P>
<PRE><CODE>$("#jqxListBox").jqxListBox({itemHeight: 25});</CODE></PRE>

<P>Get the <CODE>itemHeight</CODE> property. </P>
<PRE><CODE>var itemHeight = $('#jqxListBox').jqxListBox('itemHeight'); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan19">incrementalSearch</span>
                            </td>
                            <td>
                                <span>bool</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Sets or gets the incrementalSearch property. An incremental search begins searching as soon as you type the first character of the search string. As you type in the search string, jqxListBox automatically selects the found item. </P>

<H4>Code example </H4>

<P>Set the <CODE>incrementalSearch</CODE> property. </P>
<PRE><CODE>$("#jqxListBox").jqxListBox({incrementalSearch: false});</CODE></PRE>

<P>Get the <CODE>incrementalSearch</CODE> property. </P>
<PRE><CODE>var incrementalSearch = $('#jqxListBox').jqxListBox('incrementalSearch'); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan20">incrementalSearchDelay</span>
                            </td>
                            <td>
                                <span>object</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Sets ot gets the incrementalSearchDelay property. The incrementalSearchDelay specifies the time-interval in milliseconds after which the previous search string is deleted. The timer starts when you stop typing. </P>

<H4>Code example </H4>

<P>Set the <CODE>incrementalSearchDelay</CODE> property. </P>
<PRE><CODE>$("#jqxListBox").jqxListBox({incrementalSearchDelay: 400});</CODE></PRE>

<P>Get the <CODE>incrementalSearchDelay</CODE> property. </P>
<PRE><CODE>var incrementalSearchDelay = $('#jqxListBox').jqxListBox('incrementalSearchDelay'); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan21">multiple</span>
                            </td>
                            <td>
                                <span>bool</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Enables/disables the multiple selection. When this property is set to true, the user can select multiple items. </P>

<H4>Code example </H4>

<P>Set the <CODE>multiple</CODE> property. </P>
<PRE><CODE>$("#jqxListBox").jqxListBox({multiple: true}); </CODE></PRE>

<P>Get the <CODE>multiple</CODE> property. </P>
<PRE><CODE>var multiple = $('#jqxListBox').jqxListBox('multiple'); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan22">multipleextended</span>
                            </td>
                            <td>
                                <span>bool</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Enables/disables the multiple selection using Shift and Ctrl keys. When this property is set to true, the user can select multiple items by clicking on item and holding Shift or Ctrl. </P>

<H4>Code example </H4>

<P>Set the <CODE>multipleextended</CODE> property. </P>
<PRE><CODE>$("#jqxListBox").jqxListBox({multipleextended: true}); </CODE></PRE>

<P>Get the <CODE>multipleextended</CODE> property. </P>
<PRE><CODE>var multipleextended = $('#jqxListBox').jqxListBox('multipleextended'); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan23">renderer</span>
                            </td>
                            <td>
                                <span>object</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Callback function which is called when an item is rendered. By using the renderer function, you can customize the look of the list items. </P>

<H4>Code example </H4>

<P>Set the <CODE>renderer</CODE> property </P>
<PRE><CODE>$('#jqxListBox').jqxListBox({renderer: function (index, label, value) 
{
    var datarecord = data[index];
    return datarecord.firstname + " " + datarecord.lastname;
}
});
                        </CODE></PRE>

<P>Get the <CODE>renderer</CODE> property. </P>
<PRE><CODE>var renderer = $('#jqxListBox').jqxListBox('renderer'); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan24">rendered</span>
                            </td>
                            <td>
                                <span>object</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan25">rtl</span>
                            </td>
                            <td>
                                <span>bool</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Sets or gets a value indicating whether widget's elements are aligned to support locales using right-to-left fonts.</P>

<H4>Code example </H4>

<P>Set the <CODE>rtl</CODE> property. </P>
<PRE><CODE>$('#jqxListBox').jqxListBox({rtl : true}); </CODE></PRE>

<P>Get the <CODE>rtl</CODE> property. </P>
<PRE><CODE>var rtl = $('#jqxListBox').jqxListBox('rtl'); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan26">selectedIndex</span>
                            </td>
                            <td>
                                <span>object</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Sets or gets the selected index. </P>

<H4>Code example </H4>

<P>Set the <CODE>selectedIndex</CODE> propert. </P>
<PRE><CODE>$("#jqxListBox").jqxListBox({selectedIndex: 2 }); </CODE></PRE>

<P>Get the <CODE>selectedIndex</CODE> property. </P>
<PRE><CODE>var selectedIndex = $('#jqxListBox').jqxListBox('selectedIndex'); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan27">selectedIndexes</span>
                            </td>
                            <td>
                                <span>object</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan28">source</span>
                            </td>
                            <td>
                                <span>object[]</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Sets or gets the item's source. </P>

<H4>Code example </H4>

<P>Set the <CODE>source</CODE> property. </P>
<PRE><CODE>var data = [</CODE></PRE>
<PRE><CODE>"Affogato",</CODE></PRE>
<PRE><CODE>"Americano",</CODE></PRE>
<PRE><CODE>"Bicerin"</CODE></PRE>
<PRE><CODE>];</CODE></PRE>
<PRE><CODE>$("#jqxListBox").jqxListBox({source: data});</CODE></PRE>
<PRE><CODE>
// url of the data.
var url = "../sampledata/customers.txt";
var parentsLength = $("#jqxWidget").parents().length;
if (parentsLength &gt; 3) {
    url = 'demos/sampledata/customers.txt';
}
// prepare the data. Set the datatype to 'json', 'xml', 'tsv', 'array', 'local' or 'csv.
var source =
{
    datatype: "json",
    datafields: [
        { name: 'CompanyName' },
        { name: 'ContactName' }
    ],
    id: 'id',
    url: url
};
// create a new instance of the jqx.dataAdapter.
var dataAdapter = new $.jqx.dataAdapter(source);
// Create a jqxListBox
$("#jqxListBox").jqxListBox({ source: dataAdapter, displayMember: "ContactName", valueMember: "CompanyName", width: 200, height: 250});
</CODE></PRE>

<P>Get the <CODE>source</CODE> property. </P>
<PRE><CODE>var source = $('#jqxListBox').jqxListBox('source'); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan29">scrollBarSize</span>
                            </td>
                            <td>
                                <span>double</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Sets or gets the scrollbars's size. </P>

<H4>Code example </H4>

<P>Set the <CODE>scrollBarSize</CODE> property. </P>
<PRE><CODE>$("#jqxListBox").jqxListBox({scrollBarSize: 25});</CODE></PRE>

<P>Get the <CODE>scrollBarSize</CODE> property. </P>
<PRE><CODE>var scrollBarSize = $('#jqxListBox').jqxListBox('scrollBarSize'); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan30">searchMode</span>
                            </td>
                            <td>
                                <span>object</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Sets or gets the item incremental search mode. When the user types some text in a focused ListBox, the jqxListBox widget tries to find the searched item using the entered text and the selected search mode. </P>
<B>Possible Values:</B>
<PRE><CODE>'none'</CODE></PRE>
<PRE><CODE>'contains'</CODE></PRE>
<PRE><CODE>'containsignorecase'</CODE></PRE>
<PRE><CODE>'equals'</CODE></PRE>
<PRE><CODE>'equalsignorecase'</CODE></PRE>
<PRE><CODE>'startswithignorecase'</CODE></PRE>
<PRE><CODE>'startswith'</CODE></PRE>
<PRE><CODE>'endswithignorecase'</CODE></PRE>
<PRE><CODE>'endswith'</CODE></PRE>

<H4>Code example </H4>

<P>Set the <CODE>searchMode</CODE> property. </P>
<PRE><CODE>$("#jqxListBox").jqxListBox({searchMode: 'contains' }); </CODE></PRE>

<P>Get the <CODE>searchMode</CODE> property. </P>
<PRE><CODE>var searchMode = $('#jqxListBox').jqxListBox('searchMode'); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan31">theme</span>
                            </td>
                            <td>
                                <span>string</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Sets the widget's theme. </P>

<UL><LI>Include the theme's CSS file after jqx.base.css.<BR>The following code example adds the 'material' theme. <PRE><CODE>
<PRE><CODE>&lt;link rel="stylesheet" href="../../jqwidgets/styles/jqx.base.css" type="text/css" /&gt;
&lt;link rel="stylesheet" href="../../jqwidgets/styles/jqx.material.css" type="text/css" /&gt;
</CODE></PRE>
</CODE></PRE>
<LI>Set the widget's theme property to 'material' when you initialize it. </LI></UL></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan32">valueMember</span>
                            </td>
                            <td>
                                <span>object</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Sets or gets the valueMember of the Items. The valueMember specifies the name of an object property to set as a 'value' of the list items. The name is contained in the collection specified by the 'source' property. </P>

<H4>Code example </H4>

<P>Set the <CODE>valueMember</CODE> property. </P>
<PRE><CODE>$("#jqxListBox").jqxListBox({valueMember: 'lastName'});</CODE></PRE>

<P>Get the <CODE>valueMember</CODE> property. </P>
<PRE><CODE>var valueMember = $('#jqxListBox').jqxListBox('valueMember'); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan33">width</span>
                            </td>
                            <td>
                                <span>object</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Sets or gets the listbox's width. </P>

<H4>Code example </H4>

<P>Set the <CODE>width</CODE> property. </P>
<PRE><CODE>$("#jqxListBox").jqxListBox({ width: '250px', height: '250px' }); </CODE></PRE>

<P>Get the <CODE>width</CODE> property. </P>
<PRE><CODE>var width = $('#jqxListBox').jqxListBox('width');</CODE></PRE></p>
                            </div>

                            </td>
                        </tr>


                        <tr>
                            <td colspan="3" style="width: 100%">
                                <h2 class="documentation-top-header">
                                    Events
                                </h2>
                            </td>
                        </tr>

                        
                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan34">onBindingComplete</span>
                            </td>
                            <td>
                                <span>Event</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>This event is triggered when the data binding operation is completed. </P>
<H4>Code example </H4>
<P>Bind to the <CODE>bindingComplete</CODE> event by type: jqxListBox. </P></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan35">onChange</span>
                            </td>
                            <td>
                                <span>Event</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>This event is triggered when the user selects an item. </P>
<H4>Code example </H4>
<P>Bind to the <CODE>change</CODE> by type: jqxListBox. </P>
<UL><LI>label - gets item's label. 
<LI>value - gets the item's value. 
<LI>disabled - gets whether the item is enabled/disabled. 
<LI>checked - gets whether the item is checked/unchecked. 
<LI>hasThreeStates - determines whether the item's checkbox supports three states. 
<LI>html - gets the item's display html. This can be used instead of label. 
<LI>index - gets the item's index. 
<LI>group - gets the item's group. </LI></UL></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan36">onCheckChange</span>
                            </td>
                            <td>
                                <span>Event</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>This event is triggered when the user checks or unchecks an item. </P>
<H4>Code example </H4>
<P>Bind to the <CODE>checkChange</CODE> event by type: jqxListBox. </P>
<UL><LI>label - gets item's label. 
<LI>value - gets the item's value. 
<LI>disabled - gets whether the item is enabled/disabled. 
<LI>checked - gets whether the item is checked/unchecked. 
<LI>hasThreeStates - determines whether the item's checkbox supports three states. 
<LI>html - gets the item's display html. This can be used instead of label. 
<LI>index - gets the item's index. 
<LI>group - gets the item's group. </LI></UL></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan37">onDragStart</span>
                            </td>
                            <td>
                                <span>Event</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>This event is triggered when the user starts a drag operation. </P>
<H4>Code example </H4>
<P>Bind to the <CODE>dragStart</CODE> event by type: jqxListBox. </P></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan38">onDragEnd</span>
                            </td>
                            <td>
                                <span>Event</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>This event is triggered when the user drops an item. </P>
<H4>Code example </H4>
<P>Bind to the drag<CODE>dragEnd</CODE>nd event by type: jqxListBox. </P></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan39">onSelect</span>
                            </td>
                            <td>
                                <span>Event</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>This event is triggered when the user selects an item. </P>
<H4>Code example </H4>
<P>Bind to the <CODE>select</CODE> event by type: jqxListBox. </P>
<UL><LI>label - gets item's label. 
<LI>value - gets the item's value. 
<LI>disabled - gets whether the item is enabled/disabled. 
<LI>checked - gets whether the item is checked/unchecked. 
<LI>hasThreeStates - determines whether the item's checkbox supports three states. 
<LI>html - gets the item's display html. This can be used instead of label. 
<LI>index - gets the item's index. 
<LI>group - gets the item's group. </LI></UL></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan40">onUnselect</span>
                            </td>
                            <td>
                                <span>Event</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>This event is triggered when the user unselects an item. </P>
<H4>Code example </H4>
<P>Bind to the <CODE>unselect</CODE> event by type: jqxListBox. </P>
<UL><LI>label - gets item's label. 
<LI>value - gets the item's value. 
<LI>disabled - gets whether the item is enabled/disabled. 
<LI>checked - gets whether the item is checked/unchecked. 
<LI>hasThreeStates - determines whether the item's checkbox supports three states. 
<LI>html - gets the item's display html. This can be used instead of label. 
<LI>index - gets the item's index. 
<LI>group - gets the item's group. </LI></UL></p>
                            </div>

                            </td>
                        </tr>


                        <tr>
                            <td colspan="3" style="width: 100%">
                                <h2 class="documentation-top-header">
                                    Methods
                                </h2>
                            </td>
                        </tr>

                        <tr>
                            <th>Name</th>
                            <th>Arguments</th>
                            <th>Return Type</th>
                        </tr>

                        
                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan41">addItem</span>
                            </td>
                            <td>
                                <span>(object Item)</span>
                            </td>
                            <td>
                                <span>bool</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Adds a new item to the jqxListBox. Returns 'true', if the new item is added or 'false' if the item is not added. </P>
<UL><LI>label - determines the item's label. 
<LI>value - determines the item's value. 
<LI>disabled - determines whether the item is enabled/disabled. 
<LI>checked - determines whether item is checked/unchecked. 
<LI>hasThreeStates - determines whether the item's checkbox supports three states. 
<LI>html - determines the item's display html. This can be used instead of label. 
<LI>group - determines the item's group. </LI></UL>
<H4>Code example </H4>
<P>Invoke the <CODE>addItem</CODE> method. </P>
<PRE><CODE>// @param string</CODE></PRE>
<PRE><CODE>$("#jqxListBox").jqxListBox('addItem', 'jQuery' ); </CODE></PRE>
<H4>Code example 2 </H4>
<P>Invoke the <CODE>addItem</CODE> method. </P>
<PRE><CODE>// @param object</CODE></PRE>
<PRE><CODE>$("#jqxListBox").jqxListBox('addItem', { label: 'Text' value: 'Id'} ); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan42">beginUpdate</span>
                            </td>
                            <td>
                                <span>()</span>
                            </td>
                            <td>
                                <span>void</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Stops the ListBox's rendering. That method is usually used when multiple items need to be inserted or removed dynamically. </P>
<H4>Code example </H4>
<P>Invoke the <CODE>beginUpdate</CODE> method. </P>
<PRE><CODE>$("#jqxListBox").jqxListBox('beginUpdate'); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan43">clear</span>
                            </td>
                            <td>
                                <span>()</span>
                            </td>
                            <td>
                                <span>void</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Clears all items. </P>
<H4>Code example </H4>
<P>Invoke the <CODE>clear</CODE> method. </P>
<PRE><CODE>$("#jqxListBox").jqxListBox('clear'); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan44">clearSelection</span>
                            </td>
                            <td>
                                <span>()</span>
                            </td>
                            <td>
                                <span>void</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Clears all selected items. </P>
<H4>Code example </H4>
<P>Invoke the <CODE>clearSelection</CODE> method. </P>
<PRE><CODE>$("#jqxListBox").jqxListBox('clearSelection'); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan45">checkIndex</span>
                            </td>
                            <td>
                                <span>(double Index)</span>
                            </td>
                            <td>
                                <span>void</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Checks a list item when the 'checkboxes' property value is true. The index is zero-based, i.e to check the first item, the 'checkIndex' method should be called with parameter 0. </P>
<H4>Code example </H4>
<P>Invoke the <CODE>checkIndex</CODE> method. </P>
<PRE><CODE>$("#jqxListBox").jqxListBox('checkIndex', 0); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan46">checkItem</span>
                            </td>
                            <td>
                                <span>(object Item)</span>
                            </td>
                            <td>
                                <span>void</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Checks an item. </P>
<H4>Code example </H4>
<P>Invoke the <CODE>checkItem</CODE> method. </P>
<PRE><CODE>// @param jqxListBox Item</CODE></PRE>
<PRE><CODE>$("#jqxListBox").jqxListBox('checkItem', item ); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan47">checkAll</span>
                            </td>
                            <td>
                                <span>()</span>
                            </td>
                            <td>
                                <span>void</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Checks all list items when the 'checkboxes' property value is true. </P>
<H4>Code example </H4>
<P>Invoke the <CODE>checkAll</CODE> method. </P>
<PRE><CODE>$("#jqxListBox").jqxListBox('checkAll'); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan48">clearFilter</span>
                            </td>
                            <td>
                                <span>()</span>
                            </td>
                            <td>
                                <span>void</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Clears the widget's filter when filtering is applied. </P>
<H4></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan49">destroy</span>
                            </td>
                            <td>
                                <span>()</span>
                            </td>
                            <td>
                                <span>void</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Destroy the jqxListBox widget. The destroy method removes the jqxListBox widget from the web page.</P>
<H4>Code example </H4>
<P>Invoke the <CODE>destroy</CODE> method. </P>
<PRE><CODE>$('#jqxListBox').jqxListBox('destroy');
                        </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan50">disableItem</span>
                            </td>
                            <td>
                                <span>(object Item)</span>
                            </td>
                            <td>
                                <span>void</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Disables an item. Item is an object. </P>
<UL><LI>label - determines the item's label. 
<LI>value - determines the item's value. 
<LI>disabled - determines whether the item is enabled/disabled. 
<LI>checked - determines whether item is checked/unchecked. 
<LI>hasThreeStates - determines whether the item's checkbox supports three states. 
<LI>html - determines the item's display html. This can be used instead of label. 
<LI>group - determines the item's group. </LI></UL>
<H4>Code example </H4>
<P>Invoke the <CODE>disableItem</CODE> method. </P>
<PRE><CODE>// @param number</CODE></PRE>
<PRE><CODE>$("#jqxListBox").jqxListBox('disableItem', "jQuery" ); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan51">disableAt</span>
                            </td>
                            <td>
                                <span>(double Index)</span>
                            </td>
                            <td>
                                <span>void</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Disables an item by index. Index is a number. </P>
<H4>Code example </H4>
<P>Invoke the <CODE>disableAt</CODE> method. </P>
<PRE><CODE>// @param number</CODE></PRE>
<PRE><CODE>$("#jqxListBox").jqxListBox('disableAt', 8 ); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan52">enableItem</span>
                            </td>
                            <td>
                                <span>(object Item)</span>
                            </td>
                            <td>
                                <span>void</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Enables an item. Item is an object. </P>
<UL><LI>label - determines the item's label. 
<LI>value - determines the item's value. 
<LI>disabled - determines whether the item is enabled/disabled. 
<LI>checked - determines whether item is checked/unchecked. 
<LI>hasThreeStates - determines whether the item's checkbox supports three states. 
<LI>html - determines the item's display html. This can be used instead of label. 
<LI>group - determines the item's group. </LI></UL>
<H4>Code example </H4>
<P>Invoke the <CODE>enableItem</CODE> method. </P>
<PRE><CODE>// @param number</CODE></PRE>
<PRE><CODE>$("#jqxListBox").jqxListBox('enableItem', "jQuery" ); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan53">enableAt</span>
                            </td>
                            <td>
                                <span>(object Index)</span>
                            </td>
                            <td>
                                <span>void</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Enables a disabled item by index. Index is a number. </P>
<H4>Code example </H4>
<P>Invoke the <CODE>enableAt</CODE> method. </P>
<PRE><CODE>// @param number</CODE></PRE>
<PRE><CODE>$("#jqxListBox").jqxListBox('enableAt', 3 ); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan54">ensureVisible</span>
                            </td>
                            <td>
                                <span>(object item)</span>
                            </td>
                            <td>
                                <span>void</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Ensures that an item is visible. Index is number. If necessary scrolls to the item. Insted of Index, you can also pass the item's value. </P>
<H4>Code example </H4>
<P>Invoke the <CODE>ensureVisible</CODE> method. </P>
<PRE><CODE>// @param number</CODE></PRE>
<PRE><CODE>// @optional param boolean - determines whether to make the item to be the top visible item in the list</CODE></PRE>
<PRE><CODE>$("#jqxListBox").jqxListBox('ensureVisible', 2 ); </CODE></PRE>
<PRE><CODE>$("#jqxListBox").jqxListBox('ensureVisible', "Iced Coffee" ); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan55">endUpdate</span>
                            </td>
                            <td>
                                <span>()</span>
                            </td>
                            <td>
                                <span>void</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Starts the ListBox's rendering and refreshes the ListBox. That method is usually used in combination with the 'beginUpdate' method when multiple items need to be inserted or removed dynamically. </P>
<H4>Code example </H4>
<P>Invoke the <CODE>endUpdate</CODE> method. </P>
<PRE><CODE>$("#jqxListBox").jqxListBox('endUpdate'); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan56">focus</span>
                            </td>
                            <td>
                                <span>()</span>
                            </td>
                            <td>
                                <span>void</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Sets the focus to the jqxListBox. </P>
<H4>Code example </H4>
<P>Invoke the <CODE>focus</CODE> method. </P>
<PRE><CODE>$("#jqxListBox").jqxListBox('focus'); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan57">getItems</span>
                            </td>
                            <td>
                                <span>()</span>
                            </td>
                            <td>
                                <span>object[]</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Gets all items. The returned value is an array of Items. </P>
<UL><LI>label - gets item's label. 
<LI>value - gets the item's value. 
<LI>disabled - gets whether the item is enabled/disabled. 
<LI>checked - gets whether the item is checked/unchecked. 
<LI>hasThreeStates - determines whether the item's checkbox supports three states. 
<LI>html - gets the item's display html. This can be used instead of label. 
<LI>index - gets the item's index. 
<LI>group - gets the item's group. </LI></UL>
<H4>Code example </H4>
<P>Invoke the <CODE>getItems</CODE> method. </P>
<PRE><CODE>var items = $("#jqxListBox").jqxListBox('getItems'); </CODE></PRE>
<PRE><CODE>var items = $("#jqxListBox").jqxListBox('getItems'); var firstItem = items[0]; </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan58">getSelectedItems</span>
                            </td>
                            <td>
                                <span>()</span>
                            </td>
                            <td>
                                <span>object[]</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Gets the selected ListBox items. The returned value is an Array of items. </P>
<UL><LI>label - gets item's label. 
<LI>value - gets the item's value. 
<LI>disabled - gets whether the item is enabled/disabled. 
<LI>checked - gets whether the item is checked/unchecked. 
<LI>hasThreeStates - determines whether the item's checkbox supports three states. 
<LI>html - gets the item's display html. This can be used instead of label. 
<LI>index - gets the item's index. 
<LI>group - gets the item's group. </LI></UL>
<H4>Code example </H4>
<P>Invoke the <CODE>getSelectedItems</CODE> method. </P>
<PRE><CODE>var items = $("#jqxListBox").jqxListBox('getSelectedItems'); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan59">getCheckedItems</span>
                            </td>
                            <td>
                                <span>()</span>
                            </td>
                            <td>
                                <span>object[]</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Gets the checked ListBox items. Returns an Array of checked items. </P>
<UL><LI>label - gets item's label. 
<LI>value - gets the item's value. 
<LI>disabled - gets whether the item is enabled/disabled. 
<LI>checked - gets whether the item is checked/unchecked. 
<LI>hasThreeStates - determines whether the item's checkbox supports three states. 
<LI>html - gets the item's display html. This can be used instead of label. 
<LI>index - gets the item's index. 
<LI>group - gets the item's group. </LI></UL>
<H4>Code example </H4>
<P>Invoke the <CODE>getCheckedItems</CODE> method. </P>
<PRE><CODE>var items = $("#jqxListBox").jqxListBox('getCheckedItems'); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan60">getItem</span>
                            </td>
                            <td>
                                <span>(double Index)</span>
                            </td>
                            <td>
                                <span>object</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Gets an item by index. The returned value is an object with the following fields: </P>
<UL><LI>label - gets item's label. 
<LI>value - gets the item's value. 
<LI>disabled - gets whether the item is enabled/disabled. 
<LI>checked - gets whether the item is checked/unchecked. 
<LI>hasThreeStates - determines whether the item's checkbox supports three states. 
<LI>html - gets the item's display html. This can be used instead of label. 
<LI>index - gets the item's index. 
<LI>group - gets the item's group. </LI></UL>
<H4>Code example </H4>
<P>Invoke the <CODE>getItem</CODE> method. </P>
<PRE><CODE>// @param number</CODE></PRE>
<PRE><CODE>var item = $("#jqxListBox").jqxListBox('getItem', 1 ); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan61">getItemByValue</span>
                            </td>
                            <td>
                                <span>(object Item)</span>
                            </td>
                            <td>
                                <span>object</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Gets an item by its value. The returned value is an object with the following fields: </P>
<UL><LI>label - gets item's label. 
<LI>value - gets the item's value. 
<LI>disabled - gets whether the item is enabled/disabled. 
<LI>checked - gets whether the item is checked/unchecked. 
<LI>hasThreeStates - determines whether the item's checkbox supports three states. 
<LI>html - gets the item's display html. This can be used instead of label. 
<LI>index - gets the item's index. 
<LI>group - gets the item's group. </LI></UL>
<H4>Code example </H4>
<P>Invoke the <CODE>getItemByValue</CODE> method. </P>
<PRE><CODE>// @param Value</CODE></PRE>
<PRE><CODE>var item = $("#jqxWidget").jqxListBox('getItemByValue', "Bon app'");</CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan62">getSelectedItem</span>
                            </td>
                            <td>
                                <span>()</span>
                            </td>
                            <td>
                                <span>object</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Gets the selected item. The returned value is an object or null(if there is no selected item). </P>
<UL><LI>label - gets item's label. 
<LI>value - gets the item's value. 
<LI>disabled - gets whether the item is enabled/disabled. 
<LI>checked - gets whether the item is checked/unchecked. 
<LI>hasThreeStates - determines whether the item's checkbox supports three states. 
<LI>html - gets the item's display html. This can be used instead of label. 
<LI>index - gets the item's index. 
<LI>group - gets the item's group. </LI></UL>
<H4>Code example </H4>
<P>Invoke the <CODE>getSelectedItem</CODE> method. </P>
<PRE><CODE>// @param number</CODE></PRE>
<PRE><CODE>var item = $("#jqxListBox").jqxListBox('getSelectedItem'); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan63">getSelectedIndex</span>
                            </td>
                            <td>
                                <span>()</span>
                            </td>
                            <td>
                                <span>double</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Gets the index of the selected item. The returned value is the index of the selected item. If there's no selected item, -1 is returned. </P>
<H4>Code example </H4>
<P>Invoke the <CODE>getSelectedIndex</CODE> method. </P>
<PRE><CODE>// @param number</CODE></PRE>
<PRE><CODE>var index = $("#jqxListBox").jqxListBox('getSelectedIndex'); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan64">insertAt</span>
                            </td>
                            <td>
                                <span>(object Item, object Index)</span>
                            </td>
                            <td>
                                <span>void</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Inserts a new item to the jqxListBox. Returns 'true', if the new item is inserted or false if the insertaion fails. The first parameter is object or string - the new item. The second parameter is number - the item's index. </P>
<UL><LI>label - determines the item's label. 
<LI>value - determines the item's value. 
<LI>disabled - determines whether the item is enabled/disabled. 
<LI>checked - determines whether item is checked/unchecked. 
<LI>hasThreeStates - determines whether the item's checkbox supports three states. 
<LI>html - determines the item's display html. This can be used instead of label. 
<LI>group - determines the item's group. </LI></UL>
<H4>Code example </H4>
<P>Invoke the <CODE>insertAt</CODE> method. </P>
<PRE><CODE>// @param string</CODE></PRE>
<PRE><CODE>// @param number</CODE></PRE>
<PRE><CODE>$("#jqxListBox").jqxListBox('insertAt', 'jQuery', 1 ); </CODE></PRE>
<H4>Code example 2 </H4>
<P>Invoke the <CODE>insertAt</CODE> method. </P>
<PRE><CODE>// @param object</CODE></PRE>
<PRE><CODE>// @param number</CODE></PRE>
<PRE><CODE>$("#jqxListBox").jqxListBox('insertAt', '{ label: 'Text' value: 'Id'}, 1 ); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan65">invalidate</span>
                            </td>
                            <td>
                                <span>()</span>
                            </td>
                            <td>
                                <span>void</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>The invalidate method will repaint the jqxListBox's items.</P>
<H4>Code example </H4>
<P>Invoke the <CODE>invalidate</CODE> method. </P>
<PRE><CODE>$('#jqxListBox').jqxListBox('invalidate');
                        </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan66">indeterminateItem</span>
                            </td>
                            <td>
                                <span>(object Item)</span>
                            </td>
                            <td>
                                <span>void</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Indeterminates an item. </P>
<H4>Code example </H4>
<P>Invoke the <CODE>indeterminateItem</CODE> method. </P>
<PRE><CODE>// @param jqxListBox Item</CODE></PRE>
<PRE><CODE>$("#jqxListBox").jqxListBox('indeterminateItem', item ); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan67">indeterminateIndex</span>
                            </td>
                            <td>
                                <span>(double Index)</span>
                            </td>
                            <td>
                                <span>void</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>indeterminates a list item when the 'checkboxes' property value is true. The index is zero-based, i.e to indeterminate the first item, the 'indeterminateIndex' method should be called with parameter 0. </P>
<H4>Code example </H4>
<P>Invoke the <CODE>indeterminateIndex</CODE> method. </P>
<PRE><CODE>$("#jqxListBox").jqxListBox('indeterminateIndex', 0); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan68">loadFromSelect</span>
                            </td>
                            <td>
                                <span>(string selector)</span>
                            </td>
                            <td>
                                <span>void</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan69">removeItem</span>
                            </td>
                            <td>
                                <span>(object Item)</span>
                            </td>
                            <td>
                                <span>void</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Removes an item from the listbox. Parameter type: object returned by the "getItem" method or string - the value of an item. Returns 'true', if the item is removed or 'false', if the item is not removed. </P>
<H4>Code example </H4>
<P>Invoke the <CODE>removeItem</CODE> method. </P>
<PRE><CODE>// @param object</CODE></PRE>
<PRE><CODE>$("#jqxListBox").jqxListBox('removeItem', "List Item" ); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan70">removeAt</span>
                            </td>
                            <td>
                                <span>(object Index)</span>
                            </td>
                            <td>
                                <span>void</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Removes an item from the listbox. Parameter type: number - the index of the item. The method returns 'true', if the item is removed or 'false', if the item is not removed. </P>
<H4>Code example </H4>
<P>Invoke the <CODE>removeAt</CODE> method. </P>
<PRE><CODE>// @param number</CODE></PRE>
<PRE><CODE>$("#jqxListBox").jqxListBox('removeAt', 3 ); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan71">render</span>
                            </td>
                            <td>
                                <span>()</span>
                            </td>
                            <td>
                                <span>void</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Renders the jqxListBox widget.</P>
<H4>Code example </H4>
<P>Invoke the <CODE>render</CODE> method. </P>
<PRE><CODE>$('#jqxListBox').jqxListBox('render');
                        </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan72">refresh</span>
                            </td>
                            <td>
                                <span>()</span>
                            </td>
                            <td>
                                <span>void</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Refreshes the jqxListBox widget. The refresh method will update the jqxListBox's layout, size and data.</P>
<H4>Code example </H4>
<P>Invoke the <CODE>refresh</CODE> method. </P>
<PRE><CODE>$('#jqxListBox').jqxListBox('refresh');
                        </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan73">selectItem</span>
                            </td>
                            <td>
                                <span>(object Item)</span>
                            </td>
                            <td>
                                <span>void</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Selects an item. </P>
<H4>Code example </H4>
<P>Invoke the <CODE>selectItem</CODE> method. </P>
<PRE><CODE>// @param jqxListBox Item</CODE></PRE>
<PRE><CODE>$("#jqxListBox").jqxListBox('selectItem', item ); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan74">selectIndex</span>
                            </td>
                            <td>
                                <span>(object Index)</span>
                            </td>
                            <td>
                                <span>void</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Selects item. Index is number. The index is zero-based, i.e to select the first item, the 'selectIndex' method should be called with parameter 0. </P>
<H4>Code example </H4>
<P>Invoke the <CODE>selectIndex</CODE> method. </P>
<PRE><CODE>// @param number</CODE></PRE>
<PRE><CODE>$("#jqxListBox").jqxListBox('selectIndex', 0 ); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan75">updateItem</span>
                            </td>
                            <td>
                                <span>(object Item, object Value)</span>
                            </td>
                            <td>
                                <span>void</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Updates an item. The first parameter is the new item. The second parameter could be an existing item or the value of an existing item. </P>
<UL><LI>label - determines the item's label. 
<LI>value - determines the item's value. 
<LI>disabled - determines whether the item is enabled/disabled. 
<LI>checked - determines whether item is checked/unchecked. 
<LI>hasThreeStates - determines whether the item's checkbox supports three states. 
<LI>html - determines the item's display html. This can be used instead of label. 
<LI>group - determines the item's group. </LI></UL>
<H4>Code example </H4>
<P>Invoke the <CODE>updateItem</CODE> method. </P>
<PRE><CODE>// @param object</CODE></PRE>
<PRE><CODE>// @param object</CODE></PRE>
<PRE><CODE>$("#jqxListBox").jqxListBox('updateItem', { label: "Text", value: "Id1" }, "Antonio Moreno Taquera");</CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan76">updateAt</span>
                            </td>
                            <td>
                                <span>(object item, object index)</span>
                            </td>
                            <td>
                                <span>void</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Updates an item. The first parameter is the new item. The second parameter is the index of the item to be updated. </P>
<UL><LI>label - determines the item's label. 
<LI>value - determines the item's value. 
<LI>disabled - determines whether the item is enabled/disabled. 
<LI>checked - determines whether item is checked/unchecked. 
<LI>hasThreeStates - determines whether the item's checkbox supports three states. 
<LI>html - determines the item's display html. This can be used instead of label. 
<LI>group - determines the item's group. </LI></UL>
<H4>Code example </H4>
<P>Invoke the <CODE>updateAt</CODE> method. </P>
<PRE><CODE>// @param number</CODE></PRE>
<PRE><CODE>$("#jqxListBox").jqxListBox('updateAt', { label: "Text", value: "Id1" }, 3 );</CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan77">unselectIndex</span>
                            </td>
                            <td>
                                <span>(object index)</span>
                            </td>
                            <td>
                                <span>void</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Unselects item by index. The index is zero-based, i.e to select the first item, the 'unselectIndex' method should be called with parameter 0. </P>
<H4>Code example </H4>
<P>Invoke the <CODE>unselectIndex</CODE> method. </P>
<PRE><CODE>// @param number</CODE></PRE>
<PRE><CODE>$("#jqxListBox").jqxListBox('unselectIndex', 5 ); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan78">unselectItem</span>
                            </td>
                            <td>
                                <span>(object item)</span>
                            </td>
                            <td>
                                <span>void</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Unselects an item. </P>
<H4>Code example </H4>
<P>Invoke the <CODE>unselectItem</CODE> method. </P>
<PRE><CODE>// @param jqxListBox Item</CODE></PRE>
<PRE><CODE>$("#jqxListBox").jqxListBox('unselectItem', item ); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan79">uncheckIndex</span>
                            </td>
                            <td>
                                <span>(object index)</span>
                            </td>
                            <td>
                                <span>void</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Unchecks a list item when the 'checkboxes' property value is true. The index is zero-based, i.e to uncheck the first item, the 'uncheckIndex' method should be called with parameter 0. </P>
<H4>Code example </H4>
<P>Invoke the <CODE>uncheckIndex</CODE> method. </P>
<PRE><CODE>$("#jqxListBox").jqxListBox('uncheckIndex', 0); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan80">uncheckItem</span>
                            </td>
                            <td>
                                <span>(object item)</span>
                            </td>
                            <td>
                                <span>void</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Unchecks an item. </P>
<H4>Code example </H4>
<P>Invoke the <CODE>uncheckItem</CODE> method. </P>
<PRE><CODE>// @param jqxListBox Item</CODE></PRE>
<PRE><CODE>$("#jqxListBox").jqxListBox('uncheckItem', item ); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan81">uncheckAll</span>
                            </td>
                            <td>
                                <span>()</span>
                            </td>
                            <td>
                                <span>void</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Unchecks all list items when the 'checkboxes' property value is true. </P>
<H4>Code example </H4>
<P>Invoke the <CODE>uncheckAll</CODE> method. </P>
<PRE><CODE>$("#jqxListBox").jqxListBox('uncheckAll'); </CODE></PRE></p>
                            </div>

                            </td>
                        </tr>

                        <tr>
                            <td class="documentation-option-type-click">
                                <span id="propertiesSpan82">val</span>
                            </td>
                            <td>
                                <span><span style="color: #0b559b">[SET]</span> (object value) <span style="color: #0b559b">[GET]</span> ()</span>
                            </td>
                            <td>
                                <span><span style="color: #0b559b">[SET]</span> void <span style="color: #0b559b">[GET]</span> string</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="width: 100%">

                            <div class="documentation-option-description property-content" style="display: none;">
                                <p><P>Sets or gets the selected value. </P>
<H4>Code example </H4>
<P>Invoke the <CODE>val</CODE> method. </P>
<PRE><CODE>var value = $("#jqxListBox").jqxListBox('val');</CODE></PRE>
<PRE><CODE>var value = $("#jqxListBox").val();</CODE></PRE>
<PRE><CODE>$("#jqxListBox").jqxListBox('val', 'New Value');</CODE></PRE>
<PRE><CODE>$("#jqxListBox").val('New Value');</CODE></PRE></p>
                            </div>

                            </td>
                        </tr>


                    </tbody>
                </table>
           
            </div>
        </div>

    	<div id="pageBottom" class="bottom"></div>
    </body>

</html>
