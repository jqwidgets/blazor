@inject IJSRuntime JSRuntime;
@inject HttpClient Http;

<br/>

<br/>

<JqxTextArea @ref="myTextArea" onSelect="handleSelect" source="initialData" placeHolder="Contact Name:" displayMember="ContactName" valueMember="CompanyName" width="200" height="40"></JqxTextArea>

<br />

<label style="font-family: Verdana; font-size: 10px;">
    ex: Ana</label>

<div @ref="selectionlog" style="font-family: Verdana; font-size: 13px;"></div>

@code {
    JqxTextArea myTextArea;

    ElementReference selectionlog;
    
    private object[] source;
    private List<Dictionary<string, object>> initialData = new List<Dictionary<string, object>>
    {
        new Dictionary<string, object>
        {
            { "CompanyName", "" },
            { "ContactName", "" }
        }
    };

    protected override async Task OnInitializedAsync()
    {
        List<Dictionary<string, object>> newData = new List<Dictionary<string, object>>();
        source = await Http.GetJsonAsync<object[]>("../sampledata/customers.txt");

        foreach(var item in source) {
            string clearedItem = item.ToString().Trim(new Char[] { '{', '}', '\n' });
            string arrayFields = clearedItem.Split(",");
            string CompanyNameField = arrayFields[1].Trim();
            string CompanyName = CompanyNameField.Split(":")[1].Trim().Trim('"');
            string ContactNameField = arrayFields[2].Trim();
            string ContactName = ContactNameField.Split(":")[1].Trim().Trim('"');
            newData.Add(
                new Dictionary<string, object>()
                {
                    { "CompanyName", CompanyName },
                    { "ContactName", ContactName }
                }
            );
        }

        myTextArea.setOptions(new Dictionary<string, object>() { { "source", newData } });
    }

    private void handleSelect(IDictionary<string, object> e)
    {
        string item = e["item"].ToString().Trim(new Char[] { '{', '}' });
        string labelPair = item.Split(",")[0];
        string label = labelPair.Split(":")[1].Trim('"');
        string valuePair = item.Split(",")[1];
        string value = valuePair.Split(":")[1].Trim('"');
        Dictionary<string, object> itemData = new Dictionary<string, object>()
        {
            { "item", new Dictionary<string, object>() { { "label", label }, { "value", value } } }
        };
        JSRuntime.InvokeAsync<object>("Example.updateInnerHtml", selectionlog, itemData);
    }
}
