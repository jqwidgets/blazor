{
    "widget": {
        "name": "jqxDockPanel",
        "description": "Allows the creation of dock layouts.",
        "angular2": {
            "name": "jqxDockPanelComponent",
            "selector": "jqxDockPanel"
        }
    },
    "dataTypes": [],
    "exampleInit": {
        "width": "300",
        "height": "200"
    },
    "exampleExtraTemplate": "<div dock='left' style='background: #486974;'> First Div </div>\n    <div dock='top' style='height: 100px; background: #368ba7;'> Second Div </div>\n    <div dock='right' style='background: #df7169;'> Third Div </div>\n    <div style='background: #a73654;'> Fourth Div </div>",
    "properties": [
        {
            "name": "disabled",
            "defaultValue": "false",
            "description": "<P>Gets whether the dockpanel is disabled. </P>\n\r\n<H4>Code examples</H4>\n\r\n<P>Set the <CODE>disabled</CODE> property. </P>\n<PRE><CODE>$('#jqxDockPanel').jqxDockPanel({ disabled: false }); </CODE></PRE>\n\r\n<P>Get the <CODE>disabled</CODE> property. </P>\n<PRE><CODE>var disabled = $('#jqxDockPanel').jqxDockPanel('disabled');</CODE></PRE>",
            "example": "",
            "exampleURL": "file:///D:/JQuery/jQWidgets%20-%20Project/WebApplication2/WindowsFormsApplication1/documentation/jqxdockpanel/",
            "exampleDescription": "disabled is set to true",
            "dataType": "boolean",
            "exampleInit": {
                "disabled": "true"
            },
            "customExample": {
                "codeType": "get"
            }
        },
        {
            "name": "height",
            "defaultValue": "null",
            "description": "<P>Sets or gets the dockpanel's height. </P>\n\r\n<H4>Code examples</H4>\n\r\n<P>Set the <CODE>height</CODE> property. </P>\n<PRE><CODE>$('#jqxDockPanel').jqxDockPanel({ height:\"300px\" }); </CODE></PRE>\n\r\n<P>Get the <CODE>height</CODE> property. </P>\n<PRE><CODE>var height = $('#jqxDockPanel').jqxDockPanel('height');</CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/Z5ZFZ/",
            "exampleDescription": "height is set to 210",
            "dataType": "number",
            "ts_dataType": "string | number",
            "customExample": {
                "codeType": "get"
            }
        },
        {
            "name": "lastchildfill",
            "defaultValue": "true",
            "description": "<P>When true, the last child gets the available width and height. </P>\n\r\n<H4>Code examples</H4>\n\r\n<P>Set the <CODE>lastchildfill</CODE> property. </P>\n<PRE><CODE>$('#jqxDockPanel').jqxDockPanel({ lastchildfill: false }); </CODE></PRE>\n\r\n<P>Get the <CODE>lastchildfill</CODE> property. </P>\n<PRE><CODE>var lastchildfill = $('#jqxDockPanel').jqxDockPanel('lastchildfill');</CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/9arMQ/",
            "exampleDescription": "lastchildfill is set to true",
            "dataType": "boolean",
            "exampleInit": {
                "lastchildfill": "true"
            },
            "customExample": {
                "codeType": "get"
            }
        },
        {
            "name": "width",
            "defaultValue": "null",
            "description": "<P>Sets or gets the dockpanel's width. </P>\n\r\n<H4>Code examples</H4>\n\r\n<P>Set the <CODE>width</CODE> property. </P>\n<PRE><CODE>$('#jqxDockPanel').jqxDockPanel({width: '200px'});</CODE></PRE>\n\r\n<P>Get the <CODE>width</CODE> property. </P>\n<PRE><CODE>var width = $('#jqxDockPanel').jqxDockPanel('width');</CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/u7z2V/",
            "exampleDescription": "width is set to 300",
            "dataType": "number",
            "ts_dataType": "string | number",
            "customExample": {
                "codeType": "get"
            }
        }
    ],
    "events": [
        {
            "name": "layout",
            "description": "<P>Occurs when the layout is performed. </P>\n<H4>Code examples</H4>\n<P>Bind to the <CODE>layout</CODE> event by type: jqxDockPanel. </P>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/pkZtr/",
            "exampleDescription": "Bind to the layout event by type: jqxDockPanel.",
            "example": "<PRE><CODE>$('#jqxDockPanel').bind('layout', function () { // Some code here. }); </CODE></PRE>",
            "exampleInit": {
                "layout": "{}"
            }
        }
    ],
    "methods": [
        {
            "name": "refresh",
            "description": "<P>Refreshes the DockPanel. </P>\n<H4>Code examples </H4>\n<P>Invoke the <CODE>refresh</CODE> method. </P>\n<PRE><CODE>\r\n$('#jqxDockPanel').jqxBarGauge('refresh');\r\n</CODE></PRE>",
            "exampleURL": "",
            "exampleDescription": "Invoke the refresh and redraws the widget.",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "None",
                    "dataType": null,
                    "description": "",
                    "optional": false
                }
            ]
        }
    ]
}