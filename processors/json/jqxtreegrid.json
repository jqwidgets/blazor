{
    "widget": {
        "name": "jqxTreeGrid",
        "description": "Represents data in a tree-like structure. The TreeGrid(also known as TreeList) widget supports multi column display of hierarchical data, data paging, sorting and filtering, data editing, columns resizing, fixed columns, conditional formatting, aggregates and rows selection. It can read and display the data from your data sources like XML, JSON, Array, CSV or TSV. jqxTreeGrid has intuitive and easy to use APIs and works across devices and browsers.",
        "angular2": {
            "name": "jqxTreeGridComponent",
            "selector": "jqxTreeGrid"
        }
    },
    "dataTypes": [
        {
            "name": "TreeGridFilterMode",
            "ts_dataType": "enum",
            "enumOptions": [ "default", "simple", "advanced" ]
        },
        {
            "name": "TreeGridPagerPosition",
            "ts_dataType": "enum",
            "enumOptions": [ "top", "bottom", "both" ]
        },
        {
            "name": "TreeGridPagerMode",
            "ts_dataType": "enum",
            "enumOptions": [ "default", "advanced" ]
        },
        {
            "name": "TreeGridPageSizeMode",
            "ts_dataType": "enum",
            "enumOptions": [ "default", "root" ]
        },
        {
            "name": "TreeGridSelectionMode",
            "ts_dataType": "enum",
            "enumOptions": [ "multipleRows", "singleRow", "custom", "none" ]
        },
        {
            "name": "TreeGridHorizontalAlign",
            "ts_dataType": "enum",
            "enumOptions": [ "left", "center", "right" ]
        },
        {
            "name": "TreeGridExportOptions",
            "ts_dataType": "enum",
            "enumOptions": [ "xls", "html", "xml", "json", "csv", "tsv", "pdf" ]
        },
        {
            "name": "TreeGridEditSettings",
            "ts_dataType": "interface",
            "properties": [
                {
                    "name": "saveOnEnter",
                    "dataType": "boolean",
                    "optional": "true",
                    "displayName": "Save On Enter",
                    "defaultValue": "true"
                },
                {
                    "name": "saveOnPageChange",
                    "dataType": "boolean",
                    "optional": "true",
                    "displayName": "Save On Page Change",
                    "defaultValue": "true"
                },
                {
                    "name": "saveOnBlur",
                    "dataType": "boolean",
                    "optional": "true",
                    "displayName": "Save On Blur",
                    "defaultValue": "true"
                },
                {
                    "name": "saveOnSelectionChange",
                    "dataType": "boolean",
                    "optional": "true",
                    "displayName": "Save On Selection Change",
                    "defaultValue": "true"
                },
                {
                    "name": "cancelOnEsc",
                    "dataType": "boolean",
                    "optional": "true",
                    "displayName": "Cancel On Esc",
                    "defaultValue": "true"
                },
                {
                    "name": "editSingleCell",
                    "dataType": "boolean",
                    "optional": "true",
                    "displayName": "Edit Single Cell",
                    "defaultValue": "true"
                },
                {
                    "name": "editOnDoubleClick",
                    "dataType": "boolean",
                    "optional": "true",
                    "displayName": "Edit On Double Click",
                    "defaultValue": "true"
                },
                {
                    "name": "editOnF2",
                    "dataType": "boolean",
                    "optional": "true",
                    "displayName": "Edit On F2",
                    "defaultValue": "true"
                }
            ]
        },
        {
            "name": "TreeGridExportSettings",
            "ts_dataType": "interface",
            "properties": [
                {
                    "name": "columnsHeader",
                    "dataType": "boolean",
                    "optional": "true",
                    "displayName": "Columns Header",
                    "defaultValue": ""
                },
                {
                    "name": "hiddenColumns",
                    "dataType": "boolean",
                    "optional": "true",
                    "displayName": "Hidden Columns",
                    "defaultValue": ""
                },
                {
                    "name": "serverURL",
                    "dataType": "string",
                    "ts_dataType": "string | any",
                    "optional": "true",
                    "displayName": "Server URL",
                    "defaultValue": ""
                },
                {
                    "name": "characterSet",
                    "dataType": "string",
                    "optional": "true",
                    "displayName": "Character Set",
                    "defaultValue": ""
                },
                {
                    "name": "collapsedRecords",
                    "dataType": "boolean",
                    "optional": "true",
                    "displayName": "Collapsed Records",
                    "defaultValue": ""
                },
                {
                    "name": "recordsInView",
                    "dataType": "boolean",
                    "optional": "true",
                    "displayName": "Records In View",
                    "defaultValue": ""
                },
                {
                    "name": "fileName",
                    "dataType": "string",
                    "ts_dataType": "string | null",
                    "optional": "true",
                    "displayName": "File Name",
                    "defaultValue": ""
                }
            ]
        },
        {
            "name": "TreeGridGetRow",
            "ts_dataType": "interface",
            "properties": [
                {
                    "name": "type",
                    "dataType": "string",
                    "optional": "true",
                    "displayName": "Type",
                    "defaultValue": ""
                },
                {
                    "name": "checked",
                    "dataType": "boolean",
                    "optional": "true",
                    "displayName": "Checked",
                    "defaultValue": ""
                },
                {
                    "name": "expanded",
                    "dataType": "boolean",
                    "optional": "true",
                    "displayName": "Expanded",
                    "defaultValue": ""
                },
                {
                    "name": "icon",
                    "dataType": "string",
                    "optional": "true",
                    "displayName": "Icon",
                    "defaultValue": ""
                },
                {
                    "name": "leaf",
                    "dataType": "boolean",
                    "optional": "true",
                    "displayName": "Leaf",
                    "defaultValue": ""
                },
                {
                    "name": "level",
                    "dataType": "number",
                    "optional": "true",
                    "displayName": "Level",
                    "defaultValue": ""
                },
                {
                    "name": "parent",
                    "dataType": "object",
                    "ts_dataType": "any",
                    "optional": "true",
                    "displayName": "Parent",
                    "defaultValue": ""
                },
                {
                    "name": "records",
                    "dataType": "Array",
                    "ts_dataType": "Array<any>",
                    "optional": "true",
                    "displayName": "Records",
                    "defaultValue": ""
                },
                {
                    "name": "selected",
                    "dataType": "boolean",
                    "optional": "true",
                    "displayName": "Selected",
                    "defaultValue": ""
                },
                {
                    "name": "uid",
                    "dataType": "boolean",
                    "ts_dataType": "number | string",
                    "optional": "true",
                    "displayName": "uid",
                    "defaultValue": ""
                }
            ]
        },
        {
            "name": "TreeGridRowDetailsRenderer",
            "ts_dataType": "interface",
            "properties": [
                {
                    "name": "key",
                    "dataType": "number",
                    "optional": "true",
                    "displayName": "Key",
                    "defaultValue": ""
                },
                {
                    "name": "dataRow",
                    "dataType": "number",
                    "optional": "true",
                    "displayName": "DataRow",
                    "defaultValue": ""
                }
            ]
        },
        {
            "name": "TreeGridRenderStatusBar",
            "ts_dataType": "interface",
            "properties": [
                {
                    "name": "statusbar",
                    "dataType": "object",
                    "optional": "true",
                    "displayName": "Statusbar",
                    "defaultValue": ""
                }
            ]
        },
        {
            "name": "TreeGridRenderToolbar",
            "ts_dataType": "interface",
            "properties": [
                {
                    "name": "toolbar",
                    "dataType": "object",
                    "optional": "true",
                    "displayName": "Toolbar",
                    "defaultValue": ""
                }
            ]
        },
        {
            "name": "TreeGridScrollOffset",
            "ts_dataType": "interface",
            "properties": [
                {
                    "name": "top",
                    "dataType": "number",
                    "optional": "true",
                    "displayName": "Top",
                    "defaultValue": ""
                },
                {
                    "name": "left",
                    "dataType": "number",
                    "optional": "true",
                    "displayName": "Left",
                    "defaultValue": ""
                }
            ]
        }
    ],
    "exampleElementsInit": {
        "sortable": true,
        "filterable": true,
        "columns": "columns",
        "columnGroups": "columnGroups",
        "source": "source"
    },
    "exampleInit": {
        "source": "dataAdapter",
        "columns": "columns"
    },
    "exampledInitExtraData": {
        "properties": "dataAdapter: new jqx.dataAdapter(this.data),\n        columns: [\n            { text: 'FirstName', dataField: 'FirstName', width: 150, aggregates: ['count'] },\n            { text: 'LastName', dataField: 'LastName', width: 120 },\n            { text: 'Title', dataField: 'Title', width: 200 }\n          ]",
        "beforeCreate": "let employees = [{\n         'EmployeeID': 2,\n         'FirstName': 'Andrew',\n         'LastName': 'Fuller',\n         'Title': 'Vice President, Sales',\n         'expanded': 'true',\n         children: [{\n             'EmployeeID': 8,\n             'FirstName': 'Laura', \n             'LastName': 'Callahan', \n             'Title': 'Inside Sales Coordinator'\n         }, { \n             'EmployeeID': 5, \n             'FirstName': 'Steven', \n             'LastName': 'Buchanan', \n             'Title': 'Sales Manager', \n             'expanded': 'true', \n             children: [{ \n                 'EmployeeID': 6, \n                 'FirstName': 'Michael', \n                 'LastName': 'Suyama',\n                 'Title': 'Sales Representative'\n             }, {\n                 'EmployeeID': 7, \n                 'FirstName': 'Robert', \n                 'LastName': 'King', \n                 'Title': 'Sales Representative'\n             }]\n         }]\n      }]; \n     this.data = { \n         dataType: \"json\", \n         dataFields: [{ name: 'EmployeeID', type: 'number' }, \n             { name: 'FirstName', type: 'string' }, \n             { name: 'LastName', type: 'string' }, \n             { name: 'Title', type: 'string' }, \n             { name: 'children', type: 'array' }, \n             { name: 'expanded', type: 'bool' }], \n         hierarchy: { root: 'children' }, \n         id: 'EmployeeID', \n         localData: employees\n      };",
        "mounted": "",
        "methods": ""
    },
    "properties": [
        {
            "name": "altRows",
            "defaultValue": "false",
            "description": "<P>Sets or gets whether the jqxTreeGrid automatically alternates row colors. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>altRows</CODE> property. </P>\n<PRE><CODE>$('#treeGrid').jqxTreeGrid({altRows: true}); </CODE></PRE>\n\r\n<P>Get the <CODE>altRows</CODE> property. </P>\n<PRE><CODE>var altRows = $('#treeGrid').jqxTreeGrid('altRows'); </CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/sznLP/",
            "exampleDescription": "altRows is set to true",
            "dataType": "boolean",
            "exampleInit": {
                "altRows": "true"
            }
        },
        {
            "name": "autoRowHeight",
            "defaultValue": "true",
            "description": "<P>Sets or gets whether the jqxTreeGrid automatically calculates the rows height and wraps the cell text. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>autoRowHeight</CODE> property. </P>\n<PRE><CODE>$('#treeGrid').jqxTreeGrid({autoRowHeight: true}); </CODE></PRE>\n\r\n<P>Get the <CODE>autoRowHeight</CODE> property. </P>\n<PRE><CODE>var autoRowHeight = $('#treeGrid').jqxTreeGrid('autoRowHeight'); </CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/tQWJM/",
            "exampleDescription": "autoRowHeight is set to false",
            "dataType": "boolean",
            "exampleInit": {
                "autoRowHeight": "false"
            }
        },
        {
            "name": "aggregatesHeight",
            "defaultValue": "34",
            "description": "<P>Sets or gets the height of the aggregates bar. Aggregates bar is displayed after setting <CODE>showAggregates</CODE> to true. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>aggregatesHeight</CODE> property. </P>\n<PRE><CODE>$('#treeGrid').jqxTreeGrid({aggregatesHeight: 50}); </CODE></PRE>\n\r\n<P>Get the <CODE>aggregatesHeight</CODE> property. </P>\n<PRE><CODE>var aggregatesHeight = $('#treeGrid').jqxTreeGrid('aggregatesHeight'); </CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/5AL7t/",
            "exampleDescription": "aggregatesHeight is set to 40",
            "dataType": "number",
            "exampleInit": {
                "aggregatesHeight": "40",
                "showAggregates": "true"
            }
        },
        {
            "name": "autoShowLoadElement",
            "defaultValue": "true",
            "description": "<P>Sets or gets whether the loading html element with animated gif is automatically displayed by the widget during the data binding process. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>autoShowLoadElement</CODE> property. </P>\n<PRE><CODE>$('#treeGrid').jqxTreeGrid({autoShowLoadElement: false}); </CODE></PRE>\n\r\n<P>Get the <CODE>autoShowLoadElement</CODE> property. </P>\n<PRE><CODE>var autoShowLoadElement = $('#treeGrid').jqxTreeGrid('autoShowLoadElement'); </CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/GF3Ld/",
            "exampleDescription": "autoShowLoadElement is set to false",
            "dataType": "boolean",
            "exampleInit": {
                "autoShowLoadElement": "false"
            }
        },
        {
            "name": "checkboxes",
            "defaultValue": "false",
            "description": "<P>Determines whether checkboxes are displayed or not. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>checkboxes</CODE> property. </P>\n<PRE><CODE>$('#treeGrid').jqxTreeGrid({checkboxes: true}); </CODE></PRE>\n<CODE>checkboxes</CODE>\n<CODE>true</CODE>\n<CODE>false</CODE>\n<PRE><CODE>\r\ncheckboxes: function (rowKey, dataRow) {\r\n    var level = dataRow.level;\r\n    if (level == 0) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n</CODE></PRE>\n\r\n<P>Get the <CODE>checkboxes</CODE> property. </P>\n<PRE><CODE>var checkboxes = $('#treeGrid').jqxTreeGrid('checkboxes'); </CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/fhbLa/",
            "exampleDescription": "checkboxes is set to true",
            "dataType": "boolean",
            "exampleInit": {
                "checkboxes": "true"
            }
        },
        {
            "name": "columnsHeight",
            "defaultValue": "30",
            "description": "<P>Sets or gets the height of the columns header. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>columnsHeight</CODE> property. </P>\n<PRE><CODE>$('#treeGrid').jqxTreeGrid({columnsHeight: 40}); </CODE></PRE>\n\r\n<P>Get the <CODE>columnsHeight</CODE> property. </P>\n<PRE><CODE>var columnsHeight = $('#treeGrid').jqxTreeGrid('columnsHeight'); </CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/FppLy/",
            "exampleDescription": "columnsHeight is set to 40",
            "dataType": "number",
            "exampleInit": {
                "columnsHeight": "40"
            }
        },
        {
            "name": "columns",
            "defaultValue": "[]",
            "description": "<P>Sets the jqxTreeGrid's columns. </P>\n\r\n<UL><LI>text - string property which sets the column header's text. \r\n<LI>dataField - string property which sets the column's bound field. It should be unique and should point to a data field defined in the jqxDataAdapter's dataFields array. \r\n<LI>displayField - string property which sets the column's display field. It should be unique and should point to a data field defined in the jqxDataAdapter's dataFields array. \r\n<LI>sortable - boolean property which determines whether the column is sortable. \r\n<LI>filterable - boolean property which determines whether the column is filterable. \r\n<LI>hidden - boolean property which determines whether the column is visible or hidden. \r\n<LI>columnGroup - string property which determines the name of the column's parent group. It should point to a valid name defined in the <CODE>columnGroups</CODE>. \r\n<LI>autoCellHeight - boolean property which determines whether the cell's data wrapping is enabled. This property is set to <CODE>true</CODE> by default. When <CODE>autoRowHeight</CODE> is enabled and <CODE>autoCellHeight</CODE> is set to false, the cell's data will not be wrapped. \r\n<LI>renderer - callback function for custom rendering of the column's header.<LI>rendered - callback function which is called after the column's header rendering is completed.<LI>cellsRenderer - callback function which is called when a cell is being rendered. The result of that function should be valid and well-formatted HTML string. The cellsRenderer function has 4 parameters passed by jqxTreeGrid - row's key, column's data field, cell's value, row's data as an object of Key/Value pairs. <LI>columnType - string property which determines the column's type.<BR>Possible values: \r\n<UL>\r\n<LI>\"template\" - sets a custom editor as a default editor for the column. The editor should be created in the <CODE>createEditor</CODE> callback function. The editor should be synchronized with the cell's value in the <CODE>initEditor</CODE> callback. The editor's value should be retrieved in the <CODE>getEditorValue</CODE> callback function. \r\n<LI>\"custom\" - sets a custom editor as a default editor for a cell. That setting enables you to have different cell editors in the column. The editors should be created in the <CODE>createEditor</CODE> callback function which is called for each row when the <CODE>columnType</CODE> property is set to \"custom\". The editors should be synchronized with the cell's value in the <CODE>initEditor</CODE> callback. The editor's value should be retrieved in the <CODE>getEditorValue</CODE> callback function. </LI></UL>\r\n<LI>validation - callback function which is called when the jqxTreeGrid's edited row needs to be validated. The function has 2 parameters - edit cell and the cell's value. The function should return true or false, depending on the user's validation logic. It can also return a validation object with 2 fields - \"result\" - true or false, and \"message\" - validation string displayed to the users. <LI>initEditor - callback function which is called when an editor is opened. It has 5 parameters - row's key, cell's value, the editor element, cell's width and cell's height. The function can be used for adding some custom parameters to the editor. <LI>createEditor - callback function which is called just once when the cells editor is created. It has 5 parameters - row's key, cell's value, the editor element, cell's width and cell's height. The function can be used for adding some custom parameters to the editor. <LI>getEditorValue - callback function which could be used for overriding the value returned by the editor. It is useful for advanced scenarios with custom editors. It has 3 parameters - row's key, cell's value and the editor element. The result of the function is expected to be the editor's new value.<LI>cellsFormat - determines the Format string used for formatting the cell values.<BR><BR>Possible number strings: <BR>\"d\" - decimal numbers. <BR>\"f\" - floating-point numbers. <BR>\"n\" - integer numbers. <BR>\"c\" - currency numbers. <BR>\"p\" - percentage numbers. <BR><BR>For adding decimal places to the numbers, add a number after the formatting string. <BR>For example: \"c3\" displays a number in this format $25.256 <BR>Possible built-in Date formats: <BR><BR>// short date pattern d: \"M/d/yyyy\", <BR>// long date pattern D: \"dddd, MMMM dd, yyyy\", <BR>// short time pattern t: \"h:mm tt\", <BR>// long time pattern T: \"h:mm:ss tt\", <BR>// long date, short time pattern f: \"dddd, MMMM dd, yyyy h:mm tt\", <BR>// long date, long time pattern F: \"dddd, MMMM dd, yyyy h:mm:ss tt\", <BR>// month/day pattern M: \"MMMM dd\", <BR>// month/year pattern Y: \"yyyy MMMM\", <BR>// S is a sortable format that does not vary by culture S: \"yyyy\\u0027-\\u0027MM\\u0027-\\u0027dd\\u0027T\\u0027HH\\u0027:\\u0027mm\\u0027:\\u0027ss\" <BR><BR>Possible Date format strings: <BR><BR>\"d\"-the day of the month;<BR>\"dd\"-the day of the month; <BR>\"ddd\"-the abbreviated name of the day of the week;<BR>\"dddd\"- the full name of the day of the week;<BR>\"h\"-the hour, using a 12-hour clock from 1 to 12; <BR>\"hh\"-the hour, using a 12-hour clock from 01 to 12; <BR>\"H\"-the hour, using a 24-hour clock from 0 to 23;<BR>\"HH\"- the hour, using a 24-hour clock from 00 to 23; <BR>\"m\"-the minute, from 0 through 59;<BR>\"mm\"-the minutes,from 00 though59;<BR>\"M\"- the month, from 1 through 12;<BR>\"MM\"- the month, from 01 through 12;<BR>\"MMM\"-the abbreviated name of the month;<BR>\"MMMM\"-the full name of the month;<BR>\"s\"-the second, from 0 through 59; <BR>\"ss\"-the second, from 00 through 59; <BR>\"t\"- the first character of the AM/PM designator;<BR>\"tt\"-the AM/PM designator; <BR>\"y\"- the year, from 0 to 99; <BR>\"yy\"- the year, from 00 to 99; <BR>\"yyy\"-the year, with a minimum of three digits; <BR>\"yyyy\"-the year as a four-digit number; <BR>\r\n<LI>aggregates - array property which determines the column aggregates.<BR><BR>Aggregate functions: \r\n<UL>\r\n<LI>'avg' - Average aggregate \r\n<LI>'count' - Count aggregate \r\n<LI>'min' - Min aggregate \r\n<LI>'max' - Max aggregate \r\n<LI>'sum' - Sum aggregate \r\n<LI>'product' - Product aggregate \r\n<LI>'stdev' - Standard deviation on a sample. \r\n<LI>'stdevp' - Standard deviation on an entire population. \r\n<LI>'varp' - Variance on an entire population. \r\n<LI>'var' - Variance on a sample. </LI></UL><BR>Custom Aggregate<BR><PRE><CODE>\r\naggregates: [{ 'In Stock':\r\n    function (aggregatedValue, currentValue) {\r\n        if (currentValue) {\r\n            return aggregatedValue + 1;\r\n        }\r\n        return aggregatedValue;\r\n    }\r\n}\r\n</CODE></PRE><BR>Custom Aggregate which aggregates values from two columns <BR><PRE><CODE>\r\n{ text: 'Price', dataField: 'price', cellsAlign: 'right', cellsFormat: 'c2', aggregates: [{ '<B>Total</B>':\r\n            function (aggregatedValue, currentValue, column, record) {\r\n                var total = currentValue * parseInt(record['quantity']);\r\n                return aggregatedValue + total;\r\n            }\r\n        }]                  \r\n }\r\n</CODE></PRE><BR>'In Stock' - the aggregate's display name. The function has 2 params - the aggregated value and the current value. It should return an aggregated value. \r\n<LI>aggregatesRenderer - callback function which could be used for customization of the aggregates rendering. It has 1 parameter - the column's aggregates.<LI>align - string property which determines the alignment of the column's header. Possible values: 'left', 'center' or 'right' \r\n<LI>cellsAlign - string property which determines the alignment of the column's cells. Possible values: 'left', 'center' or 'right'. \r\n<LI>width - numeric property which determines the column's width. \r\n<LI>minWidth - numeric property which determines the column's minimum width. Default value: 25. \r\n<LI>maxWidth - numeric property which determines the column's maximum width. \r\n<LI>resizable - boolean property which determines whether the column is resizable. \r\n<LI>draggable - boolean property which determines whether the column is draggable. \r\n<LI>editable - boolean property which determines whether the column is editable. \r\n<LI>className - string property which sets a custom CSS class for the column's header \r\n<LI>cellClassName - string or function property which sets a custom CSS class for the column's cells. The value could be a \"string\" or \"Function\".<LI>pinned - boolean property which determines whether the column is pinned(frozen). </LI></UL>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/eYLAm/",
            "exampleDescription": "columns is set to a custom array",
            "dataType": "Array",
            "ts_dataType": "Array<any>",
            "subProperties": [
                {
                    "name": "dataField",
                    "dataType": "string",
                    "defaultValue": null
                },
                {
                    "name": "displayField",
                    "dataType": "string",
                    "defaultValue": null
                },
                {
                    "name": "text",
                    "dataType": "string",
                    "defaultValue": null
                },
                {
                    "name": "sortable",
                    "dataType": "boolean",
                    "defaultValue": true
                },
                {
                    "name": "editable",
                    "dataType": "boolean",
                    "defaultValue": true
                },
                {
                    "name": "hidden",
                    "dataType": "boolean",
                    "defaultValue": true
                },
                {
                    "name": "groupable",
                    "dataType": "boolean",
                    "defaultValue": true
                },
                {
                    "name": "renderer",
                    "dataType": "function",
                    "ts_dataType": "(text?: string, align?: string, height?: number) => string",
                    "defaultValue": null
                },
                {
                    "name": "cellsRenderer",
                    "dataType": "function",
                    "ts_dataType": "(row?: number, column?: string, value?: any, rowData?: any) => string",
                    "defaultValue": null
                },
                {
                    "name": "aggregatesRenderer",
                    "dataType": "function",
                    "defaultValue": null
                },
                {
                    "name": "columnType",
                    "dataType": "string",
                    "defaultValue": null
                },
                {
                    "name": "validation",
                    "dataType": "function",
                    "ts_dataType": "(cell?: any, value?: any) => any",
                    "defaultValue": null
                },
                {
                    "name": "initEditor",
                    "dataType": "function",
                    "ts_dataType": "(row?: string | number, cellValue?: string | number, editor?: any, cellText?: string, width?:number, height?: number) => void",
                    "defaultValue": null
                },
                {
                    "name": "createEditor",
                    "dataType": "function",
                    "ts_dataType": "(row?: string | number, cellValue?: string | number, editor?: any, cellText?: string, width?:number, height?: number) => void",
                    "defaultValue": null
                },
                {
                    "name": "destroyEditor",
                    "dataType": "function",
                    "ts_dataType": "any",
                    "defaultValue": null
                },
                {
                    "name": "getEditorValue",
                    "dataType": "function",
                    "ts_dataType": "(row?: string | number, cellValue?: string | number, editor?: any) => void",
                    "defaultValue": null
                },
                {
                    "name": "validation",
                    "dataType": "function",
                    "ts_dataType": "(cell?: any, value:? any) => boolean",
                    "defaultValue": null
                },
                {
                    "name": "cellsFormat",
                    "dataType": "string",
                    "defaultValue": ""
                },
                {
                    "name": "align",
                    "dataType": "string",
                    "ts_dataType": "enum:TreeGridHorizontalAlign",
                    "defaultValue": "left"
                },
                {
                    "name": "cellsAlign",
                    "dataType": "string",
                    "ts_dataType": "enum:TreeGridHorizontalAlign",
                    "defaultValue": "left"
                },
                {
                    "name": "width",
                    "dataType": "string",
                    "ts_dataType": "number | string",
                    "defaultValue": "auto"
                },
                {
                    "name": "minWidth",
                    "dataType": "string",
                    "ts_dataType": "number | string",
                    "defaultValue": "25"
                },
                {
                    "name": "maxWidth",
                    "dataType": "string",
                    "ts_dataType": "number | string",
                    "defaultValue": "auto"
                },
                {
                    "name": "pinned",
                    "dataType": "boolean",
                    "defaultValue": false
                },
                {
                    "name": "resizable",
                    "dataType": "boolean",
                    "defaultValue": true
                },
                {
                    "name": "filterable",
                    "dataType": "boolean",
                    "defaultValue": true
                },
                {
                    "name": "className",
                    "dataType": "string",
                    "defaultValue": ""
                },
                {
                    "name": "cellClassName",
                    "dataType": "string",
                    "defaultValue": ""
                },
                {
                    "name": "nullable",
                    "dataType": "boolean",
                    "defaultValue": null
                },
                {
                    "name": "draggable",
                    "dataType": "boolean",
                    "defaultValue": true
                },
                {
                    "name": "exportable",
                    "dataType": "boolean",
                    "defaultValue": true
                },
                {
                    "name": "rendered",
                    "dataType": "function",
                    "ts_dataType": "(element?: any, align?: string, height?: number) => boolean",
                    "defaultValue": null
                },
                {
                    "name": "autoCellHeight",
                    "dataType": "boolean",
                    "defaultValue": true
                },
                {
                    "name": "columnGroup",
                    "dataType": "string",
                    "defaultValue": null
                }
            ]
        },
        {
            "name": "columnGroups",
            "defaultValue": "[]",
            "description": "<P>Sets the jqxTreeGrid's column groups. </P>\n\r\n<UL><LI>parentGroup - string property which determines the parent group's name. \r\n<LI>name - string property which determines the group's name. \r\n<LI>align - string property which determines the column header's alignment. Possible values: 'left', 'center' or 'right'. </LI></UL>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>columnGroups</CODE> property. </P>\n<PRE class=code style=\"MAX-WIDTH: 600px; WIDTH: 600px; MARGIN: 0px\">// prepare the data<DIV>var source =<DIV>{<DIV>    dataType: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"xml\"</SPAN>,<DIV>    dataFields: [<DIV>            { name: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'SupplierName', type: 'string'</SPAN> },<DIV>            { name: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'Quantity', type: 'number'</SPAN> },<DIV>            { name: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'OrderDate', type: 'date'</SPAN> },<DIV>            { name: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'OrderAddress', type: 'string'</SPAN> },<DIV>            { name: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'Freight', type: 'number'</SPAN> },<DIV>            { name: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'Price', type: 'number'</SPAN> },<DIV>            { name: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'City', type: 'string'</SPAN> },<DIV>            { name: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'ProductName', type: 'string'</SPAN> },<DIV>            { name: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'Address', type: 'string'</SPAN> }<DIV>    ], <DIV>    url: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'../sampledata/orderdetailsextended.xml'</SPAN>,<DIV>    root: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'DATA'</SPAN>,<DIV>    record: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'ROW'</SPAN><DIV>};<DIV>var dataAdapter = new $.jqx.dataAdapter(source, {<DIV>    loadComplete: function () {<DIV><DIV>    }<DIV>});<DIV>// create jqxTreeGrid.<DIV>$(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"#treeGrid\"</SPAN>).jqxTreeGrid(<DIV>{<DIV>    width: 690,<DIV>    height: 400,<DIV>    source: dataAdapter,<DIV>    pageable: true,<DIV>    altRows: true,<DIV>    columnsResize: true,<DIV>    columns: [<DIV>        { text: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'Supplier Name', cellsAlign: 'center', align: 'center', dataField: 'SupplierName'</SPAN>, width: 110 },<DIV>        { text: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'Name', columngroup: 'ProductDetails', cellsAlign: 'center', align: 'center', dataField: 'ProductName'</SPAN>, width: 120 },<DIV>        { text: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'Quantity', columngroup: 'ProductDetails', dataField: 'Quantity', cellsFormat: 'd', cellsAlign: 'center', align: 'center'</SPAN>, width: 80 },<DIV>        { text: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'Freight', columngroup: 'OrderDetails', dataField: 'Freight', cellsFormat: 'd', cellsAlign: 'center', align: 'center'</SPAN>, width: 100 },<DIV>        { text: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'Order Date', columngroup: 'OrderDetails', cellsAlign: 'center', align: 'center', cellsFormat: 'd', dataField: 'OrderDate'</SPAN>, width: 100 },<DIV>        { text: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'Order Address', columngroup: 'OrderDetails', cellsAlign: 'center', align: 'center', dataField: 'OrderAddress'</SPAN>, width: 100 },<DIV>        { text: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'Price', columngroup: 'ProductDetails', dataField: 'Price', cellsFormat: 'c2', align: 'center', cellsAlign: 'center'</SPAN>, width: 70 },<DIV>        { text: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'Address', columngroup: 'Location', cellsAlign: 'center', align: 'center', dataField: 'Address'</SPAN>, width: 120 },<DIV>        { text: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'City', columngroup: 'Location', cellsAlign: 'center', align: 'center', dataField: 'City'</SPAN>, width: 80 }<DIV>    ],<DIV>    columnGroups: <DIV>    [<DIV>        { text: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'Product Details', align: 'center', name: 'ProductDetails'</SPAN> },<DIV>        { text: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'Order Details', parentGroup: 'ProductDetails', align: 'center', name: 'OrderDetails'</SPAN> },<DIV>        { text: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'Location', align: 'center', name: 'Location'</SPAN> }<DIV>    ]<DIV>});<DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/2Q78g/",
            "exampleDescription": "columnGroups is set to a custom array",
            "dataType": "Array",
            "ts_dataType": "Array<any>",
            "subProperties": [
                {
                    "name": "parentgroup",
                    "dataType": "string",
                    "defaultValue": ""
                },
                {
                    "name": "name",
                    "dataType": "string",
                    "defaultValue": ""
                },
                {
                    "name": "align",
                    "dataType": "string",
                    "ts_dataType": "enum:TreeGridHorizontalAlign",
                    "defaultValue": ""
                }
            ],
            "exampleName": "jqxtreegrid_columnGroups",
            "exampleInit": {
                "columnGroups": "columnGroups",
                "columns": "columns",
                "exampleData": "moreThanOnePropsExample;[{ name: 'Group', text: 'Name' }];[\n            { text: 'FirstName', dataField: 'FirstName', columngroup: 'Group', width: 150 },\n            { text: 'LastName', dataField: 'LastName', columngroup: 'Group', width: 120 },\n            { text: 'Title', dataField: 'Title', width: 200 }\n        ]"
            },
            "customExample": {
                "codeType": "custom",
                "code": "&lt;template>\n  &lt;JqxTreeGrid ref=\"myTreeGrid\"\n  :source=\"source\" :columns=\"columns\" :columnGroups=\"columnGroups\" />\n&lt;/template>\n \n&lt;script>\n  import JqxTreeGrid from 'jqwidgets-scripts/jqwidgets-vue/vue_jqxtreegrid.vue';\n \n  export default {\n    components: {\n      JqxTreeGrid\n    },\n    data: function () {\n      return {\n        source: new $.jqx.dataAdapter(this.data),\n        columnGroups: [{ name: 'Group', text: 'Name' }],\n        columns: [\n          { text: 'FirstName', dataField: 'FirstName', columngroup: 'Group', width: 150 },\n          { text: 'LastName', dataField: 'LastName', columngroup: 'Group', width: 120 },\n          { text: 'Title', dataField: 'Title', width: 200 }\n        ]\n      }\n    },\n    beforeCreate: function () {\n      let employees = [{\n        'EmployeeID': 2,\n        'FirstName': 'Andrew',\n        'LastName': 'Fuller',\n        'Title': 'Vice President, Sales',\n        'expanded': 'true',\n        children: [{\n          'EmployeeID': 8,\n          'FirstName': 'Laura',\n          'LastName': 'Callahan',\n          'Title': 'Inside Sales Coordinator'\n        }, {\n          'EmployeeID': 5,\n          'FirstName': 'Steven',\n          'LastName': 'Buchanan',\n          'Title': 'Sales Manager',\n          'expanded': 'true',\n          children: [{\n            'EmployeeID': 6,\n            'FirstName': 'Michael',\n            'LastName': 'Suyama',\n            'Title': 'Sales Representative'\n          }, {\n            'EmployeeID': 7,\n            'FirstName': 'Robert',\n            'LastName': 'King',\n            'Title': 'Sales Representative'\n          }]\n        }]\n      }];\n      this.data = {\n        dataType: \"json\",\n        dataFields: [\n          { name: 'EmployeeID', type: 'number' },\n          { name: 'FirstName', type: 'string' },\n          { name: 'LastName', type: 'string' },\n          { name: 'Title', type: 'string' },\n          { name: 'children', type: 'array' },\n          { name: 'expanded', type: 'bool' }\n        ],\n        hierarchy: { root: 'children' },\n        id: 'EmployeeID',\n        localData: employees\n      };\n    },\n  }\n&lt;/script>"
            }
        },
        {
            "name": "columnsResize",
            "defaultValue": "false",
            "description": "<P>Sets or gets the jqxTreeGrid's columnsResize. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>columnsResize</CODE> property. </P>\n<PRE><CODE>$('#treeGrid').jqxTreeGrid({columnsResize: false});</CODE></PRE>\n\r\n<P>Get the <CODE>columnsResize</CODE> property. </P>\n<PRE><CODE>var columnsResize = $('#treeGrid').jqxTreeGrid('columnsResize');</CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/w6haY/",
            "exampleDescription": "columnsResize is set to true",
            "dataType": "boolean",
            "exampleInit": {
                "columnsResize": "true"
            }
        },
        {
            "name": "columnsReorder",
            "defaultValue": "false",
            "description": "<P>Sets or gets the jqxTreeGrid's columnsReorder. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>columnsReorder</CODE> property. </P>\n<PRE><CODE>$('#treeGrid').jqxTreeGrid({columnsReorder: false});</CODE></PRE>\n\r\n<P>Get the <CODE>columnsReorder</CODE> property. </P>\n<PRE><CODE>var columnsReorder = $('#treeGrid').jqxTreeGrid('columnsReorder');</CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/LQAfD/",
            "exampleDescription": "columnsReorder is set to true",
            "dataType": "boolean",
            "exampleInit": {
                "columnsReorder": "true"
            }
        },
        {
            "name": "disabled",
            "defaultValue": "false",
            "description": "<P>Sets or gets whether the jqxTreeGrid is disabled. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>disabled</CODE> property. </P>\n<PRE><CODE>$('#treeGrid').jqxTreeGrid({ disabled:true }); </CODE></PRE>\n\r\n<P>Get the <CODE>disabled</CODE> property. </P>\n<PRE><CODE>var disabled = $('#treeGrid').jqxTreeGrid('disabled');</CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/582WX/",
            "exampleDescription": "disabled is set to true",
            "dataType": "boolean",
            "exampleInit": {
                "disabled": "true"
            }
        },
        {
            "name": "editable",
            "defaultValue": "false",
            "description": "<P>Sets or gets whether the jqxTreeGrid editing is enabled. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>editable</CODE> property. </P>\n<PRE><CODE>$('#treeGrid').jqxTreeGrid({ editable:true }); </CODE></PRE>\n\r\n<P>Get the <CODE>editable</CODE> property. </P>\n<PRE><CODE>var editable = $('#treeGrid').jqxTreeGrid('editable');</CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/fwasb/",
            "exampleDescription": "editable is set to true",
            "dataType": "boolean",
            "exampleInit": {
                "editable": "true"
            }
        },
        {
            "name": "editSettings",
            "defaultValue": "{ saveOnPageChange: true, saveOnBlur: true, saveOnSelectionChange: true, cancelOnEsc: true, saveOnEnter: true, editSingleCell: false, editOnDoubleClick: true, editOnF2: true }",
            "description": "<P>Sets or gets the jqxTreeGrid's edit settings. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>editSettings</CODE> property. </P>\n<PRE><CODE>$('#treeGrid').jqxTreeGrid({ editSettings:{ saveOnPageChange: true, saveOnBlur: true, saveOnSelectionChange: false, cancelOnEsc: true, saveOnEnter: true, editOnDoubleClick: true, editOnF2: true } }); </CODE></PRE>\n\r\n<P>Get the <CODE>editSettings</CODE> property. </P>\n<PRE><CODE>var editSettings = $('#treeGrid').jqxTreeGrid('editSettings');</CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/3zGhL/",
            "exampleDescription": "editSettings is set to a custom object",
            "dataType": "object",
            "ts_dataType": "TreeGridEditSettings",
            "exampleInit": {
                "editable": "true",
                "editSettings": "editSettings",
                "exampleData": "{\n            saveOnPageChange: true,\n            saveOnBlur: true,\n            saveOnSelectionChange: true,\n            cancelOnEsc: true,\n            saveOnEnter: true,\n            editOnDoubleClick: true,\n            editOnF2: false\n        }"
            }
        },
        {
            "name": "exportSettings",
            "defaultValue": "{columnsHeader: true, hiddenColumns: false, serverURL: null, characterSet: null, collapsedRecords: false, recordsInView: true,fileName: \"jqxTreeGrid\"}",
            "description": "<P>Determines the Data Export settings used by jqxTreeGrid when <CODE>exportData</CODE> is called. See also the <CODE>exportData</CODE> method. </P>\n\r\n<UL><LI>columnsHeader - boolean value. Determines whether the columns header is exported. Note that Stacked Headers are not exported. \r\n<LI>hiddenColumns - boolean value. Determines whether the hidden columns would be exported. \r\n<LI>serverURL - string or Null. Determines the Exporter File's URL. \r\n<LI>characterSet - string value. Determines the character set used by the exporter. \r\n<LI>collapsedRecords - boolean value. Determines whether the collapsed records would be included in the export. \r\n<LI>recordsInView - boolean value. Determines whether the filtered/sorted set of records would be exported. Otherwise, the widget would not take into account the filtering and sorting. \r\n<LI>fileName - string value. Determines the export file's name. </LI></UL>\n\r\n<H4>Code example </H4>\n<PRE style=\"OVERFLOW: auto; MAX-WIDTH: 630px; HEIGHT: 400px; WIDTH: 630px; MAX-HEIGHT: 400px\"><CODE>\r\nvar employees = [{ \"EmployeeID\": 1, \"FirstName\": \"Nancy\", \"LastName\": \"Davolio\", \"ReportsTo\": 2, \"Country\": \"USA\", \"Title\": \"Sales Representative\", \"HireDate\": \"1992-05-01 00:00:00\", \"BirthDate\": \"1948-12-08 00:00:00\", \"City\": \"Seattle\", \"Address\": \"507 - 20th Ave. E.Apt. 2A\" }, { \"EmployeeID\": 2, \"FirstName\": \"Andrew\", \"LastName\": \"Fuller\", \"ReportsTo\": null, \"Country\": \"USA\", \"Title\": \"Vice President, Sales\", \"HireDate\": \"1992-08-14 00:00:00\", \"BirthDate\": \"1952-02-19 00:00:00\", \"City\": \"Tacoma\", \"Address\": \"908 W. Capital Way\" }, { \"EmployeeID\": 3, \"FirstName\": \"Janet\", \"LastName\": \"Leverling\", \"ReportsTo\": 2, \"Country\": \"USA\", \"Title\": \"Sales Representative\", \"HireDate\": \"1992-04-01 00:00:00\", \"BirthDate\": \"1963-08-30 00:00:00\", \"City\": \"Kirkland\", \"Address\": \"722 Moss Bay Blvd.\" }, { \"EmployeeID\": 4, \"FirstName\": \"Margaret\", \"LastName\": \"Peacock\", \"ReportsTo\": 2, \"Country\": \"USA\", \"Title\": \"Sales Representative\", \"HireDate\": \"1993-05-03 00:00:00\", \"BirthDate\": \"1937-09-19 00:00:00\", \"City\": \"Redmond\", \"Address\": \"4110 Old Redmond Rd.\" }, { \"EmployeeID\": 5, \"FirstName\": \"Steven\", \"LastName\": \"Buchanan\", \"ReportsTo\": 2, \"Country\": \"UK\", \"Title\": \"Sales Manager\", \"HireDate\": \"1993-10-17 00:00:00\", \"BirthDate\": \"1955-03-04 00:00:00\", \"City\": \"London\", \"Address\": \"14 Garrett Hill\" }, { \"EmployeeID\": 6, \"FirstName\": \"Michael\", \"LastName\": \"Suyama\", \"ReportsTo\": 5, \"Country\": \"UK\", \"Title\": \"Sales Representative\", \"HireDate\": \"1993-10-17 00:00:00\", \"BirthDate\": \"1963-07-02 00:00:00\", \"City\": \"London\", \"Address\": \"Coventry House Miner Rd.\" }, { \"EmployeeID\": 7, \"FirstName\": \"Robert\", \"LastName\": \"King\", \"ReportsTo\": 5, \"Country\": \"UK\", \"Title\": \"Sales Representative\", \"HireDate\": \"1994-01-02 00:00:00\", \"BirthDate\": \"1960-05-29 00:00:00\", \"City\": \"London\", \"Address\": \"Edgeham Hollow Winchester Way\" }, { \"EmployeeID\": 8, \"FirstName\": \"Laura\", \"LastName\": \"Callahan\", \"ReportsTo\": 2, \"Country\": \"USA\", \"Title\": \"Inside Sales Coordinator\", \"HireDate\": \"1994-03-05 00:00:00\", \"BirthDate\": \"1958-01-09 00:00:00\", \"City\": \"Seattle\", \"Address\": \"4726 - 11th Ave. N.E.\" }, { \"EmployeeID\": 9, \"FirstName\": \"Anne\", \"LastName\": \"Dodsworth\", \"ReportsTo\": 5, \"Country\": \"UK\", \"Title\": \"Sales Representative\", \"HireDate\": \"1994-11-15 00:00:00\", \"BirthDate\": \"1966-01-27 00:00:00\", \"City\": \"London\", \"Address\": \"7 Houndstooth Rd.\" }];\r\n//// prepare the data\r\nvar source =\r\n{\r\n    dataType: \"json\",\r\n    dataFields: [\r\n        { name: 'EmployeeID', type: 'number' },\r\n        { name: 'ReportsTo', type: 'number' },\r\n        { name: 'FirstName', type: 'string' },\r\n        { name: 'LastName', type: 'string' },\r\n        { name: 'Country', type: 'string' },\r\n        { name: 'City', type: 'string' },\r\n        { name: 'Address', type: 'string' },\r\n        { name: 'Title', type: 'string' },\r\n        { name: 'HireDate', type: 'date' },\r\n        { name: 'BirthDate', type: 'date' }\r\n    ],\r\n    hierarchy:\r\n    {\r\n        keyDataField: { name: 'EmployeeID' },\r\n        parentDataField: { name: 'ReportsTo' }\r\n    },\r\n    id: 'EmployeeID',\r\n    localData: employees\r\n};\r\nvar dataAdapter = new $.jqx.dataAdapter(source);\r\n// create Tree Grid\r\n$(\"#treeGrid\").jqxTreeGrid(\r\n{\r\n    width: 600,\r\n    source: dataAdapter,\r\n    ready: function () {\r\n        $(\"#treeGrid\").jqxTreeGrid('expandRow', '2');\r\n    },\r\n    columns: [\r\n        { text: 'First Name', dataField: 'FirstName', width: 150 },\r\n        { text: 'Last Name', dataField: 'LastName', width: 120 },\r\n        { text: 'Title', dataField: 'Title', width: 160 },\r\n        { text: 'Birth Date', dataField: 'BirthDate', cellsFormat: 'd', width: 120 },\r\n        { text: 'Hire Date', dataField: 'HireDate', cellsFormat: 'd', width: 120 },\r\n        { text: 'Address', dataField: 'Address', width: 250 },\r\n        { text: 'City', dataField: 'City', width: 120 },\r\n        { text: 'Country', dataField: 'Country', width: 120 }\r\n    ]\r\n});\r\n$(\"#excelExport\").jqxButton();\r\n$(\"#xmlExport\").jqxButton();\r\n$(\"#csvExport\").jqxButton();\r\n$(\"#tsvExport\").jqxButton();\r\n$(\"#htmlExport\").jqxButton();\r\n$(\"#jsonExport\").jqxButton();\r\n$(\"#excelExport\").click(function () {\r\n    $(\"#treeGrid\").jqxTreeGrid('exportData', 'xls');\r\n});\r\n$(\"#xmlExport\").click(function () {\r\n    $(\"#treeGrid\").jqxTreeGrid('exportData', 'xml');\r\n});\r\n$(\"#csvExport\").click(function () {\r\n    $(\"#treeGrid\").jqxTreeGrid('exportData', 'csv');\r\n});\r\n$(\"#tsvExport\").click(function () {\r\n    $(\"#treeGrid\").jqxTreeGrid('exportData', 'tsv');\r\n});\r\n$(\"#htmlExport\").click(function () {\r\n    $(\"#treeGrid\").jqxTreeGrid('exportData', 'html');\r\n});\r\n$(\"#jsonExport\").click(function () {\r\n    $(\"#treeGrid\").jqxTreeGrid('exportData', 'json');\r\n});\r\n                        </CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/5JkK3/",
            "exampleDescription": "exportSettings is set to a custom object",
            "dataType": "object",
            "ts_dataType": "TreeGridExportSettings",
            "exampleInit": {
                "exportSettings": "exportSettings",
                "exampleData": "{\n            columnsHeader: true,\n            collapsedRecords: true,\n            hiddenColumns: false\n        }"
            }
        },
        {
            "name": "enableHover",
            "defaultValue": "true",
            "description": "<P>Sets or gets whether row highlighting is enabled. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>enableHover</CODE> property. </P>\n<PRE><CODE>$('#treeGrid').jqxTreeGrid({enableHover: false }); </CODE></PRE>\n\r\n<P>Get the <CODE>enableHover</CODE> property. </P>\n<PRE><CODE>var enableHover = $('#treeGrid').jqxTreeGrid('enableHover'); </CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/FmbG9/",
            "exampleDescription": "enableHover is set to false",
            "dataType": "boolean",
            "exampleInit": {
                "enableHover": "false"
            }
        },
        {
            "name": "enableBrowserSelection",
            "defaultValue": "false",
            "description": "<P>Enables or disables the default text selection of the web browser. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>enableBrowserSelection</CODE> property. </P>\n<PRE><CODE>$('#treeGrid').jqxTreeGrid({enableBrowserSelection: true }); </CODE></PRE>\n\r\n<P>Get the <CODE>enableBrowserSelection</CODE> property. </P>\n<PRE><CODE>var enableBrowserSelection = $('#treeGrid').jqxTreeGrid('enableBrowserSelection'); </CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/8wY9T/",
            "exampleDescription": "enableBrowserSelection is set to true",
            "dataType": "boolean",
            "exampleInit": {
                "enableBrowserSelection": "true"
            }
        },
        {
            "name": "filterable",
            "defaultValue": "false",
            "description": "<P>Enables/Disables the filtering feature. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>filterable</CODE> property. </P>\n<PRE><CODE>$('#treeGrid').jqxTreeGrid({filterable: true}); </CODE></PRE>\n\r\n<P>Get the <CODE>filterable</CODE> property. </P>\n<PRE><CODE>var filterable = $('#treeGrid').jqxTreeGrid('filterable'); </CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/6sWLP/",
            "exampleDescription": "filterable is set to true",
            "dataType": "boolean",
            "exampleInit": {
                "filterable": "true"
            }
        },
        {
            "name": "filterHeight",
            "defaultValue": "30",
            "description": "<P>Sets or gets the Filter Element's height. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>filterHeight</CODE> property. </P>\n<PRE><CODE>$('#treeGrid').jqxTreeGrid({filterHeight: 40}); </CODE></PRE>\n\r\n<P>Get the <CODE>filterHeight</CODE> property. </P>\n<PRE><CODE>var filterHeight = $('#treeGrid').jqxTreeGrid('filterHeight'); </CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/sJayM/",
            "exampleDescription": "filterHeight is set to 40",
            "dataType": "number",
            "exampleInit": {
                "filterable": "true",
                "filterHeight": "40"
            }
        },
        {
            "name": "filterMode",
            "defaultValue": "\"default\"",
            "description": "<P>Determines the Filter's mode. Possible values: <CODE>\"default\"</CODE>, <CODE>\"simple\"</CODE> and <CODE>\"advanced\"</CODE> </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>filterMode</CODE> property. </P>\n<PRE><CODE>$('#treeGrid').jqxTreeGrid({filterMode: \"advanced\"}); </CODE></PRE>\n\r\n<P>Get the <CODE>filterMode</CODE> property. </P>\n<PRE><CODE>var filterMode = $('#treeGrid').jqxTreeGrid('filterMode'); </CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/AkEBb/",
            "exampleDescription": "filterMode is set to 'advanced'",
            "dataType": "string",
            "ts_dataType": "enum:TreeGridFilterMode",
            "exampleInit": {
                "filterable": "true",
                "filterMode": "advanced"
            }
        },
        {
            "name": "height",
            "defaultValue": "null",
            "description": "<P>Sets or gets the jqxTreeGrid's height. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>height</CODE> property. </P>\n<PRE><CODE>$('#treeGrid').jqxTreeGrid({height:\"400px\"});</CODE></PRE>\n\r\n<P>Get the <CODE>height</CODE> property. </P>\n<PRE><CODE>var height = $('#treeGrid').jqxTreeGrid('height');</CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/34eW3/",
            "exampleDescription": "height is set to 200",
            "dataType": "number",
            "ts_dataType": "number | string",
            "exampleInit": {
                "height": "200"
            }
        },
        {
            "name": "hierarchicalCheckboxes",
            "defaultValue": "false",
            "description": "<P>Determines whether changing a checkbox state affects the parent/child records check state. Note: \"checkboxes\" property value is expected to be true. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>hierarchicalCheckboxes</CODE> property. </P>\n<PRE><CODE>$('#treeGrid').jqxTreeGrid({hierarchicalCheckboxes:true, checkboxes: true});</CODE></PRE>\n\r\n<P>Get the <CODE>hierarchicalCheckboxes</CODE> property. </P>\n<PRE><CODE>var hierarchicalCheckboxes = $('#treeGrid').jqxTreeGrid('hierarchicalCheckboxes');</CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/mbLb4n7o/",
            "exampleDescription": "hierarchicalCheckboxes is set to true",
            "dataType": "boolean",
            "exampleInit": {
                "checkboxes": "true",
                "hierarchicalCheckboxes": "true"
            }
        },
        {
            "name": "icons",
            "defaultValue": "false",
            "description": "<P>Determines whether icons are displayed or not. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>icons</CODE> property. </P>\n<PRE><CODE>$('#treeGrid').jqxTreeGrid({icons: true}); </CODE></PRE>\n<CODE>icons</CODE>\n<CODE>Icon's URL</CODE>\n<CODE>false</CODE>\n\r\n<UL><LI>Row Key/ID - unique ID which identifies the row. \r\n<LI>Row Data - the row as a set of Key/Value pairs. </LI></UL>\n<PRE><CODE>\r\nicons: function (rowKey, dataRow) {\r\n    var level = dataRow.level;\r\n    if (level == 0) {\r\n        return \"../../images/img1.png\";\r\n    }\r\n    return false;\r\n}\r\n</CODE></PRE>\n\r\n<P>Get the <CODE>icons</CODE> property. </P>\n<PRE><CODE>var icons = $('#treeGrid').jqxTreeGrid('icons'); </CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/jDX6C/",
            "exampleDescription": "icons is set to true",
            "dataType": "function | boolean",
            "ts_dataType": "any",
            "exampleInit": {
                "icons": "true"
            },
            "customExample": {
                "codeType": "custom",
                "code": "&lt;template>\n  &lt;JqxTreeGrid ref=\"myTreeGrid\"\n  :source=\"source\" :columns=\"columns\" :icons=\"true\" />\n&lt;/template>\n \n&lt;script>\n  import JqxTreeGrid from 'jqwidgets-scripts/jqwidgets-vue/vue_jqxtreegrid.vue';\n \n  export default {\n    components: {\n      JqxTreeGrid\n    },\n    data: function () {\n      return {\n        source: new $.jqx.dataAdapter(this.data, {\n          beforeLoadComplete: (records) => {\n            this.addIcons(records[0]);\n            return records;\n          }\n        }),\n        columns: [\n          { text: 'FirstName', dataField: 'FirstName', width: 150, aggregates: ['count'] },\n          { text: 'LastName', dataField: 'LastName', width: 120 },\n          { text: 'Title', dataField: 'Title', width: 200 }\n        ]\n      }\n    },\n    beforeCreate: function () {\n      let employees = [{\n        'EmployeeID': 2,\n        'FirstName': 'Andrew',\n        'LastName': 'Fuller',\n        'Title': 'Vice President, Sales',\n        'expanded': 'true',\n        children: [{\n          'EmployeeID': 8,\n          'FirstName': 'Laura',\n          'LastName': 'Callahan',\n          'Title': 'Inside Sales Coordinator'\n        }, {\n          'EmployeeID': 5,\n          'FirstName': 'Steven',\n          'LastName': 'Buchanan',\n          'Title': 'Sales Manager',\n          'expanded': 'true',\n          children: [{\n            'EmployeeID': 6,\n            'FirstName': 'Michael',\n            'LastName': 'Suyama',\n            'Title': 'Sales Representative'\n          }, {\n            'EmployeeID': 7,\n            'FirstName': 'Robert',\n            'LastName': 'King',\n            'Title': 'Sales Representative'\n          }]\n        }]\n      }];\n      this.data = {\n        dataType: \"json\",\n        dataFields: [\n          { name: 'EmployeeID', type: 'number' },\n          { name: 'FirstName', type: 'string' },\n          { name: 'LastName', type: 'string' },\n          { name: 'Title', type: 'string' },\n          { name: 'children', type: 'array' },\n          { name: 'expanded', type: 'bool' }\n        ],\n        hierarchy: { root: 'children' },\n        id: 'EmployeeID',\n        localData: employees\n      };\n    },\n    methods: {\n      addIcons: function (record) {\n        var imgUrl = \"https://cdn2.iconfinder.com/data/icons/flat-ui-icons-24-px/24/man-24-16.png\";\n        record.icon = imgUrl;\n        let children = record.children;\n        if (children) {\n          for (let i = 0; i &lt; children.length; i++) {\n            this.addIcons(children[i]);\n          }\n        }\n      }\n    }\n  }\n&lt;/script>"
            }
        },
        {
            "name": "incrementalSearch",
            "defaultValue": "true",
            "description": "<P>Determines whether the incremental search is enabled. The feature allows you to quickly find and select data records by typing when the widget is on focus. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>incrementalSearch</CODE> property. </P>\n<PRE><CODE>$('#treeGrid').jqxTreeGrid({incrementalSearch:false});</CODE></PRE>\n\r\n<P>Get the <CODE>incrementalSearch</CODE> property. </P>\n<PRE><CODE>var incrementalSearch = $('#treeGrid').jqxTreeGrid('incrementalSearch');</CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/R9dmJ/",
            "exampleDescription": "incrementalSearch is set to false",
            "dataType": "boolean",
            "exampleInit": {
                "incrementalSearch": "false"
            }
        },
        {
            "name": "localization",
            "defaultValue": "default localization strings.",
            "description": "<P>Applies a localization to the jqxTreeGrid's strings. </P>\n<PRE class=code style=\"MAX-WIDTH: 600px; WIDTH: 600px; MARGIN: 0px\">{           <DIV>        // separator of parts of a date (e.g. <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'/'</SPAN> in 11/05/1955)<DIV>\t<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'/'</SPAN>: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"/\"</SPAN>,<DIV>\t// separator of parts of a time (e.g. <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">':'</SPAN> in 05:44 PM)<DIV>\t<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">':'</SPAN>: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\":\"</SPAN>,<DIV>\t// the first day of the week (0 = Sunday, 1 = Monday, etc)<DIV>\tfirstDay: 0,<DIV>\tdays: {<DIV>\t\t// full day names<DIV>\t\tnames: [<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"</SPAN>],<DIV>\t\t// abbreviated day names<DIV>\t\tnamesAbbr: [<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"</SPAN>],<DIV>\t\t// shortest day names<DIV>\t\tnamesShort: [<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"</SPAN>]<DIV>\t},<DIV>\tmonths: {<DIV>\t\t// full month names (13 months for lunar calendards -- 13th month should be \"\" if not lunar)<DIV>\t\tnames: [<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\", \"\"</SPAN>],<DIV>\t\t// abbreviated month names<DIV>\t\tnamesAbbr: [<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\", \"\"</SPAN>]<DIV>\t},<DIV>\t// AM and PM designators in one of these forms:<DIV>\t// The usual view, and the upper and lower case versions<DIV>\t//      [standard,lowercase,uppercase]<DIV>\t// The culture does not use AM or PM (likely all standard date formats use 24 hour time)<DIV>\t//      null<DIV>\tAM: [<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"AM\", \"am\", \"AM\"</SPAN>],<DIV>\tPM: [<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"PM\", \"pm\", \"PM\"</SPAN>],<DIV>\teras: [<DIV>\t// eras in reverse chronological order.<DIV>\t// name: the name of the era in this culture (e.g. A.D., C.E.)<DIV>\t// start: when the era starts in ticks (gregorian, gmt), null if it is the earliest supported era.<DIV>\t// offset: offset in years from gregorian calendar<DIV>\t{ <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"name\": \"A.D.\", \"start\": null, \"offset\"</SPAN>: 0 }<DIV>\t],<DIV>\ttwoDigitYearMax: 2029,<DIV>\tpatterns: {<DIV>\t\t// short date pattern<DIV>\t\td: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"M/d/yyyy\"</SPAN>,<DIV>\t\t// long date pattern<DIV>\t\tD: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"dddd, MMMM dd, yyyy\"</SPAN>,<DIV>\t\t// short time pattern<DIV>\t\tt: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"h:mm tt\"</SPAN>,<DIV>\t\t// long time pattern<DIV>\t\tT: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"h:mm:ss tt\"</SPAN>,<DIV>\t\t// long date, short time pattern<DIV>\t\tf: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"dddd, MMMM dd, yyyy h:mm tt\"</SPAN>,<DIV>\t\t// long date, long time pattern<DIV>\t\tF: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"dddd, MMMM dd, yyyy h:mm:ss tt\"</SPAN>,<DIV>\t\t// month/day pattern<DIV>\t\tM: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"MMMM dd\"</SPAN>,<DIV>\t\t// month/year pattern<DIV>\t\tY: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"yyyy MMMM\"</SPAN>,<DIV>\t\t// S is a sortable format that does not vary by culture<DIV>\t\tS: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"yyyy\\u0027-\\u0027MM\\u0027-\\u0027dd\\u0027T\\u0027HH\\u0027:\\u0027mm\\u0027:\\u0027ss\"</SPAN>,<DIV>\t\t// formatting of dates in MySQL DataBases<DIV>\t\tISO: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"yyyy-MM-dd hh:mm:ss\"</SPAN>,<DIV>\t\tISO2: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"yyyy-MM-dd HH:mm:ss\"</SPAN>,<DIV>\t\td1: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"dd.MM.yyyy\"</SPAN>,<DIV>\t\td2: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"dd-MM-yyyy\"</SPAN>,<DIV>\t\td3: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"dd-MMMM-yyyy\"</SPAN>,<DIV>\t\td4: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"dd-MM-yy\"</SPAN>,<DIV>\t\td5: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"H:mm\"</SPAN>,<DIV>\t\td6: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"HH:mm\"</SPAN>,<DIV>\t\td7: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"HH:mm tt\"</SPAN>,<DIV>\t\td8: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"dd/MMMM/yyyy\"</SPAN>,<DIV>\t\td9: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"MMMM-dd\"</SPAN>,<DIV>\t\td10: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"MM-dd\"</SPAN>,<DIV>\t\td11: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"MM-dd-yyyy\"</SPAN><DIV>\t},<DIV>\tpercentSymbol: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"%\"</SPAN>,<DIV>\tcurrencySymbol: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"$\"</SPAN>,<DIV>\tcurrencySymbolposition: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"before\"</SPAN>,<DIV>\tdecimalSeparator: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'.'</SPAN>,<DIV>\tthousandsSeparator: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">','</SPAN>,<DIV>\tpagerGoToPagestring: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"Go to page:\"</SPAN>,<DIV>\tpagerShowRowsstring: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"Show rows:\"</SPAN>,<DIV>\tpagerRangestring: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\" of \"</SPAN>,<DIV>\tpagerPreviousButtonstring: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"previous\"</SPAN>,<DIV>\tpagerNextButtonstring: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"next\"</SPAN>,<DIV>\tpagerFirstButtonsSring: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"first\"</SPAN>,<DIV>\tpagerLastButtonstring:<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"last\"</SPAN>,<DIV>\tfilterApplystring: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"Apply\"</SPAN>,<DIV>\tfilterCancelstring: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"Cancel\"</SPAN>,<DIV>\tfilterClearstring: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"Clear Filter\"</SPAN>,<DIV>\tfilterstring: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"advanced\"</SPAN>,<DIV>\tfilterSearchstring: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"Search:\"</SPAN>,<DIV>\tfilterstringComparisonOperators: [<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'empty', 'not empty', 'contains', 'contains(match case)'</SPAN>,<DIV>\t   <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'does not contain', 'does not contain(match case)', 'starts with', 'starts with(match case)'</SPAN>,<DIV>\t   <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'ends with', 'ends with(match case)', 'equal', 'equal(match case)', 'null', 'not null'</SPAN>],<DIV>\tfilterNumericComparisonOperators: [<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'equal', 'not equal', 'less than', 'less than or equal', 'greater than', 'greater than or equal', 'null', 'not null'</SPAN>],<DIV>\tfilterDateComparisonOperators: [<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'equal', 'not equal', 'less than', 'less than or equal', 'greater than', 'greater than or equal', 'null', 'not null'</SPAN>],<DIV>\tfilterbooleanComparisoOoperators: [<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'equal', 'not equal'</SPAN>],<DIV>\tvalidationstring: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"Entered value is not valid\"</SPAN>,<DIV>\temptyDatastring: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"No data to display\"</SPAN>,<DIV>\tfilterSelectstring: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"Select Filter\"</SPAN>,<DIV>\tloadText: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"Loading...\"</SPAN>,<DIV>\tclearstring: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"Clear\"</SPAN>,<DIV>\ttodaystring: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"Today\"</SPAN>,<DIV>\tloadingErrorMessage: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"The data is still loading and you cannot set a property or call a method. You can do that once the data binding is completed. jqxTreeGrid raises the <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'bindingComplete'</SPAN> event when the binding is completed.\"</SPAN>           <DIV>}n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>localization</CODE> property. </P>\n<PRE class=code style=\"MAX-WIDTH: 600px; WIDTH: 600px; MARGIN: 0px\"><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;!DOCTYPE html&gt;</SPAN><DIV><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;html lang=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"en\"</SPAN>&gt;</SPAN><DIV><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;head&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;link rel=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"stylesheet\" href=\"../../jqwidgets/styles/jqx.base.css\" type=\"text/css\"</SPAN> /&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;script type=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"text/javascript\" src=\"../../scripts/jquery-1.11.1.min.js\"</SPAN>&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/script&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;script type=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"text/javascript\" src=\"../../jqwidgets/jqxcore.js\"</SPAN>&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/script&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;script type=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"text/javascript\" src=\"../../jqwidgets/jqxdata.js\"</SPAN>&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/script&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;script type=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"text/javascript\" src=\"../../jqwidgets/jqxbuttons.js\"</SPAN>&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/script&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;script type=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"text/javascript\" src=\"../../jqwidgets/jqxscrollbar.js\"</SPAN>&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/script&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;script type=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"text/javascript\" src=\"../../jqwidgets/jqxlistbox.js\"</SPAN>&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/script&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;script type=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"text/javascript\" src=\"../../jqwidgets/jqxdropdownlist.js\"</SPAN>&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/script&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;script type=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"text/javascript\" src=\"../../jqwidgets/jqxmenu.js\"</SPAN>&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/script&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;script type=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"text/javascript\" src=\"../../jqwidgets/jqxpanel.js\"</SPAN>&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/script&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;script type=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"text/javascript\" src=\"../../jqwidgets/jqxcalendar.js\"</SPAN>&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/script&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;script type=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"text/javascript\" src=\"../../jqwidgets/jqxdatetimeinput.js\"</SPAN>&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/script&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;script type=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"text/javascript\" src=\"../../jqwidgets/jqxTreeGrid.js\"</SPAN>&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/script&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;script type=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"text/javascript\" src=\"../../jqwidgets/jqxnumberinput.js\"</SPAN>&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/script&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;script type=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"text/javascript\" src=\"../../scripts/demos.js\"</SPAN>&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/script&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;script type=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"text/javascript\" src=\"../../jqwidgets/globalization/globalize.js\"</SPAN>&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/script&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;script type=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"text/javascript\" src=\"../sampledata/generatedata.js\"</SPAN>&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/script&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;script type=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"text/javascript\"</SPAN>&gt;</SPAN><DIV>        $(document).ready(function () {<DIV>            var data = generatedata(250);<DIV>            var source =<DIV>            {<DIV>                localdata: data,<DIV>                dataFields:<DIV>                [<DIV>                    { name: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'name', type: 'string'</SPAN> },<DIV>                    { name: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'productname', type: 'string'</SPAN> },<DIV>                    { name: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'available', type: 'bool'</SPAN> },<DIV>                    { name: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'date', type: 'date'</SPAN>},<DIV>                    { name: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'quantity', type: 'number'</SPAN> },<DIV>                    { name: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'price', type: 'number'</SPAN> }<DIV>                ],<DIV>                datatype: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"array\"</SPAN><DIV>            };<DIV><DIV>            var dataAdapter = new $.jqx.dataAdapter(source);<DIV><DIV>            var getLocalization = function () {<DIV>                var localizationobj = {};<DIV>                localizationobj.pagerGoToPagestring = <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"Gehe zu:\"</SPAN>;<DIV>                localizationobj.pagerShowRowsstring = <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"Zeige Zeile:\"</SPAN>;<DIV>                localizationobj.pagerRangestring = <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\" von \"</SPAN>;<DIV>                localizationobj.pagerNextButtonstring = <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"voriger\"</SPAN>;<DIV>                localizationobj.pagerFirstButtonstring = <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"first\"</SPAN>;<DIV>                localizationobj.pagerLastButtonstring = <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"last\"</SPAN>;<DIV>                localizationobj.pagerPreviousButtonstring = <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"nächster\"</SPAN>;<DIV>                localizationobj.sortAscendingstring = <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"Sortiere aufsteigend\"</SPAN>;<DIV>                localizationobj.sortDescendingstring = <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"Sortiere absteigend\"</SPAN>;<DIV>                localizationobj.sortRemovestring = <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"Entferne Sortierung\"</SPAN>;<DIV>                localizationobj.firstDay = 1;<DIV>                localizationobj.percentSymbol = <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"%\"</SPAN>;<DIV>                localizationobj.currencySymbol = <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"€\"</SPAN>;<DIV>                localizationobj.currencySymbolPosition = <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"after\"</SPAN>;<DIV>                localizationobj.decimalSeparator = <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\".\"</SPAN>;<DIV>                localizationobj.thousandsSeparator = <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\",\"</SPAN>;<DIV>                var days = {<DIV>                    // full day names<DIV>                    names: [<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"Sonntag\", \"Montag\", \"Dienstag\", \"Mittwoch\", \"Donnerstag\", \"Freitag\", \"Samstag\"</SPAN>],<DIV>                    // abbreviated day names<DIV>                    namesAbbr: [<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"Sonn\", \"Mon\", \"Dien\", \"Mitt\", \"Donn\", \"Fre\", \"Sams\"</SPAN>],<DIV>                    // shortest day names<DIV>                    namesShort: [<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"So\", \"Mo\", \"Di\", \"Mi\", \"Do\", \"Fr\", \"Sa\"</SPAN>]<DIV>                };<DIV>                localizationobj.days = days;<DIV>                var months = {<DIV>                    // full month names (13 months for lunar calendards -- 13th month should be \"\" if not lunar)<DIV>                    names: [<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"Januar\", \"Februar\", \"März\", \"April\", \"Mai\", \"Juni\", \"Juli\", \"August\", \"September\", \"Oktober\", \"November\", \"Dezember\", \"\"</SPAN>],<DIV>                    // abbreviated month names<DIV>                    namesAbbr: [<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"Jan\", \"Feb\", \"Mär\", \"Apr\", \"Mai\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dez\", \"\"</SPAN>]<DIV>                };<DIV>                var patterns = {<DIV>                    d: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"dd.MM.yyyy\"</SPAN>,<DIV>                    D: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"dddd, d. MMMM yyyy\"</SPAN>,<DIV>                    t: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"HH:mm\"</SPAN>,<DIV>                    T: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"HH:mm:ss\"</SPAN>,<DIV>                    f: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"dddd, d. MMMM yyyy HH:mm\"</SPAN>,<DIV>                    F: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"dddd, d. MMMM yyyy HH:mm:ss\"</SPAN>,<DIV>                    M: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"dd MMMM\"</SPAN>,<DIV>                    Y: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"MMMM yyyy\"</SPAN><DIV>                }<DIV>                localizationobj.patterns = patterns;<DIV>                localizationobj.months = months;<DIV>                return localizationobj;<DIV>            }<DIV><DIV>            $(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"#treeGrid\"</SPAN>).jqxTreeGrid(<DIV>            {<DIV>                width: 685,<DIV>                source: dataAdapter,<DIV>                filterable: true,<DIV>                pageable: true,<DIV>                editable: true,<DIV>                localization: getLocalization(),<DIV>                columns: [<DIV>                  { text: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'Name', dataField: 'name'</SPAN>, width: 115 },<DIV>                  { text: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'Produkt', dataField: 'productname'</SPAN>, width: 220 },<DIV>                  { text: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'Datum', dataField: 'date', width: 210, cellsAlign: 'right', cellsFormat: 'd'</SPAN>},<DIV>                  { text: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'Qt.', dataField: 'quantity', cellsAlign: 'right'</SPAN>, width: 60 },<DIV>                  { text: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'Preis', dataField: 'price', cellsFormat: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"c2\"</SPAN>, cellsAlign: 'right'</SPAN> }<DIV>                ]<DIV>            });<DIV>        });<DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/script&gt;</SPAN><DIV><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/head&gt;</SPAN><DIV><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;body class=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'default'</SPAN>&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;div id=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"treeGrid\"</SPAN>&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/div&gt;</SPAN><DIV><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/body&gt;</SPAN><DIV><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/html&gtn\r\n<P>Get the <CODE>localization</CODE> property. </P>\n<PRE><CODE>var localization = $('#treeGrid').jqxTreeGrid('localization');</CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/gz93S/",
            "exampleDescription": "localization is set to a custom object",
            "dataType": "object",
            "ts_dataType": "any",
            "exampleName": "jqxtreegrid_localization",
            "exampleInit": {
                "localization": "localization",
                "pageable": "true",
                "exampleData": "{\n          pagerGoToPageString: 'Gehe zu:',\n          pagerShowRowsString: 'Zeige Zeile:',\n          pagerRangeString: ' von ',\n          pagerNextButtonString: 'voriger',\n          pagerFirstButtonString: 'first',\n          pagerLastButtonString: 'last',\n          pagerPreviousButtonString: 'nächster'\n        }"
            }
        },
        {
            "name": "pagerHeight",
            "defaultValue": "28",
            "description": "<P>Sets or gets the height of the jqxTreeGrid's Pager(s). Pager(s) is(are) displayed after setting <CODE>pageable</CODE> to true. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>pagerHeight</CODE> property. </P>\n<PRE><CODE>$('#treeGrid').jqxTreeGrid({ pagerHeight: 35 }); </CODE></PRE>\n\r\n<P>Get the <CODE>pagerHeight</CODE> property. </P>\n<PRE><CODE>var pagerHeight = $('#treeGrid').jqxTreeGrid('pagerHeight'); </CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/j09x94o8/",
            "exampleDescription": "pagerHeight is set to 35",
            "dataType": "number",
            "exampleInit": {
                "pageable": "true",
                "pagerHeight": "35"
            }
        },
        {
            "name": "pageSize",
            "defaultValue": "10",
            "description": "<P>Sets or gets the rows count per page when paging is enabled. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>pageSize</CODE> property. </P>\n<PRE><CODE>$('#treeGrid').jqxTreeGrid({ pageSize: 20 }); </CODE></PRE>\n\r\n<P>Get the <CODE>pageSize</CODE> property. </P>\n<PRE><CODE>var pageSize = $('#treeGrid').jqxTreeGrid('pageSize'); </CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/NTVQY/",
            "exampleDescription": "pageSize is set to 5",
            "dataType": "number",
            "exampleInit": {
                "pageable": "true",
                "pageSize": "5"
            }
        },
        {
            "name": "pageSizeOptions",
            "defaultValue": "['5', '10', '20']",
            "description": "<P>Sets or gets the jqxTreeGrid's page size options when paging is enabled and the <CODE>pagerMode</CODE> property is set to <CODE>\"advanced\"</CODE>. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>pageSizeOptions</CODE> property. </P>\n<PRE><CODE>$('#treeGrid').jqxTreeGrid({ pageSizeOptions: ['15', '20', '30'] }); </CODE></PRE>\n\r\n<P>Get the <CODE>pageSizeOptions</CODE> property. </P>\n<PRE><CODE>var pageSizeOptions = $('#treeGrid').jqxTreeGrid('pageSizeOptions'); </CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/WLuPB/",
            "exampleDescription": "pageSizeOptions is set to ['2', '3', '5']",
            "dataType": "Array",
            "ts_dataType": "Array<number | string>",
            "exampleInit": {
                "pageable": "true",
                "pagerMode": "'advanced'",
                "pageSizeOptions": "['2', '3', '5']"
            }
        },
        {
            "name": "pageable",
            "defaultValue": "false",
            "description": "<P>Determines whether the jqxTreeGrid is in paging mode. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>pageable</CODE> property. </P>\n<PRE><CODE>$('#treeGrid').jqxTreeGrid({ pageable:true }); </CODE></PRE>\n\r\n<P>Get the <CODE>pageable</CODE> property. </P>\n<PRE><CODE>var pageable = $('#treeGrid').jqxTreeGrid('pageable'); </CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/NTVQY/",
            "exampleDescription": "pageable is set to true",
            "dataType": "boolean",
            "exampleInit": {
                "pageable": "true"
            }
        },
        {
            "name": "pagerPosition",
            "defaultValue": "\"bottom\"",
            "description": "<P>Sets or gets the Pager's position. Possible values: <CODE>'top'</CODE>, <CODE>'bottom'</CODE> and <CODE>'both'</CODE> </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>pagerPosition</CODE> property. </P>\n<PRE><CODE>$('#treeGrid').jqxTreeGrid({ pagerPosition:'top' }); </CODE></PRE>\n\r\n<P>Get the <CODE>pagerPosition</CODE> property. </P>\n<PRE><CODE>var pagerPosition = $('#treeGrid').jqxTreeGrid('pagerPosition'); </CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/c7ch2/",
            "exampleDescription": "pagerPosition is set to 'top'",
            "dataType": "string",
            "ts_dataType": "enum:TreeGridPagerPosition",
            "exampleInit": {
                "pageable": "true",
                "pagerPosition": "top"
            }
        },
        {
            "name": "pagerMode",
            "defaultValue": "\"default\"",
            "description": "<P>Sets or gets the Pager's mode. Possible values: <CODE>\"default\"</CODE> and <CODE>\"advanced\"</CODE> </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>pagerMode</CODE> property. </P>\n<PRE><CODE>$('#treeGrid').jqxTreeGrid({pagerMode: \"advanced\" }); </CODE></PRE>\n\r\n<P>Get the <CODE>pagerMode</CODE> property. </P>\n<PRE><CODE>var pagerMode = $('#treeGrid').jqxTreeGrid('pagerMode'); </CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/qwUU3/",
            "exampleDescription": "pagerMode is set to 'advanced'",
            "dataType": "string",
            "ts_dataType": "enum:TreeGridPagerMode",
            "exampleInit": {
                "pageable": "true",
                "pagerMode": "advanced"
            }
        },
        {
            "name": "pageSizeMode",
            "defaultValue": "\"default\"",
            "description": "<P>Sets or gets the Pager Size's mode. Possible values: <CODE>\"default\"</CODE> and <CODE>\"root\"</CODE> </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>pagerMode</CODE> property. </P>\n<PRE><CODE>$('#treeGrid').jqxTreeGrid({pageSizeMode: \"root\" }); </CODE></PRE>\n\r\n<P>Get the <CODE>pageSizeMode</CODE> property. </P>\n<PRE><CODE>var pagerMode = $('#treeGrid').jqxTreeGrid('pagerMode'); </CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/u3d6jpto/",
            "exampleDescription": "pageSizeMode is set to 'root'",
            "dataType": "string",
            "ts_dataType": "enum:TreeGridPageSizeMode",
            "exampleInit": {
                "pageable": "true",
                "pageSizeMode": "root"
            }
        },
        {
            "name": "pagerButtonsCount",
            "defaultValue": "5",
            "description": "<P>Sets or gets the count of the buttons displayed on the Pager when <CODE>pagerMode</CODE> is set to <CODE>\"default\"</CODE>. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>pagerButtonsCount</CODE> property. </P>\n<PRE><CODE>$('#treeGrid').jqxTreeGrid({pagerButtonsCount: 10 }); </CODE></PRE>\n\r\n<P>Get the <CODE>pagerButtonsCount</CODE> property. </P>\n<PRE><CODE>var pagerButtonsCount = $('#treeGrid').jqxTreeGrid('pagerButtonsCount'); </CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/dn3Ab/",
            "exampleDescription": "pagerButtonsCount is set to 2",
            "dataType": "number",
            "exampleInit": {
                "pageable": "true",
                "pagerButtonsCount": "2"
            }
        },
        {
            "name": "pagerRenderer",
            "defaultValue": "null",
            "description": "<P>Enables custom rendering of the Pager. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>pagerRenderer</CODE> property. </P>\n<PRE><CODE>$('#treeGrid').jqxTreeGrid({pagerRenderer: function(){\"do something here and return a HTML Element as a result.\" }); </CODE></PRE>\n\r\n<P>Get the <CODE>pagerRenderer</CODE> property. </P>\n<PRE><CODE>var pagerRenderer = $('#treeGrid').jqxTreeGrid('pagerRenderer'); </CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/u395a/",
            "exampleDescription": "pagerRenderer is set to a custom function",
            "dataType": "Function",
            "ts_dataType": "() => any",
            "exampleInit": {
                "pageable": "true",
                "pagerRenderer": "pagerRenderer",
                "exampleData": "// Do something here and return a HTML Element as a result."
            }
        },
        {
            "name": "ready",
            "defaultValue": "null",
            "description": "<P>Callback function which is called when the jqxTreeGrid is rendered and data binding is completed.. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>ready</CODE> property. </P>\n<PRE><CODE>$('#treeGrid').jqxTreeGrid({ready:function(){ // your code here.}});</CODE></PRE>\n\r\n<P>Get the <CODE>ready</CODE> property. </P>\n<PRE><CODE>var ready = $('#treeGrid').jqxTreeGrid('ready');</CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/gb9G9/",
            "exampleDescription": "ready is set to a custom function",
            "dataType": "Function",
            "ts_dataType": "() => void",
            "exampleInit": {
                "ready": "ready",
                "exampleData": "alert('Ready!')"
            }
        },
        {
            "name": "rowDetails",
            "defaultValue": "false",
            "description": "<P>Sets or gets whether the jqxTreeGrid rows have details. See the <CODE>rowDetailsRenderer</CODE> for rendering of the row details. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>rowDetails</CODE> property. </P>\n<PRE><CODE>$('#treeGrid').jqxTreeGrid({rowDetails: true});</CODE></PRE>\n\r\n<P>Get the <CODE>rowDetails</CODE> property. </P>\n<PRE><CODE>var rowDetails = $('#treeGrid').jqxTreeGrid('rowDetails');</CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/Cyc9V/",
            "exampleDescription": "rowDetails is set to true",
            "dataType": "boolean",
            "exampleName": "jqxtreegrid_rowDetails",
            "exampleInit": {
                "rowDetails": "true",
                "rowDetailsRenderer": "rowDetailsRenderer",
                "exampleData": "function (key, dataRow) { \n  return 'Record ' + key + ' details'; \n}"
            }
        },
        {
            "name": "rowDetailsRenderer",
            "defaultValue": "null",
            "description": "<P>Callback function which is used for rendering of the row's details. </P>\n\r\n<UL><LI>id/key - row's id/key. \r\n<LI>dataRow - the row as a set of Key/Value pairs. </LI></UL>\n<CODE>rowDetailsRenderer</CODE>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>rowDetailsRenderer</CODE> property. </P>\n<PRE class=code style=\"MAX-WIDTH: 600px; WIDTH: 600px; MARGIN: 0px\"><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;!DOCTYPE html&gt;</SPAN><DIV><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;html lang=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"en\"</SPAN>&gt;</SPAN><DIV><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;head&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;title id=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"Description\"</SPAN>&gt;</SPAN>jqxTreeGrid allows you to create an extra row for each tree-grid data record.<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/title&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;meta name=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"description\" content=\"Data Row Details - JavaScript Tree Grid Demo | jQWidgets\"</SPAN>&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;link rel=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"stylesheet\" href=\"../../jqwidgets/styles/jqx.base.css\" type=\"text/css\"</SPAN> /&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;script type=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"text/javascript\" src=\"../../scripts/jquery-1.11.1.min.js\"</SPAN>&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/script&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;script type=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"text/javascript\" src=\"../../jqwidgets/jqxcore.js\"</SPAN>&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/script&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;script type=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"text/javascript\" src=\"../../jqwidgets/jqxdata.js\"</SPAN>&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/script&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;script type=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"text/javascript\" src=\"../../jqwidgets/jqxbuttons.js\"</SPAN>&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/script&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;script type=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"text/javascript\" src=\"../../jqwidgets/jqxscrollbar.js\"</SPAN>&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/script&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;script type=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"text/javascript\" src=\"../../jqwidgets/jqxdatatable.js\"</SPAN>&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/script&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;script type=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"text/javascript\" src=\"../../jqwidgets/jqxtreegrid.js\"</SPAN>&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/script&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;script type=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"text/javascript\" src=\"../../scripts/demos.js\"</SPAN>&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/script&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;script type=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"text/javascript\"</SPAN>&gt;</SPAN><DIV>        $(document).ready(function () {<DIV>            var employees = [{ <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"EmployeeID\": 1, \"FirstName\": \"Nancy\", \"LastName\": \"Davolio\", \"ReportsTo\": 2, \"Country\": \"USA\", \"Title\": \"Sales Representative\", \"HireDate\": \"1992-05-01 00:00:00\", \"BirthDate\": \"1948-12-08 00:00:00\", \"City\": \"Seattle\", \"Address\": \"507 - 20th Ave. E.Apt. 2A\" }, { \"EmployeeID\": 2, \"FirstName\": \"Andrew\", \"LastName\": \"Fuller\", \"ReportsTo\": null, \"Country\": \"USA\", \"Title\": \"Vice President, Sales\", \"HireDate\": \"1992-08-14 00:00:00\", \"BirthDate\": \"1952-02-19 00:00:00\", \"City\": \"Tacoma\", \"Address\": \"908 W. Capital Way\" }, { \"EmployeeID\": 3, \"FirstName\": \"Janet\", \"LastName\": \"Leverling\", \"ReportsTo\": 2, \"Country\": \"USA\", \"Title\": \"Sales Representative\", \"HireDate\": \"1992-04-01 00:00:00\", \"BirthDate\": \"1963-08-30 00:00:00\", \"City\": \"Kirkland\", \"Address\": \"722 Moss Bay Blvd.\" }, { \"EmployeeID\": 4, \"FirstName\": \"Margaret\", \"LastName\": \"Peacock\", \"ReportsTo\": 2, \"Country\": \"USA\", \"Title\": \"Sales Representative\", \"HireDate\": \"1993-05-03 00:00:00\", \"BirthDate\": \"1937-09-19 00:00:00\", \"City\": \"Redmond\", \"Address\": \"4110 Old Redmond Rd.\" }, { \"EmployeeID\": 5, \"FirstName\": \"Steven\", \"LastName\": \"Buchanan\", \"ReportsTo\": 2, \"Country\": \"UK\", \"Title\": \"Sales Manager\", \"HireDate\": \"1993-10-17 00:00:00\", \"BirthDate\": \"1955-03-04 00:00:00\", \"City\": \"London\", \"Address\": \"14 Garrett Hill\" }, { \"EmployeeID\": 6, \"FirstName\": \"Michael\", \"LastName\": \"Suyama\", \"ReportsTo\": 5, \"Country\": \"UK\", \"Title\": \"Sales Representative\", \"HireDate\": \"1993-10-17 00:00:00\", \"BirthDate\": \"1963-07-02 00:00:00\", \"City\": \"London\", \"Address\": \"Coventry House Miner Rd.\" }, { \"EmployeeID\": 7, \"FirstName\": \"Robert\", \"LastName\": \"King\", \"ReportsTo\": 5, \"Country\": \"UK\", \"Title\": \"Sales Representative\", \"HireDate\": \"1994-01-02 00:00:00\", \"BirthDate\": \"1960-05-29 00:00:00\", \"City\": \"London\", \"Address\": \"Edgeham Hollow Winchester Way\" }, { \"EmployeeID\": 8, \"FirstName\": \"Laura\", \"LastName\": \"Callahan\", \"ReportsTo\": 2, \"Country\": \"USA\", \"Title\": \"Inside Sales Coordinator\", \"HireDate\": \"1994-03-05 00:00:00\", \"BirthDate\": \"1958-01-09 00:00:00\", \"City\": \"Seattle\", \"Address\": \"4726 - 11th Ave. N.E.\" }, { \"EmployeeID\": 9, \"FirstName\": \"Anne\", \"LastName\": \"Dodsworth\", \"ReportsTo\": 5, \"Country\": \"UK\", \"Title\": \"Sales Representative\", \"HireDate\": \"1994-11-15 00:00:00\", \"BirthDate\": \"1966-01-27 00:00:00\", \"City\": \"London\", \"Address\": \"7 Houndstooth Rd.\"</SPAN> }];<DIV><DIV>            //// prepare the data<DIV>            var source =<DIV>            {<DIV>                dataType: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"json\"</SPAN>,<DIV>                dataFields: [<DIV>                    { name: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'EmployeeID', type: 'number'</SPAN> },<DIV>                    { name: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'ReportsTo', type: 'number'</SPAN> },<DIV>                    { name: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'FirstName', type: 'string'</SPAN> },<DIV>                    { name: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'LastName', type: 'string'</SPAN> },<DIV>                    { name: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'Country', type: 'string'</SPAN> },<DIV>                    { name: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'City', type: 'string'</SPAN> },<DIV>                    { name: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'Address', type: 'string'</SPAN> },<DIV>                    { name: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'Title', type: 'string'</SPAN> },<DIV>                    { name: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'HireDate', type: 'date'</SPAN> },<DIV>                    { name: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'BirthDate', type: 'date'</SPAN> }<DIV>                ],<DIV>                hierarchy:<DIV>                {<DIV>                    keyDataField: { name: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'EmployeeID'</SPAN> },<DIV>                    parentDataField: { name: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'ReportsTo'</SPAN> }<DIV>                },<DIV>                id: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'EmployeeID'</SPAN>,<DIV>                localData: employees<DIV>            };<DIV>            var dataAdapter = new $.jqx.dataAdapter(source, {<DIV>                beforeLoadComplete: function (records) {<DIV>                    var notes = [<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"Education includes a BA in psychology from Colorado State University in 1970.  She also completed <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'The Art of the Cold Call.'</SPAN>  Nancy is a member of Toastmasters International.\"</SPAN>,<DIV>                         <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"Andrew received his BTS commercial in 1974 and a Ph.D. in international marketing from the University of Dallas in 1981.  He is fluent in French and Italian and reads German.  He joined the company as a sales representative, was promoted to sales manager in January 1992 and to vice president of sales in March 1993.  Andrew is a member of the Sales Management Roundtable, the Seattle Chamber of Commerce, and the Pacific Rim Importers Association.\"</SPAN>,<DIV>                         <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"Janet has a BS degree in chemistry from Boston College (1984).  She has also completed a certificate program in food retailing management.  Janet was hired as a sales associate in 1991 and promoted to sales representative in February 1992.\"</SPAN>,<DIV>                         <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"Margaret holds a BA in English literature from Concordia College (1958) and an MA from the American Institute of Culinary Arts (1966).  She was assigned to the London office temporarily from July through November 1992.\"</SPAN>,<DIV>                         <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"Steven Buchanan graduated from St. Andrews University, Scotland, with a BSC degree in 1976.  Upon joining the company as a sales representative in 1992, he spent 6 months in an orientation program at the Seattle office and then returned to his permanent post in London.  He was promoted to sales manager in March 1993.  Mr. Buchanan has completed the courses <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'Successful Telemarketing' and 'International Sales Management.'</SPAN>  He is fluent in French.\"</SPAN>,<DIV>                         <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"Michael is a graduate of Sussex University (MA, economics, 1983) and the University of California at Los Angeles (MBA, marketing, 1986).  He has also taken the courses <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'Multi-Cultural Selling' and 'Time Management for the Sales Professional.'</SPAN>  He is fluent in Japanese and can read and write French, Portuguese, and Spanish.\"</SPAN>,<DIV>                         <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"Robert King served in the Peace Corps and traveled extensively before completing his degree in English at the University of Michigan in 1992, the year he joined the company.  After completing a course entitled <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'Selling in Europe,'</SPAN> he was transferred to the London office in March 1993.\"</SPAN>,<DIV>                         <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"Laura received a BA in psychology from the University of Washington.  She has also completed a course in business French.  She reads and writes French.\"</SPAN>,<DIV>                         <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"Anne has a BA degree in English from St. Lawrence College.  She is fluent in French and German.\"</SPAN>];<DIV><DIV>                    for (var i = 0; i &lt; records.length; i++) {<DIV>                        var imgUrl = <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'../../images/' + records[i].FirstName.toLowerCase() + '.png'</SPAN>;<DIV>                        records[i].icon = imgUrl;<DIV>                        records[i].notes = notes[i];<DIV>                    }<DIV>                    return records;<DIV>                }<DIV>            }<DIV>            );<DIV>            // create Tree Grid<DIV>            $(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"#treeGrid\"</SPAN>).jqxTreeGrid(<DIV>            {<DIV>                width: 600,<DIV>                pageable: true,<DIV>                pageSize: 3,<DIV>                source: dataAdapter,<DIV>                rowDetails: true,<DIV>                rowDetailsRenderer: function (rowKey, row) {<DIV>                    var indent = (1+row.level) * 20;<DIV>                    var details = <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;table style=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'margin: 10px; margin-left: \" + indent + \"px;'&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;tr&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;td&gt;</SPAN>\" + \"<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;img height='60' src='\" + row.icon + \"'</SPAN>/&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/td&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;td&gt;</SPAN>\" + row.notes + \"<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/td&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/tr&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/table&gt;</SPAN>\"</SPAN>;<DIV>                    return details;<DIV>                },<DIV>                ready: function () {<DIV>                    $(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"#treeGrid\").jqxTreeGrid(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'expandRow'</SPAN>, \"2\"</SPAN>);<DIV>                },<DIV>                columns: [<DIV>                  { text: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'FirstName', dataField: 'FirstName'</SPAN>, width: 150 },<DIV>                  { text: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'LastName', dataField: 'LastName'</SPAN>, width: 120 },<DIV>                  { text: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'City', dataField: 'City'</SPAN>, width: 120 },<DIV>                  { text: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'Country', dataField: 'Country'</SPAN> }<DIV>                ]<DIV>            });<DIV>        });<DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/script&gt;</SPAN><DIV><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/head&gt;</SPAN><DIV><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;body class=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'default'</SPAN>&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;div id=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"treeGrid\"</SPAN>&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/div&gt;</SPAN><DIV><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/body&gt;</SPAN><DIV><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/html&gt;</SPAN><DIV><DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></PRE>\n\r\n<P>Get the <CODE>rowDetailsRenderer</CODE> property. </P>\n<PRE><CODE>var rowDetailsRenderer = $('#treeGrid').jqxTreeGrid('rowDetailsRenderer');</CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/REL6a/",
            "exampleDescription": "rowDetailsRenderer is set to a custom function",
            "dataType": "Function",
            "ts_dataType": "(key: TreeGridRowDetailsRenderer['key'], dataRow: TreeGridRowDetailsRenderer['dataRow']) => any",
            "exampleInit": {
                "rowDetails": "true",
                "rowDetailsRenderer": "rowDetailsRenderer",
                "exampleData": "return 'Record ' + key + ' details';"
            }
        },
        {
            "name": "renderToolbar",
            "defaultValue": "null",
            "description": "<P>Enables custom rendering of the Toolbar. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>renderToolbar</CODE> property. </P>\n<PRE><CODE>$('#treeGrid').jqxTreeGrid({renderToolbar: function(toolBar){\"toolBar - The jQuery selection of the Toolbar HTML Element\" }); </CODE></PRE>\n\r\n<P>Get the <CODE>renderToolbar</CODE> property. </P>\n<PRE><CODE>var renderToolbar = $('#treeGrid').jqxTreeGrid('renderToolbar'); </CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/Vq76M/",
            "exampleDescription": "renderToolbar is set to a custom function",
            "dataType": "Function",
            "ts_dataType": "(toolBar?: TreeGridRenderToolbar['toolbar']) => void",
            "exampleInit": {
                "renderToolbar": "renderToolbar",
                "showToolbar": "true",
                "exampleData": "const container = document.createElement('div');\n        container.innerHTML = 'Some custom HTML here...';\n        toolbar.append(container);"
            }
        },
        {
            "name": "renderStatusBar",
            "defaultValue": "null",
            "description": "<P>Enables custom rendering of the Statusbar. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>renderStatusbar</CODE> property. </P>\n<PRE><CODE>$('#treeGrid').jqxTreeGrid({renderStatusbar: function(statusBar){\"statusBar - The jQuery selection of the Statusbar HTML Element\" }); </CODE></PRE>\n\r\n<P>Get the <CODE>renderStatusbar</CODE> property. </P>\n<PRE><CODE>var renderStatusbar = $('#treeGrid').jqxTreeGrid('renderStatusbar'); </CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/yW977/",
            "exampleDescription": "renderStatusbar is set to a custom function",
            "dataType": "Function",
            "ts_dataType": "(statusBar?: TreeGridRenderStatusBar['statusbar']) => void",
            "exampleInit": {
                "renderStatusBar": "renderStatusBar",
                "showStatusbar": "true",
                "exampleData": "const container = document.createElement('div');\n        container.innerHTML = 'Some custom HTML here...';\n        statusbar.append(container);"
            }
        },
        {
            "name": "rendering",
            "defaultValue": "null",
            "description": "<P>Callback function which is called before the rendering of the jqxTreeGrid's rows. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>rendering</CODE> property. </P>\n<PRE class=code style=\"OVERFLOW: auto; MAX-WIDTH: 830px; WIDTH: 830px; MARGIN: 0px; MAX-HEIGHT: 600px\"><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;!DOCTYPE html&gt;</SPAN><DIV><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;html lang=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"en\"</SPAN>&gt;</SPAN><DIV><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;head&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;link rel=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"stylesheet\" href=\"../../jqwidgets/styles/jqx.base.css\" type=\"text/css\"</SPAN> /&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;script type=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"text/javascript\" src=\"../../scripts/jquery-1.11.1.min.js\"</SPAN>&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/script&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;script type=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"text/javascript\" src=\"../../jqwidgets/jqxcore.js\"</SPAN>&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/script&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;script type=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"text/javascript\" src=\"../../jqwidgets/jqxbuttons.js\"</SPAN>&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/script&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;script type=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"text/javascript\" src=\"../../jqwidgets/jqxscrollbar.js\"</SPAN>&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/script&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;script type=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"text/javascript\" src=\"../../jqwidgets/jqxdatatable.js\"</SPAN>&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/script&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;script type=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"text/javascript\" src=\"../../jqwidgets/jqxtreegrid.js\"</SPAN>&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/script&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;script type=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"text/javascript\" src=\"../../jqwidgets/jqxlistbox.js\"</SPAN>&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/script&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;script type=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"text/javascript\" src=\"../../jqwidgets/jqxdropdownlist.js\"</SPAN>&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/script&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;script type=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"text/javascript\" src=\"../../jqwidgets/jqxdata.js\"</SPAN>&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/script&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;script type=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"text/javascript\" src=\"../../jqwidgets/jqxtooltip.js\"</SPAN>&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/script&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;script type=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"text/javascript\" src=\"../../jqwidgets/jqxinput.js\"</SPAN>&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/script&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;script type=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"text/javascript\"</SPAN>&gt;</SPAN><DIV>        var that = this;<DIV>        $(document).ready(function () {<DIV>            var data = [<DIV>              {<DIV>                  <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"id\": \"1\", \"name\": \"Corporate Headquarters\", \"budget\": \"1230000\", \"location\": \"Las Vegas\"</SPAN>,<DIV>                  <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"children\"</SPAN>:<DIV>                   [<DIV>                       {<DIV>                           <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"id\": \"2\", \"name\": \"Finance Division\", \"budget\": \"423000\", \"location\": \"San Antonio\"</SPAN>,<DIV>                           <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"children\"</SPAN>:<DIV>                           [<DIV>                               { <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"id\": \"3\", \"name\": \"Accounting Department\", \"budget\": \"113000\", \"location\": \"San Antonio\"</SPAN> },<DIV>                               {<DIV>                                   <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"id\": \"4\", \"name\": \"Investment Department\", \"budget\": \"310000\", \"location\": \"San Antonio\"</SPAN>,<DIV>                                   children:<DIV>                                   [<DIV>                                       { <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"id\": \"5\", \"name\": \"Banking Office\", \"budget\": \"240000\", \"location\": \"San Antonio\"</SPAN> },<DIV>                                       { <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"id\": \"6\", \"name\": \"Bonds Office\", \"budget\": \"70000\", \"location\": \"San Antonio\"</SPAN> },<DIV>                                   ]<DIV>                               }<DIV>                           ]<DIV>                       },<DIV>                       {<DIV>                           <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"id\": \"7\", \"name\": \"Operations Division\", \"budget\": \"600000\", \"location\": \"Miami\"</SPAN>,<DIV>                           <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"children\"</SPAN>:<DIV>                           [<DIV>                               { <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"id\": \"8\", \"name\": \"Manufacturing Department\", \"budget\": \"300000\", \"location\": \"Miami\"</SPAN> },<DIV>                               { <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"id\": \"9\", \"name\": \"Public Relations Department\", \"budget\": \"200000\", \"location\": \"Miami\"</SPAN> },<DIV>                               { <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"id\": \"10\", \"name\": \"Sales Department\", \"budget\": \"100000\", \"location\": \"Miami\"</SPAN> }<DIV>                           ]<DIV>                       },<DIV>                       { <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"id\": \"11\", \"name\": \"Research Division\", \"budget\": \"200000\", \"location\": \"Boston\"</SPAN> }<DIV>                   ]<DIV>              }<DIV>            ];<DIV><DIV>            var source =<DIV>             {<DIV>                 dataType: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"json\"</SPAN>,<DIV>                 dataFields: [<DIV>                      { name: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"name\", type: \"string\"</SPAN> },<DIV>                      { name: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"budget\", type: \"number\"</SPAN> },<DIV>                      { name: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"id\", type: \"number\"</SPAN> },<DIV>                      { name: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"children\", type: \"array\"</SPAN> },<DIV>                      { name: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"location\", type: \"string\"</SPAN> }<DIV>                 ],<DIV>                 hierarchy:<DIV>                     {<DIV>                         root: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"children\"</SPAN><DIV>                     },<DIV>                 localData: data,<DIV>                 id: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"id\"</SPAN><DIV>             };<DIV><DIV>            var dataAdapter = new $.jqx.dataAdapter(source, {<DIV>                loadComplete: function () {<DIV><DIV>                }<DIV>            });<DIV><DIV>            this.editrow = -1;<DIV>         <DIV>            $(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"#treeGrid\"</SPAN>).jqxTreeGrid(<DIV>            {<DIV>                width: 670,<DIV>                source: dataAdapter,<DIV>                altrows: true,<DIV>                autoRowHeight: false,<DIV>                ready: function()<DIV>                {<DIV>                    // Expand rows with ID = 1, 2 and 7<DIV>                    $(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"#treeGrid\"</SPAN>).jqxTreeGrid(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'expandRow'</SPAN>, 1);<DIV>                    $(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"#treeGrid\"</SPAN>).jqxTreeGrid(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'expandRow'</SPAN>, 2);<DIV>                    $(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"#treeGrid\"</SPAN>).jqxTreeGrid(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'expandRow'</SPAN>, 7);<DIV>                },<DIV>                editable: true,<DIV>                editSettings: { saveOnPageChange: true, saveOnBlur: true, saveOnSelectionChange: false, cancelOnEsc: true, saveOnEnter: true, editOnDoubleClick: false, editOnF2: false },<DIV>                // called when jqxTreeGrid is going to be rendered.<DIV>                rendering: function()<DIV>                {<DIV>                    // destroys all buttons.<DIV>                    if ($(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\".editButtons\"</SPAN>).length &gt; 0) {<DIV>                        $(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\".editButtons\"</SPAN>).jqxButton(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'destroy'</SPAN>);<DIV>                    }<DIV>                    if ($(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\".cancelButtons\"</SPAN>).length &gt; 0) {<DIV>                        $(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\".cancelButtons\"</SPAN>).jqxButton(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'destroy'</SPAN>);<DIV>                    }<DIV>                },<DIV>                // called when jqxTreeGrid is rendered.<DIV>                rendered: function () {<DIV>                    if ($(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\".editButtons\"</SPAN>).length &gt; 0) {<DIV>                        $(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\".cancelButtons\"</SPAN>).jqxButton();<DIV>                        $(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\".editButtons\"</SPAN>).jqxButton();<DIV>                        <DIV>                        var editClick = function (event) {<DIV>                            var target = $(event.target);<DIV>                            // get button's value.<DIV>                            var value = target.val();<DIV>                            // get clicked row.<DIV>                            var rowKey = event.target.getAttribute(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'data-row'</SPAN>);<DIV><DIV>                            if (value == <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"Edit\"</SPAN>) {<DIV>                                // begin edit.<DIV>                                $(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"#treeGrid\"</SPAN>).jqxTreeGrid(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'beginRowEdit'</SPAN>, rowKey);<DIV>                                target.parent().find(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'.cancelButtons'</SPAN>).show();<DIV>                                target.val(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"Save\"</SPAN>);<DIV>                            }<DIV>                            else {<DIV>                                // end edit and save changes.<DIV>                                target.parent().find(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'.cancelButtons'</SPAN>).hide();<DIV>                                target.val(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"Edit\"</SPAN>);<DIV>                                $(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"#treeGrid\"</SPAN>).jqxTreeGrid(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'endRowEdit'</SPAN>, rowKey);<DIV>                            }<DIV>                        }<DIV><DIV>                        $(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\".editButtons\"</SPAN>).on(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'click'</SPAN>, function (event) {<DIV>                            editClick(event);<DIV>                        });<DIV>                 <DIV>                        $(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\".cancelButtons\"</SPAN>).click(function (event) {<DIV>                            // end edit and cancel changes.<DIV>                            var rowKey = event.target.getAttribute(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'data-row'</SPAN>);<DIV>                            $(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"#treeGrid\"</SPAN>).jqxTreeGrid(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'endRowEdit'</SPAN>, rowKey, true);<DIV>                        });<DIV>                    }<DIV>                },<DIV>                columns: [<DIV>                  { text: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'ID', editable: false, dataField: 'id'</SPAN>, width: 100 },<DIV>                  { text: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'Name', dataField: 'name'</SPAN>, width: 200 },<DIV>                  {<DIV>                      text: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'Budget', align: 'right', cellsAlign: 'right', cellsFormat: 'c2', dataField: 'budget'</SPAN>, width: 150<DIV>                  },<DIV>                  { text: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'Location', dataField: 'location'</SPAN>, width: 100 },<DIV>                  {<DIV>                      text: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'Edit', cellsAlign: 'center', align: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"center\"</SPAN>, columnType: 'none'</SPAN>, editable: false, sortable: false, dataField: null, cellsRenderer: function (row, column, value) {<DIV>                          // render custom column.<DIV>                          return <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;button data-row=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'\" + row + \"' class='editButtons'&gt;</SPAN>Edit<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/button&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;button style='display: none; margin-left: 5px;' data-row='\" + row + \"' class='cancelButtons'</SPAN>&gt;</SPAN>Cancel<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/button&gt;</SPAN>\"</SPAN>;<DIV>                      }<DIV>                  }<DIV>                ]<DIV>            });<DIV>        });<DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/script&gt;</SPAN><DIV><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/head&gt;</SPAN><DIV><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;body class=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'default'</SPAN>&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;div id=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"treeGrid\"</SPAN>&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/div&gt;</SPAN><DIV><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/body&gt;</SPAN><DIV><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/html&gt;</SPAN><DIV><DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></PRE>\n\r\n<P>Get the <CODE>rendering</CODE> property. </P>\n<PRE><CODE>var renderer = $('#treeGrid').jqxTreeGrid('renderer'); </CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/cK2QZ/",
            "exampleDescription": "rendering is set to a custom function",
            "dataType": "Function",
            "ts_dataType": "() => void",
            "exampleInit": {
                "rendering": "rendering",
                "exampleData": "alert('Rendering!');"
            }
        },
        {
            "name": "rendered",
            "defaultValue": "null",
            "description": "<P>Callback function which is called after the rendering of the jqxTreeGrid's row. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>rendered</CODE> property. </P>\n<PRE class=code style=\"OVERFLOW: auto; MAX-WIDTH: 830px; WIDTH: 830px; MARGIN: 0px; MAX-HEIGHT: 600px\"><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;!DOCTYPE html&gt;</SPAN><DIV><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;html lang=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"en\"</SPAN>&gt;</SPAN><DIV><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;head&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;link rel=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"stylesheet\" href=\"../../jqwidgets/styles/jqx.base.css\" type=\"text/css\"</SPAN> /&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;script type=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"text/javascript\" src=\"../../scripts/jquery-1.11.1.min.js\"</SPAN>&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/script&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;script type=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"text/javascript\" src=\"../../jqwidgets/jqxcore.js\"</SPAN>&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/script&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;script type=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"text/javascript\" src=\"../../jqwidgets/jqxbuttons.js\"</SPAN>&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/script&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;script type=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"text/javascript\" src=\"../../jqwidgets/jqxscrollbar.js\"</SPAN>&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/script&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;script type=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"text/javascript\" src=\"../../jqwidgets/jqxdatatable.js\"</SPAN>&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/script&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;script type=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"text/javascript\" src=\"../../jqwidgets/jqxtreegrid.js\"</SPAN>&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/script&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;script type=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"text/javascript\" src=\"../../jqwidgets/jqxlistbox.js\"</SPAN>&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/script&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;script type=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"text/javascript\" src=\"../../jqwidgets/jqxdropdownlist.js\"</SPAN>&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/script&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;script type=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"text/javascript\" src=\"../../jqwidgets/jqxdata.js\"</SPAN>&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/script&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;script type=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"text/javascript\" src=\"../../jqwidgets/jqxtooltip.js\"</SPAN>&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/script&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;script type=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"text/javascript\" src=\"../../jqwidgets/jqxinput.js\"</SPAN>&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/script&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;script type=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"text/javascript\"</SPAN>&gt;</SPAN><DIV>        var that = this;<DIV>        $(document).ready(function () {<DIV>            var data = [<DIV>              {<DIV>                  <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"id\": \"1\", \"name\": \"Corporate Headquarters\", \"budget\": \"1230000\", \"location\": \"Las Vegas\"</SPAN>,<DIV>                  <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"children\"</SPAN>:<DIV>                   [<DIV>                       {<DIV>                           <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"id\": \"2\", \"name\": \"Finance Division\", \"budget\": \"423000\", \"location\": \"San Antonio\"</SPAN>,<DIV>                           <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"children\"</SPAN>:<DIV>                           [<DIV>                               { <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"id\": \"3\", \"name\": \"Accounting Department\", \"budget\": \"113000\", \"location\": \"San Antonio\"</SPAN> },<DIV>                               {<DIV>                                   <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"id\": \"4\", \"name\": \"Investment Department\", \"budget\": \"310000\", \"location\": \"San Antonio\"</SPAN>,<DIV>                                   children:<DIV>                                   [<DIV>                                       { <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"id\": \"5\", \"name\": \"Banking Office\", \"budget\": \"240000\", \"location\": \"San Antonio\"</SPAN> },<DIV>                                       { <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"id\": \"6\", \"name\": \"Bonds Office\", \"budget\": \"70000\", \"location\": \"San Antonio\"</SPAN> },<DIV>                                   ]<DIV>                               }<DIV>                           ]<DIV>                       },<DIV>                       {<DIV>                           <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"id\": \"7\", \"name\": \"Operations Division\", \"budget\": \"600000\", \"location\": \"Miami\"</SPAN>,<DIV>                           <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"children\"</SPAN>:<DIV>                           [<DIV>                               { <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"id\": \"8\", \"name\": \"Manufacturing Department\", \"budget\": \"300000\", \"location\": \"Miami\"</SPAN> },<DIV>                               { <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"id\": \"9\", \"name\": \"Public Relations Department\", \"budget\": \"200000\", \"location\": \"Miami\"</SPAN> },<DIV>                               { <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"id\": \"10\", \"name\": \"Sales Department\", \"budget\": \"100000\", \"location\": \"Miami\"</SPAN> }<DIV>                           ]<DIV>                       },<DIV>                       { <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"id\": \"11\", \"name\": \"Research Division\", \"budget\": \"200000\", \"location\": \"Boston\"</SPAN> }<DIV>                   ]<DIV>              }<DIV>            ];<DIV><DIV>            var source =<DIV>             {<DIV>                 dataType: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"json\"</SPAN>,<DIV>                 dataFields: [<DIV>                      { name: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"name\", type: \"string\"</SPAN> },<DIV>                      { name: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"budget\", type: \"number\"</SPAN> },<DIV>                      { name: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"id\", type: \"number\"</SPAN> },<DIV>                      { name: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"children\", type: \"array\"</SPAN> },<DIV>                      { name: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"location\", type: \"string\"</SPAN> }<DIV>                 ],<DIV>                 hierarchy:<DIV>                     {<DIV>                         root: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"children\"</SPAN><DIV>                     },<DIV>                 localData: data,<DIV>                 id: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"id\"</SPAN><DIV>             };<DIV><DIV>            var dataAdapter = new $.jqx.dataAdapter(source, {<DIV>                loadComplete: function () {<DIV><DIV>                }<DIV>            });<DIV><DIV>            this.editrow = -1;<DIV>         <DIV>            $(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"#treeGrid\"</SPAN>).jqxTreeGrid(<DIV>            {<DIV>                width: 670,<DIV>                source: dataAdapter,<DIV>                altrows: true,<DIV>                autoRowHeight: false,<DIV>                ready: function()<DIV>                {<DIV>                    // Expand rows with ID = 1, 2 and 7<DIV>                    $(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"#treeGrid\"</SPAN>).jqxTreeGrid(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'expandRow'</SPAN>, 1);<DIV>                    $(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"#treeGrid\"</SPAN>).jqxTreeGrid(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'expandRow'</SPAN>, 2);<DIV>                    $(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"#treeGrid\"</SPAN>).jqxTreeGrid(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'expandRow'</SPAN>, 7);<DIV>                },<DIV>                editable: true,<DIV>                editSettings: { saveOnPageChange: true, saveOnBlur: true, saveOnSelectionChange: false, cancelOnEsc: true, saveOnEnter: true, editOnDoubleClick: false, editOnF2: false },<DIV>                // called when jqxTreeGrid is going to be rendered.<DIV>                rendering: function()<DIV>                {<DIV>                    // destroys all buttons.<DIV>                    if ($(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\".editButtons\"</SPAN>).length &gt; 0) {<DIV>                        $(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\".editButtons\"</SPAN>).jqxButton(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'destroy'</SPAN>);<DIV>                    }<DIV>                    if ($(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\".cancelButtons\"</SPAN>).length &gt; 0) {<DIV>                        $(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\".cancelButtons\"</SPAN>).jqxButton(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'destroy'</SPAN>);<DIV>                    }<DIV>                },<DIV>                // called when jqxTreeGrid is rendered.<DIV>                rendered: function () {<DIV>                    if ($(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\".editButtons\"</SPAN>).length &gt; 0) {<DIV>                        $(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\".cancelButtons\"</SPAN>).jqxButton();<DIV>                        $(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\".editButtons\"</SPAN>).jqxButton();<DIV>                        <DIV>                        var editClick = function (event) {<DIV>                            var target = $(event.target);<DIV>                            // get button's value.<DIV>                            var value = target.val();<DIV>                            // get clicked row.<DIV>                            var rowKey = event.target.getAttribute(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'data-row'</SPAN>);<DIV><DIV>                            if (value == <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"Edit\"</SPAN>) {<DIV>                                // begin edit.<DIV>                                $(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"#treeGrid\"</SPAN>).jqxTreeGrid(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'beginRowEdit'</SPAN>, rowKey);<DIV>                                target.parent().find(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'.cancelButtons'</SPAN>).show();<DIV>                                target.val(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"Save\"</SPAN>);<DIV>                            }<DIV>                            else {<DIV>                                // end edit and save changes.<DIV>                                target.parent().find(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'.cancelButtons'</SPAN>).hide();<DIV>                                target.val(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"Edit\"</SPAN>);<DIV>                                $(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"#treeGrid\"</SPAN>).jqxTreeGrid(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'endRowEdit'</SPAN>, rowKey);<DIV>                            }<DIV>                        }<DIV><DIV>                        $(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\".editButtons\"</SPAN>).on(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'click'</SPAN>, function (event) {<DIV>                            editClick(event);<DIV>                        });<DIV>                 <DIV>                        $(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\".cancelButtons\"</SPAN>).click(function (event) {<DIV>                            // end edit and cancel changes.<DIV>                            var rowKey = event.target.getAttribute(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'data-row'</SPAN>);<DIV>                            $(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"#treeGrid\"</SPAN>).jqxTreeGrid(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'endRowEdit'</SPAN>, rowKey, true);<DIV>                        });<DIV>                    }<DIV>                },<DIV>                columns: [<DIV>                  { text: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'ID', editable: false, dataField: 'id'</SPAN>, width: 100 },<DIV>                  { text: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'Name', dataField: 'name'</SPAN>, width: 200 },<DIV>                  {<DIV>                      text: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'Budget', align: 'right', cellsAlign: 'right', cellsFormat: 'c2', dataField: 'budget'</SPAN>, width: 150<DIV>                  },<DIV>                  { text: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'Location', dataField: 'location'</SPAN>, width: 100 },<DIV>                  {<DIV>                      text: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'Edit', cellsAlign: 'center', align: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"center\"</SPAN>, columnType: 'none'</SPAN>, editable: false, sortable: false, dataField: null, cellsRenderer: function (row, column, value) {<DIV>                          // render custom column.<DIV>                          return <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;button data-row=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'\" + row + \"' class='editButtons'&gt;</SPAN>Edit<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/button&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;button style='display: none; margin-left: 5px;' data-row='\" + row + \"' class='cancelButtons'</SPAN>&gt;</SPAN>Cancel<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/button&gt;</SPAN>\"</SPAN>;<DIV>                      }<DIV>                  }<DIV>                ]<DIV>            });<DIV>        });<DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/script&gt;</SPAN><DIV><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/head&gt;</SPAN><DIV><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;body class=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'default'</SPAN>&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;div id=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"treeGrid\"</SPAN>&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/div&gt;</SPAN><DIV><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/body&gt;</SPAN><DIV><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/html&gt;</SPAN><DIV><DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></PRE>\n\r\n<P>Get the <CODE>rendered</CODE> property. </P>\n<PRE><CODE>var rendered = $('#treeGrid').jqxTreeGrid('rendered'); </CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/44RyM/",
            "exampleDescription": "rendered is set to a custom function",
            "dataType": "Function",
            "ts_dataType": "() => void",
            "exampleInit": {
                "rendered": "rendered",
                "exampleData": "alert('Rendered!');"
            }
        },
        {
            "name": "rtl",
            "defaultValue": "false",
            "description": "<P>Sets or gets a value indicating whether widget's elements are aligned to support locales using right-to-left fonts.</P>\n\r\n<H4>Code example </H4>\n\r\n<P>Set the <CODE>rtl</CODE> property. </P>\n<PRE><CODE>$('#treeGrid').jqxTreeGrid({rtl : true}); </CODE></PRE>\n\r\n<P>Get the <CODE>rtl</CODE> property. </P>\n<PRE><CODE>var rtl = $('#treeGrid').jqxTreeGrid('rtl'); </CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/q6A2X/",
            "exampleDescription": "rtl is set to true",
            "dataType": "boolean",
            "exampleInit": {
                "rtl": "true"
            }
        },
        {
            "name": "source",
            "defaultValue": "null",
            "description": "<P>Determines the jqxTreeGrid's data source. The <CODE>source</CODE> property is expected to point to an instance of jqxDataAdapter. For more information about jqxDataAdapter, visit: <A href=\"http://www.jqwidgets.com/jquery-widgets-documentation/documentation/jqxdataadapter/jquery-data-adapter.htm\">jquery-data-adapter.htm</A>. To clear the data source, set the <CODE>source</CODE> property to null. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>source</CODE> property. </P>\n\r\n<UL><LI>Binding to Nested JSON. In order to use a nested JSON as a data source, you will have to do the following: <BR><BR>1. Add the sub-collection to the \"dataFields\" array and set its \"type\" to \"array\". <BR>2. Add a \"hierarchy\" object as a member of the \"source\" object. <BR>3. Add a member called \"root\" to the \"hierarchy\" object. <BR>4. Set the \"root\" to the sub-collection name. <PRE style=\"OVERFLOW: auto; MAX-WIDTH: 630px; WIDTH: 630px; MAX-HEIGHT: 400px\"><CODE>\r\nvar employees = [\r\n    {\r\n        \"EmployeeID\": 2, \"FirstName\": \"Andrew\", \"LastName\": \"Fuller\", \"Country\": \"USA\", \"Title\": \"Vice President, Sales\", \"HireDate\": \"1992-08-14 00:00:00\", \"BirthDate\": \"1952-02-19 00:00:00\", \"City\": \"Tacoma\", \"Address\": \"908 W. Capital Way\", \"expanded\": \"true\",\r\n        children: [\r\n        { \"EmployeeID\": 8, \"FirstName\": \"Laura\", \"LastName\": \"Callahan\", \"Country\": \"USA\", \"Title\": \"Inside Sales Coordinator\", \"HireDate\": \"1994-03-05 00:00:00\", \"BirthDate\": \"1958-01-09 00:00:00\", \"City\": \"Seattle\", \"Address\": \"4726 - 11th Ave. N.E.\" },\r\n        { \"EmployeeID\": 1, \"FirstName\": \"Nancy\", \"LastName\": \"Davolio\", \"Country\": \"USA\", \"Title\": \"Sales Representative\", \"HireDate\": \"1992-05-01 00:00:00\", \"BirthDate\": \"1948-12-08 00:00:00\", \"City\": \"Seattle\", \"Address\": \"507 - 20th Ave. E.Apt. 2A\" },\r\n        { \"EmployeeID\": 3, \"FirstName\": \"Janet\", \"LastName\": \"Leverling\", \"Country\": \"USA\", \"Title\": \"Sales Representative\", \"HireDate\": \"1992-04-01 00:00:00\", \"BirthDate\": \"1963-08-30 00:00:00\", \"City\": \"Kirkland\", \"Address\": \"722 Moss Bay Blvd.\" },\r\n        { \"EmployeeID\": 4, \"FirstName\": \"Margaret\", \"LastName\": \"Peacock\", \"Country\": \"USA\", \"Title\": \"Sales Representative\", \"HireDate\": \"1993-05-03 00:00:00\", \"BirthDate\": \"1937-09-19 00:00:00\", \"City\": \"Redmond\", \"Address\": \"4110 Old Redmond Rd.\" },\r\n        {\r\n            \"EmployeeID\": 5, \"FirstName\": \"Steven\", \"LastName\": \"Buchanan\", \"Country\": \"UK\", \"Title\": \"Sales Manager\", \"HireDate\": \"1993-10-17 00:00:00\", \"BirthDate\": \"1955-03-04 00:00:00\", \"City\": \"London\", \"Address\": \"14 Garrett Hill\", \"expanded\": \"true\",\r\n            children: [\r\n                    { \"EmployeeID\": 6, \"FirstName\": \"Michael\", \"LastName\": \"Suyama\", \"Country\": \"UK\", \"Title\": \"Sales Representative\", \"HireDate\": \"1993-10-17 00:00:00\", \"BirthDate\": \"1963-07-02 00:00:00\", \"City\": \"London\", \"Address\": \"Coventry House Miner Rd.\" },\r\n                    { \"EmployeeID\": 7, \"FirstName\": \"Robert\", \"LastName\": \"King\", \"Country\": \"UK\", \"Title\": \"Sales Representative\", \"HireDate\": \"1994-01-02 00:00:00\", \"BirthDate\": \"1960-05-29 00:00:00\", \"City\": \"London\", \"Address\": \"Edgeham Hollow Winchester Way\" },\r\n                    { \"EmployeeID\": 9, \"FirstName\": \"Anne\", \"LastName\": \"Dodsworth\", \"Country\": \"UK\", \"Title\": \"Sales Representative\", \"HireDate\": \"1994-11-15 00:00:00\", \"BirthDate\": \"1966-01-27 00:00:00\", \"City\": \"London\", \"Address\": \"7 Houndstooth Rd.\" }\r\n            ]\r\n        }\r\n        ]\r\n    }\r\n];\r\n// prepare the data\r\nvar source =\r\n{\r\n    dataType: \"json\",\r\n    dataFields: [\r\n        { name: 'EmployeeID', type: 'number' },\r\n        { name: 'FirstName', type: 'string' },\r\n        { name: 'LastName', type: 'string' },\r\n        { name: 'Country', type: 'string' },\r\n        { name: 'City', type: 'string' },\r\n        { name: 'Address', type: 'string' },\r\n        { name: 'Title', type: 'string' },\r\n        { name: 'HireDate', type: 'date' },\r\n        { name: 'children', type: 'array' },\r\n        { name: 'expanded', type: 'bool' },\r\n        { name: 'BirthDate', type: 'date' }\r\n    ],\r\n    hierarchy:\r\n    {\r\n        root: 'children'\r\n    },\r\n    id: 'EmployeeID',\r\n    localData: employees\r\n};\r\nvar dataAdapter = new $.jqx.dataAdapter(source);\r\n// create Tree Grid\r\n$(\"#treeGrid\").jqxTreeGrid(\r\n{\r\n    width: 600,\r\n    source: dataAdapter,\r\n    sortable: true,\r\n    columns: [\r\n        { text: 'FirstName', dataField: 'FirstName', width: 150 },\r\n        { text: 'LastName', dataField: 'LastName', width: 120 },\r\n        { text: 'Title', dataField: 'Title', width: 160 },\r\n        { text: 'Birth Date', dataField: 'BirthDate', cellsFormat: 'd', width: 120 },\r\n        { text: 'Hire Date', dataField: 'HireDate', cellsFormat: 'd', width: 120 },\r\n        { text: 'Address', dataField: 'Address', width: 250 },\r\n        { text: 'City', dataField: 'City', width: 120 },\r\n        { text: 'Country', dataField: 'Country' }\r\n    ]\r\n});\r\n</CODE></PRE>\r\n<LI>Binding to JSON. Items in the data source must contain information on the parent-child relationships. Using this information, the TreeGrid will create records and organize them into a hierarchical structure. Information on parent-child relationships must be implemented in the data source by two data fields. One field must store the records' unique IDs. The other data field must contain the parent record's ID for each record. To specify these data fields for the jqxTreeGrid, use the \"keyDataField\" and \"parentDataField\" members of the \"hierarchy\" object. <BR><BR>1. Add a \"hierarchy\" object as a member of the \"source\" object. <BR>2. Add a member called \"keyDataField\" and a member called \"parentDataField\" to the \"hierarchy\" object. <BR>3. Set the \"keyDataField\" and \"parentDataField\" to point to the data fields in the data source that contain information about the parent-child relationships. <PRE style=\"OVERFLOW: auto; MAX-WIDTH: 630px; WIDTH: 630px; MAX-HEIGHT: 400px\"><CODE>\r\nvar employees = \r\n[\r\n    {\r\n        \"EmployeeID\": 1,\r\n        \"FirstName\": \"Nancy\",\r\n        \"LastName\": \"Davolio\",\r\n        \"ReportsTo\": 2,\r\n        \"Country\": \"USA\",\r\n        \"Title\": \"Sales Representative\",\r\n        \"HireDate\": \"1992-05-01 00:00:00\",\r\n        \"BirthDate\": \"1948-12-08 00:00:00\",\r\n        \"City\": \"Seattle\",\r\n        \"Address\": \"507 - 20th Ave. E.Apt. 2A\"\r\n    },\r\n    {\r\n        \"EmployeeID\": 2,\r\n        \"FirstName\": \"Andrew\",\r\n        \"LastName\": \"Fuller\",\r\n        \"ReportsTo\": null,\r\n        \"Country\": \"USA\",\r\n        \"Title\": \"Vice President, Sales\",\r\n        \"HireDate\": \"1992-08-14 00:00:00\",\r\n        \"BirthDate\": \"1952-02-19 00:00:00\",\r\n        \"City\": \"Tacoma\",\r\n        \"Address\": \"908 W. Capital Way\"\r\n    },\r\n    {\r\n        \"EmployeeID\": 3,\r\n        \"FirstName\": \"Janet\",\r\n        \"LastName\": \"Leverling\",\r\n        \"ReportsTo\": 2,\r\n        \"Country\": \"USA\",\r\n        \"Title\": \"Sales Representative\",\r\n        \"HireDate\": \"1992-04-01 00:00:00\",\r\n        \"BirthDate\": \"1963-08-30 00:00:00\",\r\n        \"City\": \"Kirkland\",\r\n        \"Address\": \"722 Moss Bay Blvd.\"\r\n    },\r\n    {\r\n        \"EmployeeID\": 4,\r\n        \"FirstName\": \"Margaret\",\r\n        \"LastName\": \"Peacock\",\r\n        \"ReportsTo\": 2,\r\n        \"Country\": \"USA\",\r\n        \"Title\": \"Sales Representative\",\r\n        \"HireDate\": \"1993-05-03 00:00:00\",\r\n        \"BirthDate\": \"1937-09-19 00:00:00\",\r\n        \"City\": \"Redmond\",\r\n        \"Address\": \"4110 Old Redmond Rd.\"\r\n    },\r\n    {\r\n        \"EmployeeID\": 5,\r\n        \"FirstName\": \"Steven\",\r\n        \"LastName\": \"Buchanan\",\r\n        \"ReportsTo\": 2,\r\n        \"Country\": \"UK\",\r\n        \"Title\": \"Sales Manager\",\r\n        \"HireDate\": \"1993-10-17 00:00:00\",\r\n        \"BirthDate\": \"1955-03-04 00:00:00\",\r\n        \"City\": \"London\",\r\n        \"Address\": \"14 Garrett Hill\"\r\n    },\r\n    {\r\n        \"EmployeeID\": 6,\r\n        \"FirstName\": \"Michael\",\r\n        \"LastName\": \"Suyama\",\r\n        \"ReportsTo\": 5,\r\n        \"Country\": \"UK\",\r\n        \"Title\": \"Sales Representative\",\r\n        \"HireDate\": \"1993-10-17 00:00:00\",\r\n        \"BirthDate\": \"1963-07-02 00:00:00\",\r\n        \"City\": \"London\",\r\n        \"Address\": \"Coventry House Miner Rd.\"\r\n    },\r\n    {\r\n        \"EmployeeID\": 7,\r\n        \"FirstName\": \"Robert\",\r\n        \"LastName\": \"King\",\r\n        \"ReportsTo\": 5,\r\n        \"Country\": \"UK\",\r\n        \"Title\": \"Sales Representative\",\r\n        \"HireDate\": \"1994-01-02 00:00:00\",\r\n        \"BirthDate\": \"1960-05-29 00:00:00\",\r\n        \"City\": \"London\",\r\n        \"Address\": \"Edgeham Hollow Winchester Way\"\r\n    },\r\n    {\r\n        \"EmployeeID\": 8,\r\n        \"FirstName\": \"Laura\",\r\n        \"LastName\": \"Callahan\",\r\n        \"ReportsTo\": 2,\r\n        \"Country\": \"USA\",\r\n        \"Title\": \"Inside Sales Coordinator\",\r\n        \"HireDate\": \"1994-03-05 00:00:00\",\r\n        \"BirthDate\": \"1958-01-09 00:00:00\",\r\n        \"City\": \"Seattle\",\r\n        \"Address\": \"4726 - 11th Ave. N.E.\"\r\n    },\r\n    {\r\n        \"EmployeeID\": 9,\r\n        \"FirstName\": \"Anne\",\r\n        \"LastName\": \"Dodsworth\",\r\n        \"ReportsTo\": 5,\r\n        \"Country\": \"UK\",\r\n        \"Title\": \"Sales Representative\",\r\n        \"HireDate\": \"1994-11-15 00:00:00\",\r\n        \"BirthDate\": \"1966-01-27 00:00:00\",\r\n        \"City\": \"London\",\r\n        \"Address\": \"7 Houndstooth Rd.\"\r\n    }\r\n];\r\n// prepare the data\r\nvar source =\r\n{\r\n    dataType: \"json\",\r\n    dataFields: [\r\n        { name: 'EmployeeID', type: 'number' },\r\n        { name: 'ReportsTo', type: 'number' },\r\n        { name: 'FirstName', type: 'string' },\r\n        { name: 'LastName', type: 'string' },\r\n        { name: 'Country', type: 'string' },\r\n        { name: 'City', type: 'string' },\r\n        { name: 'Address', type: 'string' },\r\n        { name: 'Title', type: 'string' },\r\n        { name: 'HireDate', type: 'date' },\r\n        { name: 'BirthDate', type: 'date' }\r\n    ],\r\n    hierarchy:\r\n    {\r\n        keyDataField: { name: 'EmployeeID' },\r\n        parentDataField: { name: 'ReportsTo' }\r\n    },\r\n    id: 'EmployeeID',\r\n    localData: employees\r\n};\r\nvar dataAdapter = new $.jqx.dataAdapter(source);\r\n// create Tree Grid\r\n$(\"#treeGrid\").jqxTreeGrid(\r\n{\r\n    width: 600,\r\n    source: dataAdapter,\r\n    sortable: true,\r\n    ready: function()\r\n    {\r\n        $(\"#treeGrid\").jqxTreeGrid('expandRow', '2');\r\n    },\r\n    columns: [\r\n        { text: 'FirstName', columnGroup: 'Name', dataField: 'FirstName', width: 150 },\r\n        { text: 'LastName', columnGroup: 'Name', dataField: 'LastName', width: 120 },\r\n        { text: 'Title', dataField: 'Title', width: 160 },\r\n        { text: 'Birth Date', dataField: 'BirthDate', cellsFormat: 'd', width: 120 },\r\n        { text: 'Hire Date', dataField: 'HireDate', cellsFormat: 'd', width: 120 },\r\n        { text: 'Address', dataField: 'Address', width: 250 },\r\n        { text: 'City', dataField: 'City', width: 120 },\r\n        { text: 'Country', dataField: 'Country' }\r\n    ],\r\n    columnGroups: [\r\n        { text: 'Name', name: 'Name' }\r\n    ]\r\n});\r\n</CODE></PRE>\r\n<LI>Binding to XML. The approach is similar to binding to JSON with the only difference that the source object's \"dataType\" should be set to \"xml\" and you muse set the source object's \"root\", \"record\" and \"id\" members. Items in the data source must contain information on the parent-child relationships. Using this information, the TreeGrid will create records and organize them into a hierarchical structure. Information on parent-child relationships must be implemented in the data source by two data fields. One field must store the records' unique IDs. The other data field must contain the parent record's ID for each record. To specify these data fields for the jqxTreeGrid, use the \"keyDataField\" and \"parentDataField\" members of the \"hierarchy\" object. <BR><BR>1. Add a \"hierarchy\" object as a member of the \"source\" object. <BR>2. Add a member called \"keyDataField\" and a member called \"parentDataField\" to the \"hierarchy\" object. <BR>3. Set the \"keyDataField\" and \"parentDataField\" to point to the data fields in the data source that contain information about the parent-child relationships. <BR><BR>XML Data - employees.xml<BR><BR><PRE class=code style=\"OVERFLOW: auto; MAX-WIDTH: 630px; WIDTH: 630px; MARGIN: 0px; MAX-HEIGHT: 400px\"><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;?xml version=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"1.0\"</SPAN>?&gt;</SPAN><DIV><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Employees&gt;</SPAN><DIV>  <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Employee EmployeeID=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"5\"</SPAN>&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;LastName&gt;</SPAN>Buchanan<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/LastName&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;FirstName&gt;</SPAN>Steven<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/FirstName&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Title&gt;</SPAN>Sales Manager<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Title&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;TitleOfCourtesy&gt;</SPAN>Mr.<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/TitleOfCourtesy&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;BirthDate&gt;</SPAN>1955-03-04<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/BirthDate&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;HireDate&gt;</SPAN>1993-10-17<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/HireDate&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Address&gt;</SPAN>14 Garrett Hill<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Address&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;City&gt;</SPAN>London<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/City&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Region/&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;PostalCode&gt;</SPAN>SW1 8JR<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/PostalCode&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Extension&gt;</SPAN>3453<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Extension&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;ReportsTo&gt;</SPAN>2<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/ReportsTo&gt;</SPAN><DIV>  <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Employee&gt;</SPAN><DIV>  <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Employee EmployeeID=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"8\"</SPAN>&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;LastName&gt;</SPAN>Callahan<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/LastName&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;FirstName&gt;</SPAN>Laura<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/FirstName&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Title&gt;</SPAN>Inside Sales Coordinator<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Title&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;TitleOfCourtesy&gt;</SPAN>Ms.<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/TitleOfCourtesy&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;BirthDate&gt;</SPAN>1958-01-09<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/BirthDate&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;HireDate&gt;</SPAN>1994-03-05<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/HireDate&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Address&gt;</SPAN>4726 - 11th Ave. N.E.<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Address&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;City&gt;</SPAN>Seattle<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/City&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Region&gt;</SPAN>WA<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Region&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;PostalCode&gt;</SPAN>98105<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/PostalCode&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Extension&gt;</SPAN>2344<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Extension&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;ReportsTo&gt;</SPAN>2<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/ReportsTo&gt;</SPAN><DIV>  <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Employee&gt;</SPAN><DIV>  <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Employee EmployeeID=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"1\"</SPAN>&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;LastName&gt;</SPAN>Davolio<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/LastName&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;FirstName&gt;</SPAN>Nancy<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/FirstName&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Title&gt;</SPAN>Sales Representative<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Title&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;TitleOfCourtesy&gt;</SPAN>Ms.<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/TitleOfCourtesy&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;BirthDate&gt;</SPAN>1948-12-08<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/BirthDate&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;HireDate&gt;</SPAN>1992-05-01<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/HireDate&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Address&gt;</SPAN><DIV>      507 - 20th Ave. E.<DIV>      Apt. 2A<DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Address&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;City&gt;</SPAN>Seattle<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/City&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Region&gt;</SPAN>WA<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Region&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;PostalCode&gt;</SPAN>98122<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/PostalCode&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Extension&gt;</SPAN>5467<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Extension&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;ReportsTo&gt;</SPAN>2<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/ReportsTo&gt;</SPAN><DIV>  <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Employee&gt;</SPAN><DIV>  <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Employee EmployeeID=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"9\"</SPAN>&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;LastName&gt;</SPAN>Dodsworth<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/LastName&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;FirstName&gt;</SPAN>Anne<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/FirstName&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Title&gt;</SPAN>Sales Representative<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Title&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;TitleOfCourtesy&gt;</SPAN>Ms.<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/TitleOfCourtesy&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;BirthDate&gt;</SPAN>1966-01-27<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/BirthDate&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;HireDate&gt;</SPAN>1994-11-15<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/HireDate&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Address&gt;</SPAN>7 Houndstooth Rd.<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Address&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;City&gt;</SPAN>London<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/City&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Region/&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;PostalCode&gt;</SPAN>WG2 7LT<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/PostalCode&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Extension&gt;</SPAN>452<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Extension&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;ReportsTo&gt;</SPAN>5<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/ReportsTo&gt;</SPAN><DIV>  <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Employee&gt;</SPAN><DIV>  <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Employee EmployeeID=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"2\"</SPAN>&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;LastName&gt;</SPAN>Fuller<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/LastName&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;FirstName&gt;</SPAN>Andrew<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/FirstName&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Title&gt;</SPAN>Vice President, Sales<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Title&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;TitleOfCourtesy&gt;</SPAN>Dr.<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/TitleOfCourtesy&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;BirthDate&gt;</SPAN>1952-02-19<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/BirthDate&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;HireDate&gt;</SPAN>1992-08-14<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/HireDate&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Address&gt;</SPAN>908 W. Capital Way<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Address&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;City&gt;</SPAN>Tacoma<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/City&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Region&gt;</SPAN>WA<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Region&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;PostalCode&gt;</SPAN>98401<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/PostalCode&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Extension&gt;</SPAN>3457<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Extension&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;ReportsTo&gt;</SPAN>0<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/ReportsTo&gt;</SPAN><DIV>  <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Employee&gt;</SPAN><DIV>  <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Employee EmployeeID=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"7\"</SPAN>&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;LastName&gt;</SPAN>King<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/LastName&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;FirstName&gt;</SPAN>Robert<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/FirstName&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Title&gt;</SPAN>Sales Representative<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Title&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;TitleOfCourtesy&gt;</SPAN>Mr.<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/TitleOfCourtesy&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;BirthDate&gt;</SPAN>1960-05-29<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/BirthDate&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;HireDate&gt;</SPAN>1994-01-02<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/HireDate&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Address&gt;</SPAN><DIV>      Edgeham Hollow<DIV>      Winchester Way<DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Address&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;City&gt;</SPAN>London<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/City&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Region/&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;PostalCode&gt;</SPAN>RG1 9SP<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/PostalCode&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Extension&gt;</SPAN>465<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Extension&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;ReportsTo&gt;</SPAN>5<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/ReportsTo&gt;</SPAN><DIV>  <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Employee&gt;</SPAN><DIV>  <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Employee EmployeeID=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"3\"</SPAN>&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;LastName&gt;</SPAN>Leverling<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/LastName&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;FirstName&gt;</SPAN>Janet<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/FirstName&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Title&gt;</SPAN>Sales Representative<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Title&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;TitleOfCourtesy&gt;</SPAN>Ms.<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/TitleOfCourtesy&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;BirthDate&gt;</SPAN>1963-08-30<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/BirthDate&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;HireDate&gt;</SPAN>1992-04-01<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/HireDate&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Address&gt;</SPAN>722 Moss Bay Blvd.<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Address&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;City&gt;</SPAN>Kirkland<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/City&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Region&gt;</SPAN>WA<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Region&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;PostalCode&gt;</SPAN>98033<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/PostalCode&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Extension&gt;</SPAN>3355<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Extension&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;ReportsTo&gt;</SPAN>2<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/ReportsTo&gt;</SPAN><DIV>  <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Employee&gt;</SPAN><DIV>  <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Employee EmployeeID=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"4\"</SPAN>&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;LastName&gt;</SPAN>Peacock<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/LastName&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;FirstName&gt;</SPAN>Margaret<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/FirstName&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Title&gt;</SPAN>Sales Representative<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Title&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;TitleOfCourtesy&gt;</SPAN>Mrs.<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/TitleOfCourtesy&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;BirthDate&gt;</SPAN>1937-09-19<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/BirthDate&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;HireDate&gt;</SPAN>1993-05-03<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/HireDate&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Address&gt;</SPAN>4110 Old Redmond Rd.<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Address&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;City&gt;</SPAN>Redmond<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/City&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Region&gt;</SPAN>WA<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Region&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;PostalCode&gt;</SPAN>98052<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/PostalCode&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Extension&gt;</SPAN>5176<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Extension&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;ReportsTo&gt;</SPAN>2<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/ReportsTo&gt;</SPAN><DIV>  <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Employee&gt;</SPAN><DIV>  <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Employee EmployeeID=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"6\"</SPAN>&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;LastName&gt;</SPAN>Suyama<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/LastName&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;FirstName&gt;</SPAN>Michael<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/FirstName&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Title&gt;</SPAN>Sales Representative<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Title&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;TitleOfCourtesy&gt;</SPAN>Mr.<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/TitleOfCourtesy&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;BirthDate&gt;</SPAN>1963-07-02<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/BirthDate&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;HireDate&gt;</SPAN>1993-10-17<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/HireDate&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Address&gt;</SPAN><DIV>      Coventry House<DIV>      Miner Rd.<DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Address&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;City&gt;</SPAN>London<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/City&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Region/&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;PostalCode&gt;</SPAN>EC2 7JR<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/PostalCode&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Extension&gt;</SPAN>428<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Extension&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;ReportsTo&gt;</SPAN>5<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/ReportsTo&gt;</SPAN><DIV>  <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Employee&gt;</SPAN><DIV><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Employees&gt;</SPAN><DIV><DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></PRE><PRE style=\"OVERFLOW: auto; MAX-WIDTH: 630px; WIDTH: 630px; MAX-HEIGHT: 400px\"><CODE>\r\nvar source =\r\n{\r\n    dataType: \"xml\",\r\n    dataFields: [\r\n        { name: 'EmployeeID', type: 'number' },\r\n        { name: 'ReportsTo', type: 'number' },\r\n        { name: 'FirstName', type: 'string' },\r\n        { name: 'LastName', type: 'string' },\r\n        { name: 'City', type: 'string' },\r\n        { name: 'Address', type: 'string' },\r\n        { name: 'Title', type: 'string' },\r\n        { name: 'HireDate', type: 'date' },\r\n        { name: 'BirthDate', type: 'date' }\r\n    ],\r\n    hierarchy:\r\n    {\r\n        keyDataField: { name: 'EmployeeID' },\r\n        parentDataField: { name: 'ReportsTo' }\r\n    },\r\n    id: 'EmployeeID',\r\n    root: 'Employees',\r\n    record: 'Employee',\r\n    url: \"employees.xml\"\r\n};\r\nvar dataAdapter = new $.jqx.dataAdapter(source);\r\n// create Tree Grid\r\n$(\"#treeGrid\").jqxTreeGrid(\r\n{\r\n    width: 680,\r\n    source: dataAdapter,\r\n    pageable: true,\r\n    columnsResize: true,\r\n    ready: function()\r\n    {\r\n        // expand row with 'EmployeeKey = 2'\r\n        $(\"#treeGrid\").jqxTreeGrid('expandRow', 2);\r\n    },\r\n    columns: [\r\n        { text: 'FirstName', dataField: 'FirstName', minWidth: 100, width: 150 },\r\n        { text: 'LastName',  dataField: 'LastName', width: 150 },\r\n        { text: 'Title', dataField: 'Title', width: 300 },\r\n        { text: 'Address', dataField: 'Address', width: 200 },\r\n        { text: 'City', dataField: 'City', width: 150 },\r\n        { text: 'Birth Date', dataField: 'BirthDate', cellsFormat: 'd', width: 120 },\r\n        { text: 'Hire Date', dataField: 'HireDate', cellsFormat: 'd', width: 120 }\r\n    ]\r\n});\r\n</CODE></PRE>\r\n<LI>Binding to Nested XML. In order to use a nested XML as a data source, you will have to do the following: <BR><BR>1. Set the \"root\", \"record\" and \"id\" members of the source object. For more information about these members, visit: <A href=\"http://www.jqwidgets.com/jquery-widgets-documentation/documentation/jqxdataadapter/jquery-data-adapter.htm\">jquery-data-adapter.htm</A>. <BR>2. Add a \"hierarchy\" object as a member of the \"source\" object. <BR>3. Add \"root\" and \"record\" members to the \"hierarchy\" object to specify the nested sequence. <BR><BR>XML Data - employees.xml<BR><BR><PRE class=code style=\"OVERFLOW: auto; MAX-WIDTH: 630px; WIDTH: 630px; MARGIN: 0px; MAX-HEIGHT: 400px\"><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;?xml version=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"1.0\"</SPAN>?&gt;</SPAN><DIV><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Employees&gt;</SPAN><DIV>  <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Employee EmployeeID=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"2\"</SPAN>&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;LastName&gt;</SPAN>Fuller<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/LastName&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;FirstName&gt;</SPAN>Andrew<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/FirstName&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Title&gt;</SPAN>Vice President, Sales<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Title&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;TitleOfCourtesy&gt;</SPAN>Dr.<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/TitleOfCourtesy&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;BirthDate&gt;</SPAN>1952-02-19<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/BirthDate&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;HireDate&gt;</SPAN>1992-08-14<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/HireDate&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Address&gt;</SPAN>908 W. Capital Way<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Address&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;City&gt;</SPAN>Tacoma<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/City&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Region&gt;</SPAN>WA<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Region&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;PostalCode&gt;</SPAN>98401<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/PostalCode&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Extension&gt;</SPAN>3457<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Extension&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Notes&gt;</SPAN>Andrew received his BTS commercial in 1974 and a Ph.D. in international marketing from the University of Dallas in 1981.  He is fluent in French and Italian and reads German.  He joined the company as a sales representative, was promoted to sales manager in January 1992 and to vice president of sales in March 1993.  Andrew is a member of the Sales Management Roundtable, the Seattle Chamber of Commerce, and the Pacific Rim Importers Association.<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Notes&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Employees&gt;</SPAN><DIV>      <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Employee EmployeeID=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"8\"</SPAN>&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;LastName&gt;</SPAN>Callahan<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/LastName&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;FirstName&gt;</SPAN>Laura<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/FirstName&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Title&gt;</SPAN>Inside Sales Coordinator<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Title&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;TitleOfCourtesy&gt;</SPAN>Ms.<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/TitleOfCourtesy&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;BirthDate&gt;</SPAN>1958-01-09<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/BirthDate&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;HireDate&gt;</SPAN>1994-03-05<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/HireDate&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Address&gt;</SPAN>4726 - 11th Ave. N.E.<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Address&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;City&gt;</SPAN>Seattle<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/City&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Region&gt;</SPAN>WA<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Region&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;PostalCode&gt;</SPAN>98105<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/PostalCode&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Extension&gt;</SPAN>2344<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Extension&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Notes&gt;</SPAN>Laura received a BA in psychology from the University of Washington.  She has also completed a course in business French.  She reads and writes French.<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Notes&gt;</SPAN><DIV>      <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Employee&gt;</SPAN><DIV>      <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Employee EmployeeID=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"1\"</SPAN>&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;LastName&gt;</SPAN>Davolio<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/LastName&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;FirstName&gt;</SPAN>Nancy<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/FirstName&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Title&gt;</SPAN>Sales Representative<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Title&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;TitleOfCourtesy&gt;</SPAN>Ms.<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/TitleOfCourtesy&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;BirthDate&gt;</SPAN>1948-12-08<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/BirthDate&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;HireDate&gt;</SPAN>1992-05-01<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/HireDate&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Address&gt;</SPAN><DIV>          507 - 20th Ave. E.<DIV>          Apt. 2A<DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Address&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;City&gt;</SPAN>Seattle<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/City&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Region&gt;</SPAN>WA<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Region&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;PostalCode&gt;</SPAN>98122<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/PostalCode&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Extension&gt;</SPAN>5467<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Extension&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Notes&gt;</SPAN>Education includes a BA in psychology from Colorado State University in 1970.  She also completed <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"The Art of the Cold Call.\"</SPAN>  Nancy is a member of Toastmasters International.<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Notes&gt;</SPAN><DIV>      <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Employee&gt;</SPAN><DIV>      <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Employee EmployeeID=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"5\"</SPAN>&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;LastName&gt;</SPAN>Buchanan<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/LastName&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;FirstName&gt;</SPAN>Steven<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/FirstName&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Title&gt;</SPAN>Sales Manager<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Title&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;TitleOfCourtesy&gt;</SPAN>Mr.<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/TitleOfCourtesy&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;BirthDate&gt;</SPAN>1955-03-04<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/BirthDate&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;HireDate&gt;</SPAN>1993-10-17<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/HireDate&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Address&gt;</SPAN>14 Garrett Hill<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Address&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;City&gt;</SPAN>London<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/City&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Region/&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;PostalCode&gt;</SPAN>SW1 8JR<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/PostalCode&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Extension&gt;</SPAN>3453<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Extension&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Notes&gt;</SPAN>Steven Buchanan graduated from St. Andrews University, Scotland, with a BSC degree in 1976.  Upon joining the company as a sales representative in 1992, he spent 6 months in an orientation program at the Seattle office and then returned to his permanent post in London.  He was promoted to sales manager in March 1993.  Mr. Buchanan has completed the courses <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"Successful Telemarketing\" and \"International Sales Management.\"</SPAN>  He is fluent in French.<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Notes&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Employees&gt;</SPAN><DIV>          <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Employee EmployeeID=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"9\"</SPAN>&gt;</SPAN><DIV>            <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;LastName&gt;</SPAN>Dodsworth<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/LastName&gt;</SPAN><DIV>            <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;FirstName&gt;</SPAN>Anne<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/FirstName&gt;</SPAN><DIV>            <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Title&gt;</SPAN>Sales Representative<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Title&gt;</SPAN><DIV>            <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;TitleOfCourtesy&gt;</SPAN>Ms.<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/TitleOfCourtesy&gt;</SPAN><DIV>            <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;BirthDate&gt;</SPAN>1966-01-27<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/BirthDate&gt;</SPAN><DIV>            <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;HireDate&gt;</SPAN>1994-11-15<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/HireDate&gt;</SPAN><DIV>            <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Address&gt;</SPAN>7 Houndstooth Rd.<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Address&gt;</SPAN><DIV>            <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;City&gt;</SPAN>London<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/City&gt;</SPAN><DIV>            <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Region/&gt;</SPAN><DIV>            <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;PostalCode&gt;</SPAN>WG2 7LT<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/PostalCode&gt;</SPAN><DIV>            <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Extension&gt;</SPAN>452<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Extension&gt;</SPAN><DIV>            <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Notes&gt;</SPAN>Anne has a BA degree in English from St. Lawrence College.  She is fluent in French and German.<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Notes&gt;</SPAN><DIV>          <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Employee&gt;</SPAN><DIV>          <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Employee EmployeeID=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"7\"</SPAN>&gt;</SPAN><DIV>            <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;LastName&gt;</SPAN>King<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/LastName&gt;</SPAN><DIV>            <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;FirstName&gt;</SPAN>Robert<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/FirstName&gt;</SPAN><DIV>            <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Title&gt;</SPAN>Sales Representative<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Title&gt;</SPAN><DIV>            <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;TitleOfCourtesy&gt;</SPAN>Mr.<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/TitleOfCourtesy&gt;</SPAN><DIV>            <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;BirthDate&gt;</SPAN>1960-05-29<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/BirthDate&gt;</SPAN><DIV>            <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;HireDate&gt;</SPAN>1994-01-02<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/HireDate&gt;</SPAN><DIV>            <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Address&gt;</SPAN><DIV>              Edgeham Hollow<DIV>              Winchester Way<DIV>            <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Address&gt;</SPAN><DIV>            <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;City&gt;</SPAN>London<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/City&gt;</SPAN><DIV>            <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Region/&gt;</SPAN><DIV>            <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;PostalCode&gt;</SPAN>RG1 9SP<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/PostalCode&gt;</SPAN><DIV>            <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Extension&gt;</SPAN>465<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Extension&gt;</SPAN><DIV>            <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Notes&gt;</SPAN>Robert King served in the Peace Corps and traveled extensively before completing his degree in English at the University of Michigan in 1992, the year he joined the company.  After completing a course entitled <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"Selling in Europe,\"</SPAN> he was transferred to the London office in March 1993.<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Notes&gt;</SPAN><DIV>          <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Employee&gt;</SPAN><DIV>          <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Employee EmployeeID=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"6\"</SPAN>&gt;</SPAN><DIV>            <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;LastName&gt;</SPAN>Suyama<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/LastName&gt;</SPAN><DIV>            <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;FirstName&gt;</SPAN>Michael<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/FirstName&gt;</SPAN><DIV>            <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Title&gt;</SPAN>Sales Representative<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Title&gt;</SPAN><DIV>            <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;TitleOfCourtesy&gt;</SPAN>Mr.<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/TitleOfCourtesy&gt;</SPAN><DIV>            <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;BirthDate&gt;</SPAN>1963-07-02<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/BirthDate&gt;</SPAN><DIV>            <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;HireDate&gt;</SPAN>1993-10-17<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/HireDate&gt;</SPAN><DIV>            <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Address&gt;</SPAN><DIV>              Coventry House<DIV>              Miner Rd.<DIV>            <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Address&gt;</SPAN><DIV>            <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;City&gt;</SPAN>London<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/City&gt;</SPAN><DIV>            <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Region/&gt;</SPAN><DIV>            <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;PostalCode&gt;</SPAN>EC2 7JR<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/PostalCode&gt;</SPAN><DIV>            <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Extension&gt;</SPAN>428<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Extension&gt;</SPAN><DIV>            <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Notes&gt;</SPAN>Michael is a graduate of Sussex University (MA, economics, 1983) and the University of California at Los Angeles (MBA, marketing, 1986).  He has also taken the courses <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"Multi-Cultural Selling\" and \"Time Management for the Sales Professional.\"</SPAN>  He is fluent in Japanese and can read and write French, Portuguese, and Spanish.<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Notes&gt;</SPAN><DIV>          <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Employee&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Employees&gt;</SPAN><DIV>      <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Employee&gt;</SPAN><DIV>      <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Employee EmployeeID=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"3\"</SPAN>&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;LastName&gt;</SPAN>Leverling<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/LastName&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;FirstName&gt;</SPAN>Janet<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/FirstName&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Title&gt;</SPAN>Sales Representative<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Title&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;TitleOfCourtesy&gt;</SPAN>Ms.<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/TitleOfCourtesy&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;BirthDate&gt;</SPAN>1963-08-30<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/BirthDate&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;HireDate&gt;</SPAN>1992-04-01<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/HireDate&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Address&gt;</SPAN>722 Moss Bay Blvd.<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Address&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;City&gt;</SPAN>Kirkland<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/City&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Region&gt;</SPAN>WA<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Region&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;PostalCode&gt;</SPAN>98033<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/PostalCode&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Extension&gt;</SPAN>3355<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Extension&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Notes&gt;</SPAN>Janet has a BS degree in chemistry from Boston College (1984).  She has also completed a certificate program in food retailing management.  Janet was hired as a sales associate in 1991 and promoted to sales representative in February 1992.<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Notes&gt;</SPAN><DIV>      <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Employee&gt;</SPAN><DIV>      <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Employee EmployeeID=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"4\"</SPAN>&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;LastName&gt;</SPAN>Peacock<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/LastName&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;FirstName&gt;</SPAN>Margaret<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/FirstName&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Title&gt;</SPAN>Sales Representative<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Title&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;TitleOfCourtesy&gt;</SPAN>Mrs.<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/TitleOfCourtesy&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;BirthDate&gt;</SPAN>1937-09-19<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/BirthDate&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;HireDate&gt;</SPAN>1993-05-03<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/HireDate&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Address&gt;</SPAN>4110 Old Redmond Rd.<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Address&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;City&gt;</SPAN>Redmond<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/City&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Region&gt;</SPAN>WA<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Region&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;PostalCode&gt;</SPAN>98052<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/PostalCode&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Extension&gt;</SPAN>5176<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Extension&gt;</SPAN><DIV>        <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;Notes&gt;</SPAN>Margaret holds a BA in English literature from Concordia College (1958) and an MA from the American Institute of Culinary Arts (1966).  She was assigned to the London office temporarily from July through November 1992.<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Notes&gt;</SPAN><DIV>      <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Employee&gt;</SPAN><DIV>    <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Employees&gt;</SPAN><DIV>  <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Employee&gt;</SPAN><DIV><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/Employees&gt;</SPAN><DIV><DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></PRE><PRE style=\"OVERFLOW: auto; MAX-WIDTH: 630px; WIDTH: 630px; MAX-HEIGHT: 400px\"><CODE>\r\nvar source =\r\n{\r\n    dataType: \"xml\",\r\n    dataFields: [\r\n        { name: 'EmployeeID', type: 'number' },\r\n        { name: 'ReportsTo', type: 'number' },\r\n        { name: 'FirstName', type: 'string' },\r\n        { name: 'LastName', type: 'string' },\r\n        { name: 'City', type: 'string' },\r\n        { name: 'Address', type: 'string' },\r\n        { name: 'Title', type: 'string' },\r\n        { name: 'HireDate', type: 'date' },\r\n        { name: 'BirthDate', type: 'date' }\r\n    ],\r\n    hierarchy:\r\n    {\r\n        // defines the root and record of each hiearchy level.\r\n        root: 'Employees',\r\n        record: 'Employee'\r\n    },\r\n    id: 'EmployeeID',\r\n    root: 'Employees',\r\n    record: 'Employee',\r\n    url: \"employees.xml\"\r\n};\r\nvar dataAdapter = new $.jqx.dataAdapter(source);\r\n// create Tree Grid\r\n$(\"#treeGrid\").jqxTreeGrid(\r\n{\r\n    width: 680,\r\n    source: dataAdapter,\r\n    columnsResize: true,\r\n    ready: function () {\r\n        // expand row with 'EmployeeKey = 2'\r\n        $(\"#treeGrid\").jqxTreeGrid('expandRow', 2);\r\n    },\r\n    columns: [\r\n        { text: 'FirstName', dataField: 'FirstName', minWidth: 100, width: 150 },\r\n        { text: 'LastName', dataField: 'LastName', width: 150 },\r\n        { text: 'Title', dataField: 'Title', width: 300 },\r\n        { text: 'Address', dataField: 'Address', width: 200 },\r\n        { text: 'City', dataField: 'City', width: 150 },\r\n        { text: 'Birth Date', dataField: 'BirthDate', cellsFormat: 'd', width: 120 },\r\n        { text: 'Hire Date', dataField: 'HireDate', cellsFormat: 'd', width: 120 }\r\n    ]\r\n});\r\n</CODE></PRE>\r\n<LI>Binding to CSV/TSV. The source object's \"dataType\" should be set to \"csv\" or \"tab\". Items in the data source must contain information on the parent-child relationships. Using this information, the TreeGrid will create records and organize them into a hierarchical structure. Information on parent-child relationships must be implemented in the data source by two data fields. One field must store the records' unique IDs. The other data field must contain the parent record's ID for each record. To specify these data fields for the jqxTreeGrid, use the \"keyDataField\" and \"parentDataField\" members of the \"hierarchy\" object. <BR><BR>1. Add a \"hierarchy\" object as a member of the \"source\" object. <BR>2. Add a member called \"keyDataField\" and a member called \"parentDataField\" to the \"hierarchy\" object. <BR>3. Set the \"keyDataField\" and \"parentDataField\" to point to the data fields in the data source that contain information about the parent-child relationships. <BR><BR>Tab Data - locations.tsv<BR><BR><PRE class=code style=\"OVERFLOW: auto; MAX-WIDTH: 630px; WIDTH: 630px; MARGIN: 0px; MAX-HEIGHT: 400px\">1\tAruba\t37\t103000<DIV>2\tAfghanistan\t35\t22720000<DIV>3\tAngola\t36\t12878000<DIV>4\tAnguilla\t37\t8000<DIV>5\tAlbania\t34\t3401200<DIV>6\tAndorra\t34\t78000<DIV>7\tNetherlands Antilles\t37\t217000<DIV>8\tUnited Arab Emirates\t35\t2441000<DIV>9\tArgentina\t38\t37032000<DIV>10\tArmenia\t35\t3520000<DIV>11\tAntigua and Barbuda\t37\t68000<DIV>12\tAustria\t34\t8091800<DIV>13\tAzerbaijan\t35\t7734000<DIV>14\tBurundi\t36\t6695000<DIV>15\tBelgium\t34\t10239000<DIV>16\tBenin\t36\t6097000<DIV>17\tSpain\t34\t39441700<DIV>18\tEstonia\t34\t1439200<DIV>19\tEthiopia\t36\t62565000<DIV>20\tFinland\t34\t5171300<DIV>22\tFalkland Islands\t38\t2000<DIV>23\tFrance\t34\t59225700<DIV>24\tFaroe Islands\t34\t43000<DIV>26\tGabon\t36\t1226000<DIV>27\tUnited Kingdom\t34\t59623400<DIV>28\tGeorgia\t35\t4968000<DIV>29\tGhana\t36\t20212000<DIV>30\tGibraltar\t34\t25000<DIV>31\tGuinea\t36\t7430000<DIV>32\tGuadeloupe\t37\t456000<DIV>33\tGambia\t36\t1305000<DIV>34\tEurope\tnull\t731000000.00<DIV>35\tAsia\tnull\t3879000000.00\t<DIV>36\tAfrica\tnull\t922011000.00<DIV>37\tNorth America\tnull\t528720588.00<DIV>21\tAustralia\tnull\t23300000<DIV>25\tAntarctica\tnull\t1323<DIV>38\tSouth America\tnull\t382000000.00<DIV>39\tLithuania\t34\t3698500<DIV>40\tLuxembourg\t34\t435700<DIV>41\tLatvia\t34\t2424200<DIV>42\tMonaco\t34\t34000<DIV>43\tMoldova\t34\t4380000<DIV>44\tMexico\t37\t98881000<DIV>45\tMacao\t35\t473000<DIV>46\tMorocco\t36\t28351000<DIV>47\tMadagascar\t36\t15942000<DIV>48\tMaldives\t35\t286000<DIV>49\tUnited States\t37\t278357000<DIV>50\tSouth Korea\t35\t46844000<DIV>51\tIndia\t35\t1013662000<DIV>52\tCanada\t37\t31147000<DIV>53\tBrazil\t38\t170115000<DIV>54\tRussian Federation\t34\t146934000<DIV>55\tZimbabwe\t36\t11669000<DIV>56\tGermany\t34\t82164700<DIV>57\tDjibouti\t36\t638000<DIV>58\tDominica\t37\t71000<DIV>59\tDenmark\t34\t5330000<DIV>60\tHong Kong\t35\t6782000<DIV>61\tJapan\t35\t126714000<DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></PRE><PRE style=\"OVERFLOW: auto; MAX-WIDTH: 630px; WIDTH: 630px; MAX-HEIGHT: 400px\"><CODE>\r\n// prepare the data\r\nvar source =\r\n{\r\n    dataType: \"tab\",\r\n    dataFields: [\r\n        { name: \"Id\", type: \"number\" },\r\n        { name: \"Name\", type: \"string\" },\r\n        { name: \"ParentID\", type: \"number\" },\r\n        { name: \"Population\", type: \"number\" }\r\n    ],\r\n    hierarchy:\r\n    {\r\n        keyDataField: { name: 'Id' },\r\n        parentDataField: { name: 'ParentID' }\r\n    },\r\n    id: 'Id',\r\n    url: 'locations.tsv'\r\n};\r\nvar dataAdapter = new $.jqx.dataAdapter(source);\r\n// create Tree Grid\r\n$(\"#treeGrid\").jqxTreeGrid(\r\n{\r\n    width: 500,\r\n    height: 400,\r\n    source: dataAdapter,\r\n    ready: function()\r\n    {\r\n        $(\"#treeGrid\").jqxTreeGrid('expandRow', '34');\r\n    },\r\n    columns:\r\n    [\r\n        { text: 'Location Name', dataField: \"Name\", align: 'center', width: '50%' },\r\n        { text: 'Population', dataField: \"Population\", align: 'center', width: '50%'}\r\n    ]\r\n});\r\n</CODE></PRE>\r\n<LI>Virtual Mode(Load on Demand) - you can load data into jqxTreeGrid dynamically, by using callback functions. For each record only when required, jqxTreeGrid calls <CODE>virtualModeCreateRecords</CODE> function and this allows you to provide records on demand. During the initialization of each record, jqxTreeGrid calls <CODE>virtualModeRecordCreating</CODE> which allows you to update some record settings. <PRE style=\"OVERFLOW: auto; MAX-WIDTH: 630px; WIDTH: 630px; MAX-HEIGHT: 400px\"><CODE>\r\nvar generateTasks = function (rowsCount) {\r\n    var rowsCount = !rowsCount ? 1 + Math.floor(Math.random() * 5) : rowsCount;\r\n    var data = new Array();\r\n    var generatekey = function () {\r\n        var S4 = function () {\r\n            return (((1 + Math.random()) * 0x10000) | 0).tostring(16).substring(1);\r\n        };\r\n        return (S4() + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + S4() + S4());\r\n    };\r\n    for (var i = 0; i &lt; rowsCount; i++) {\r\n        var row = {};\r\n        var tasks = [\"Shopping\", \"Housewares\", \"Kitchen supplies\", \"Groceries\", \"Cleaning supplies\", \"Office supplies\", \"Remodeling\", \"Paint bedroom\", \"Paint wall\", \"Fitness\", \"Decorate living room\",\r\n            \"Fix lights\", \"Fix front door\", \"Clean kitchen\"];\r\n        var firstNames =\r\n        [\r\n            \"Andrew\", \"Nancy\", \"Shelley\", \"Regina\", \"Yoshi\", \"Antoni\", \"Mayumi\", \"Ian\", \"Peter\", \"Lars\", \"Petra\", \"Martin\", \"Sven\", \"Elio\", \"Beate\", \"Cheryl\", \"Michael\", \"Guylene\"\r\n        ];\r\n        var lastNames =\r\n        [\r\n            \"Fuller\", \"Davolio\", \"Burke\", \"Murphy\", \"Nagase\", \"Saavedra\", \"Ohno\", \"Devling\", \"Wilson\", \"Peterson\", \"Winkler\", \"Bein\", \"Petersen\", \"Rossi\", \"Vileid\", \"Saylor\", \"Bjorn\", \"Nodier\"\r\n        ];\r\n        row[\"id\"] = generatekey();\r\n        row[\"firstname\"] = firstNames[Math.floor(Math.random() * firstNames.length)];\r\n        row[\"lastname\"] = lastNames[Math.floor(Math.random() * lastNames.length)];\r\n        row[\"name\"] = row[\"firstname\"] + \" \" + row[\"lastname\"];\r\n        var taskindex = Math.floor(Math.random() * tasks.length);\r\n        row[\"task\"] = tasks[taskindex];\r\n        row[\"duration\"] = 1+Math.floor(Math.random() * 10);\r\n        data.push(row);\r\n    }\r\n    return data;\r\n}\r\n// create Tree Grid\r\n$(\"#treeGrid\").jqxTreeGrid(\r\n{\r\n    width: 600,\r\n    pageable: true,\r\n    altRows: true,\r\n    virtualModeCreateRecords: function(expandedRecord, done)\r\n    {\r\n        // expandedRecord is equal to null when the function is initially called, because there is still no record to be expanded.\r\n        // prepare the data\r\n        var source =\r\n        {\r\n            dataType: \"array\",\r\n            dataFields: [\r\n                { name: \"id\", type: \"string\" },\r\n                { name: \"name\", type: \"string\" },\r\n                { name: \"duration\", type: \"number\" },\r\n                { name: \"task\", type: \"number\" }\r\n            ],\r\n            localData: expandedRecord === null ? generateTasks(3000) : generateTasks(),\r\n            id: 'id'\r\n        }\r\n        var dataAdapter = new $.jqx.dataAdapter(source, {\r\n            loadComplete: function () {\r\n                done(dataAdapter.records);\r\n            }\r\n        });\r\n        dataAdapter.dataBind();\r\n    },\r\n    virtualModeRecordCreating: function(record)\r\n    {\r\n        if (record.level == 2) {\r\n            // by setting the record's leaf member to true, you will define the record as a leaf node.\r\n            record.leaf = true;\r\n        }\r\n    },\r\n    columns: [\r\n        { text: 'Task', dataField: \"task\", align: 'center', width: 250 },\r\n        { text: 'Person Name', dataField: \"name\", cellsAlign: 'center', align: 'center', width: 200 },\r\n        {\r\n            text: 'Duration', dataField: \"duration\", cellsAlign: 'center', align: 'center', cellsRenderer: function (row, column, value) {\r\n                var hour = value &gt; 1 ? \" hours\" : \" hour\";\r\n                return value + hour;\r\n            }\r\n        }\r\n    ]\r\n});\r\n</CODE></PRE></LI></UL>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/KB495/",
            "exampleDescription": "source is set to dataAdapter",
            "dataType": "object",
            "ts_dataType": "any"
        },
        {
            "name": "sortable",
            "defaultValue": "false",
            "description": "<P>Enables/Disables the sorting feature. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>sortable</CODE> property. </P>\n<PRE><CODE>$('#treeGrid').jqxTreeGrid({sortable: true}); </CODE></PRE>\n\r\n<P>Get the <CODE>sortable</CODE> property. </P>\n<PRE><CODE>var sortable = $('#treeGrid').jqxTreeGrid('sortable'); </CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/84E8f/",
            "exampleDescription": "sortable is set to true",
            "dataType": "boolean",
            "exampleInit": {
                "sortable": "true"
            }
        },
        {
            "name": "showAggregates",
            "defaultValue": "false",
            "description": "<P>Determines whether the jqxTreeGrid's Aggregates bar is visible. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>showAggregates</CODE> property. </P>\n<PRE><CODE>$('#treeGrid').jqxTreeGrid({showAggregates: true}); </CODE></PRE>\n\r\n<P>Apply aggregates. </P>\n<PRE class=code style=\"OVERFLOW: auto; MAX-WIDTH: 630px; WIDTH: 630px; MARGIN: 0px; MAX-HEIGHT: 400px\">var data = [<DIV>    {<DIV>        <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"id\": \"1\", \"name\": \"Corporate Headquarters\", \"budget\": \"1230000\", \"location\": \"Las Vegas\"</SPAN>,<DIV>        <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"children\"</SPAN>:<DIV>        [<DIV>            {<DIV>                <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"id\": \"2\", \"name\": \"Finance Division\", \"budget\": \"423000\", \"location\": \"San Antonio\"</SPAN>,<DIV>                <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"children\"</SPAN>:<DIV>                [<DIV>                    {<DIV>                        <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"id\": \"4\", \"name\": \"Investment Department\", \"budget\": \"310000\", \"location\": \"San Antonio\"</SPAN>,<DIV>                        children:<DIV>                        [<DIV>                            { <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"id\": \"5\", \"name\": \"Banking Office\", \"budget\": \"240000\", \"location\": \"San Antonio\"</SPAN> },<DIV>                            { <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"id\": \"6\", \"name\": \"Bonds Office\", \"budget\": \"70000\", \"location\": \"San Antonio\"</SPAN> },<DIV>                        ]<DIV>                    },<DIV>                    { <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"id\": \"3\", \"name\": \"Accounting Department\", \"budget\": \"113000\", \"location\": \"San Antonio\"</SPAN> }<DIV>                ]<DIV>            },<DIV>            {<DIV>                <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"id\": \"7\", \"name\": \"Operations Division\", \"budget\": \"600000\", \"location\": \"Miami\"</SPAN>,<DIV>                <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"children\"</SPAN>:<DIV>                [<DIV>                    { <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"id\": \"8\", \"name\": \"Manufacturing Department\", \"budget\": \"300000\", \"location\": \"Miami\"</SPAN> },<DIV>                    { <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"id\": \"9\", \"name\": \"Public Relations Department\", \"budget\": \"200000\", \"location\": \"Miami\"</SPAN> },<DIV>                    { <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"id\": \"10\", \"name\": \"Sales Department\", \"budget\": \"100000\", \"location\": \"Miami\"</SPAN> }<DIV>                ]<DIV>            },<DIV>            { <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"id\": \"11\", \"name\": \"Research Division\", \"budget\": \"200000\", \"location\": \"Boston\"</SPAN> }<DIV>        ]<DIV>    }<DIV>];<DIV><DIV>var source =<DIV>    {<DIV>        dataType: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"json\"</SPAN>,<DIV>        dataFields: [<DIV>            { name: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"name\", type: \"string\"</SPAN> },<DIV>            { name: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"budget\", type: \"number\"</SPAN> },<DIV>            { name: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"id\", type: \"number\"</SPAN> },<DIV>            { name: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"children\", type: \"array\"</SPAN> },<DIV>            { name: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"location\", type: \"string\"</SPAN> }<DIV>        ],<DIV>        hierarchy:<DIV>            {<DIV>                root: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"children\"</SPAN><DIV>            },<DIV>        localData: data,<DIV>        id: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"id\"</SPAN><DIV>    };<DIV><DIV>var dataAdapter = new $.jqx.dataAdapter(source, {<DIV>    loadComplete: function () {<DIV><DIV>    }<DIV>});<DIV>// create jqxTreeGrid.<DIV>$(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"#treeGrid\"</SPAN>).jqxTreeGrid(<DIV>{<DIV>    source: dataAdapter,<DIV>    altRows: true,<DIV>    width: 680,<DIV>    showSubAggregates: true,<DIV>    columnsResize: true,<DIV>    ready: function () {<DIV>        $(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"#treeGrid\"</SPAN>).jqxTreeGrid(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'expandRow', '1'</SPAN>);<DIV>        $(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"#treeGrid\"</SPAN>).jqxTreeGrid(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'expandRow', '2'</SPAN>);<DIV>    },<DIV>    columns: [<DIV>        { text: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"Name\", align: \"center\", dataField: \"name\"</SPAN>, width: 270 },<DIV>        { text: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"Location\", dataField: \"location\", cellsAlign: \"center\", align: \"center\"</SPAN>, width: 200 },<DIV>        {<DIV>            text: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"Budget\", cellsAlign: \"center\", align: \"center\", dataField: \"budget\", cellsFormat: \"c2\"</SPAN>,<DIV>            aggregates: [{<DIV>                <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'Total'</SPAN>:<DIV>                function (aggregatedValue, currentValue, column, record) {<DIV>                    return aggregatedValue + currentValue;<DIV>                }<DIV>            }],<DIV>            aggregatesRenderer: function (aggregatesText, column, element, aggregates, type) {<DIV>                if (type == <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"aggregates\"</SPAN>) {<DIV>                    var renderstring = <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;div style=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'margin: 4px; float: right;  height: 100%;'</SPAN>&gt;</SPAN>\"</SPAN>;<DIV>                }<DIV>                else {<DIV>                    var renderstring = <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;div style=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'float: right;  height: 100%;'</SPAN>&gt;</SPAN>\"</SPAN>;<DIV>                }<DIV>                var euro = dataAdapter.formatnumber(0.74 * aggregates.Total, <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"f2\"</SPAN>);;<DIV>                var usd = dataAdapter.formatnumber(aggregates.Total, <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"f2\"</SPAN>);;<DIV>                renderstring += <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;table&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;tr&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;td rowspan=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'2'</SPAN>&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;strong&gt;</SPAN>Total: <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/strong&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/td&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;td&gt;</SPAN>\" + usd + \" USD<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/td&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;tr&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;td&gt;</SPAN>\" + euro + \" EUR<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/td&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/tr&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/table&gt;</SPAN>\"</SPAN>;<DIV>                return renderstring;<DIV>            }<DIV>        }<DIV>    ]<DIV>}n\r\n<P>Get the <CODE>showAggregates</CODE> property. </P>\n<PRE><CODE>var showAggregates = $('#treeGrid').jqxTreeGrid('showAggregates'); </CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/WyU62/",
            "exampleDescription": "showAggregates is set to true",
            "dataType": "boolean",
            "exampleInit": {
                "showAggregates": "true"
            }
        },
        {
            "name": "showSubAggregates",
            "defaultValue": "false",
            "description": "<P>Determines whether jqxTreeGrid would calculate summary values for all values within a group of records and would display the result inside footer cell after each group. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>showSubAggregates</CODE> property. </P>\n<PRE><CODE>$('#treeGrid').jqxTreeGrid({showSubAggregates: true}); </CODE></PRE>\n\r\n<P>Apply aggregates. </P>\n<PRE class=code style=\"OVERFLOW: auto; MAX-WIDTH: 630px; WIDTH: 630px; MARGIN: 0px; MAX-HEIGHT: 400px\">var data = [<DIV>    {<DIV>        <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"id\": \"1\", \"name\": \"Corporate Headquarters\", \"budget\": \"1230000\", \"location\": \"Las Vegas\"</SPAN>,<DIV>        <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"children\"</SPAN>:<DIV>        [<DIV>            {<DIV>                <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"id\": \"2\", \"name\": \"Finance Division\", \"budget\": \"423000\", \"location\": \"San Antonio\"</SPAN>,<DIV>                <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"children\"</SPAN>:<DIV>                [<DIV>                    {<DIV>                        <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"id\": \"4\", \"name\": \"Investment Department\", \"budget\": \"310000\", \"location\": \"San Antonio\"</SPAN>,<DIV>                        children:<DIV>                        [<DIV>                            { <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"id\": \"5\", \"name\": \"Banking Office\", \"budget\": \"240000\", \"location\": \"San Antonio\"</SPAN> },<DIV>                            { <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"id\": \"6\", \"name\": \"Bonds Office\", \"budget\": \"70000\", \"location\": \"San Antonio\"</SPAN> },<DIV>                        ]<DIV>                    },<DIV>                    { <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"id\": \"3\", \"name\": \"Accounting Department\", \"budget\": \"113000\", \"location\": \"San Antonio\"</SPAN> }<DIV>                ]<DIV>            },<DIV>            {<DIV>                <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"id\": \"7\", \"name\": \"Operations Division\", \"budget\": \"600000\", \"location\": \"Miami\"</SPAN>,<DIV>                <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"children\"</SPAN>:<DIV>                [<DIV>                    { <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"id\": \"8\", \"name\": \"Manufacturing Department\", \"budget\": \"300000\", \"location\": \"Miami\"</SPAN> },<DIV>                    { <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"id\": \"9\", \"name\": \"Public Relations Department\", \"budget\": \"200000\", \"location\": \"Miami\"</SPAN> },<DIV>                    { <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"id\": \"10\", \"name\": \"Sales Department\", \"budget\": \"100000\", \"location\": \"Miami\"</SPAN> }<DIV>                ]<DIV>            },<DIV>            { <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"id\": \"11\", \"name\": \"Research Division\", \"budget\": \"200000\", \"location\": \"Boston\"</SPAN> }<DIV>        ]<DIV>    }<DIV>];<DIV><DIV>var source =<DIV>    {<DIV>        dataType: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"json\"</SPAN>,<DIV>        dataFields: [<DIV>            { name: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"name\", type: \"string\"</SPAN> },<DIV>            { name: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"budget\", type: \"number\"</SPAN> },<DIV>            { name: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"id\", type: \"number\"</SPAN> },<DIV>            { name: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"children\", type: \"array\"</SPAN> },<DIV>            { name: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"location\", type: \"string\"</SPAN> }<DIV>        ],<DIV>        hierarchy:<DIV>            {<DIV>                root: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"children\"</SPAN><DIV>            },<DIV>        localData: data,<DIV>        id: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"id\"</SPAN><DIV>    };<DIV><DIV>var dataAdapter = new $.jqx.dataAdapter(source, {<DIV>    loadComplete: function () {<DIV><DIV>    }<DIV>});<DIV>// create jqxTreeGrid.<DIV>$(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"#treeGrid\"</SPAN>).jqxTreeGrid(<DIV>{<DIV>    source: dataAdapter,<DIV>    altRows: true,<DIV>    width: 680,<DIV>    showSubAggregates: true,<DIV>    columnsResize: true,<DIV>    ready: function () {<DIV>        $(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"#treeGrid\"</SPAN>).jqxTreeGrid(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'expandRow', '1'</SPAN>);<DIV>        $(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"#treeGrid\"</SPAN>).jqxTreeGrid(<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'expandRow', '2'</SPAN>);<DIV>    },<DIV>    columns: [<DIV>        { text: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"Name\", align: \"center\", dataField: \"name\"</SPAN>, width: 270 },<DIV>        { text: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"Location\", dataField: \"location\", cellsAlign: \"center\", align: \"center\"</SPAN>, width: 200 },<DIV>        {<DIV>            text: <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"Budget\", cellsAlign: \"center\", align: \"center\", dataField: \"budget\", cellsFormat: \"c2\"</SPAN>,<DIV>            aggregates: [{<DIV>                <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'Total'</SPAN>:<DIV>                function (aggregatedValue, currentValue, column, record) {<DIV>                    return aggregatedValue + currentValue;<DIV>                }<DIV>            }],<DIV>            aggregatesRenderer: function (aggregatesText, column, element, aggregates, type) {<DIV>                if (type == <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"aggregates\"</SPAN>) {<DIV>                    var renderstring = <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;div style=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'margin: 4px; float: right;  height: 100%;'</SPAN>&gt;</SPAN>\"</SPAN>;<DIV>                }<DIV>                else {<DIV>                    var renderstring = <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;div style=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'float: right;  height: 100%;'</SPAN>&gt;</SPAN>\"</SPAN>;<DIV>                }<DIV>                var euro = dataAdapter.formatnumber(0.74 * aggregates.Total, <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"f2\"</SPAN>);;<DIV>                var usd = dataAdapter.formatnumber(aggregates.Total, <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"f2\"</SPAN>);;<DIV>                renderstring += <SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">\"<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;table&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;tr&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;td rowspan=<SPAN style=\"COLOR: #a24; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">'2'</SPAN>&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;strong&gt;</SPAN>Total: <SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/strong&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/td&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;td&gt;</SPAN>\" + usd + \" USD<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/td&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;tr&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;td&gt;</SPAN>\" + euro + \" EUR<SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/td&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/tr&gt;</SPAN><SPAN style=\"COLOR: #11a; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; CLEAR: both; MARGIN: 0px; PADDING-RIGHT: 0px\">&lt;/table&gt;</SPAN>\"</SPAN>;<DIV>                return renderstring;<DIV>            }<DIV>        }<DIV>    ]<DIV>}n\r\n<P>Get the <CODE>showSubAggregates</CODE> property. </P>\n<PRE><CODE>var showSubAggregates = $('#treeGrid').jqxTreeGrid('showSubAggregates'); </CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/LJaRE/",
            "exampleDescription": "showSubAggregates is set to true",
            "dataType": "boolean",
            "exampleInit": {
                "showAggregates": "true",
                "showSubAggregates": "true"
            }
        },
        {
            "name": "showToolbar",
            "defaultValue": "false",
            "description": "<P>Determines whether the jqxTreeGrid's Toolbar is visible. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>showToolbar</CODE> property. </P>\n<PRE><CODE>$('#treeGrid').jqxTreeGrid({showToolbar: true}); </CODE></PRE>\n\r\n<P>Get the <CODE>showToolbar</CODE> property. </P>\n<PRE><CODE>var showToolbar = $('#treeGrid').jqxTreeGrid('showToolbar'); </CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/Jk59r/",
            "exampleDescription": "showToolbar is set to true",
            "dataType": "boolean",
            "exampleInit": {
                "showToolbar": "true"
            }
        },
        {
            "name": "showStatusbar",
            "defaultValue": "false",
            "description": "<P>Determines whether the jqxTreeGrid's Statusbar is visible. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>showStatusbar</CODE> property. </P>\n<PRE><CODE>$('#treeGrid').jqxTreeGrid({showStatusbar: true}); </CODE></PRE>\n\r\n<P>Get the <CODE>showStatusbar</CODE> property. </P>\n<PRE><CODE>var showStatusbar = $('#treeGrid').jqxTreeGrid('showStatusbar'); </CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/kTvA3/",
            "exampleDescription": "showStatusbar is set to true",
            "dataType": "boolean",
            "exampleInit": {
                "showStatusbar": "true"
            }
        },
        {
            "name": "statusBarHeight",
            "defaultValue": "34",
            "description": "<P>Sets or gets the height of the Statusbar. Statusbar is displayed after setting <CODE>showStatusbar</CODE> to true. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>statusBarHeight</CODE> property. </P>\n<PRE><CODE>$('#treeGrid').jqxTreeGrid({statusBarHeight: 40}); </CODE></PRE>\n\r\n<P>Get the <CODE>statusBarHeight</CODE> property. </P>\n<PRE><CODE>var statusBarHeight = $('#treeGrid').jqxTreeGrid('statusBarHeight'); </CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/UeAxX/",
            "exampleDescription": "statusBarHeight is set to 40",
            "dataType": "number",
            "exampleInit": {
                "statusBarHeight": "40"
            }
        },
        {
            "name": "scrollBarSize",
            "defaultValue": "17",
            "description": "<P>Sets or gets the size of the scrollbars. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>scrollBarSize</CODE> property. </P>\n<PRE><CODE>$('#treeGrid').jqxTreeGrid({scrollBarSize: 15}); </CODE></PRE>\n\r\n<P>Get the <CODE>scrollBarSize</CODE> property. </P>\n<PRE><CODE>var scrollBarSize = $('#treeGrid').jqxTreeGrid('scrollBarSize'); </CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/d9egc/",
            "exampleDescription": "scrollBarSize is set to 15",
            "dataType": "number",
            "exampleInit": {
                "scrollBarSize": "15"
            }
        },
        {
            "name": "selectionMode",
            "defaultValue": "\"multipleRows\"",
            "description": "<P>Sets or gets the selection mode. Possible values: <CODE>\"multipleRows\"</CODE>, <CODE>\"singleRow\"</CODE> and <CODE>\"custom\"</CODE>. In the \"custom\" mode, rows could be selected/unselected only through the API. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>selectionMode</CODE> property. </P>\n<PRE><CODE>$('#treeGrid').jqxTreeGrid({selectionMode: \"singleRow\" }); </CODE></PRE>\n\r\n<P>Get the <CODE>enableBrowserSelection</CODE> property. </P>\n<PRE><CODE>var selectionMode = $('#treeGrid').jqxTreeGrid('selectionMode'); </CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/85YCv/",
            "exampleDescription": "selectionMode is set to 'singleRow'",
            "dataType": "string",
            "ts_dataType": "enum:TreeGridSelectionMode",
            "exampleInit": {
                "selectionMode": "singleRow"
            }
        },
        {
            "name": "showHeader",
            "defaultValue": "true",
            "description": "<P>Sets or gets the jqxTreeGrid's columns visibility. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>showHeader</CODE> property. </P>\n<PRE><CODE>$('#treeGrid').jqxTreeGrid({showHeader: false});</CODE></PRE>\n\r\n<P>Get the <CODE>showHeader</CODE> property. </P>\n<PRE><CODE>var showHeader = $('#treeGrid').jqxTreeGrid('showHeader');</CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/tnSww/",
            "exampleDescription": "showHeader is set to false",
            "dataType": "boolean",
            "exampleInit": {
                "showHeader": "false"
            }
        },
        {
            "name": "theme",
            "defaultValue": "''",
            "description": "<P>Sets the widget's theme. </P>\n\r\n<UL><LI>Include the theme's CSS file after jqx.base.css.<BR>The following code example adds the 'material' theme. <PRE><CODE>\r\n<PRE><CODE>&lt;link rel=\"stylesheet\" href=\"../../jqwidgets/styles/jqx.base.css\" type=\"text/css\" /&gt;\r\n&lt;link rel=\"stylesheet\" href=\"../../jqwidgets/styles/jqx.material.css\" type=\"text/css\" /&gt;\r\n</CODE></PRE>\r\n</CODE></PRE>\r\n<LI>Set the widget's theme property to 'material' when you initialize it. </LI></UL>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/tKpr2/",
            "exampleDescription": "theme is set to 'material'",
            "dataType": "string",
            "exampleInit": {
                "theme": "material"
            }
        },
        {
            "name": "toolbarHeight",
            "defaultValue": "34",
            "description": "<P>Sets or gets the height of the Toolbar. Toolbar is displayed after setting <CODE>showToolbar</CODE> to true. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>toolbarHeight</CODE> property. </P>\n<PRE><CODE>$('#treeGrid').jqxTreeGrid({toolbarHeight: 40}); </CODE></PRE>\n\r\n<P>Get the <CODE>toolbarHeight</CODE> property. </P>\n<PRE><CODE>var toolbarHeight = $('#treeGrid').jqxTreeGrid('toolbarHeight'); </CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/zQnHr/",
            "exampleDescription": "toolbarHeight is set to 40",
            "dataType": "number",
            "exampleInit": {
                "showToolbar": "true",
                "toolbarHeight": "40"
            }
        },
        {
            "name": "width",
            "defaultValue": "null",
            "description": "<P>Sets or gets the jqxTreeGrid's width. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>width</CODE> property. </P>\n<PRE><CODE>$('#treeGrid').jqxTreeGrid({width:\"200px\"});</CODE></PRE>\n\r\n<P>Get the <CODE>width</CODE> property. </P>\n<PRE><CODE>var width = $('#treeGrid').jqxTreeGrid('width');</CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/MFcRZ/",
            "exampleDescription": "width is set to 680",
            "dataType": "number",
            "ts_dataType": "string | number",
            "exampleInit": {
                "width": "500"
            }
        },
        {
            "name": "virtualModeCreateRecords",
            "defaultValue": "null",
            "description": "<P>By defining that function you can load data into jqxTreeGrid dynamically. For each record only when required, jqxTreeGrid calls <CODE>virtualModeCreateRecords</CODE> function and this allows you to provide records on demand. In order to enable the load on demand feature, you should also define the <CODE>virtualModeRecordCreating</CODE> function. </P>\n\r\n<UL><LI>Row Key/ID - unique ID. If null is passed, that the function's result would be the records of the first hierarchy level. \r\n<LI>Done - callback function. Call it when data is loaded and pass the loaded data as an Array. </LI></UL>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>virtualModeCreateRecords</CODE> property. </P>\n<PRE style=\"OVERFLOW: auto; MAX-WIDTH: 630px; WIDTH: 630px; MAX-HEIGHT: 400px\"><CODE>\r\nvar generateTasks = function (rowsCount) {\r\n    var rowsCount = !rowsCount ? 1 + Math.floor(Math.random() * 5) : rowsCount;\r\n    var data = new Array();\r\n    var generatekey = function () {\r\n        var S4 = function () {\r\n            return (((1 + Math.random()) * 0x10000) | 0).tostring(16).substring(1);\r\n        };\r\n        return (S4() + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + S4() + S4());\r\n    };\r\n    for (var i = 0; i &lt; rowsCount; i++) {\r\n        var row = {};\r\n        var tasks = [\"Shopping\", \"Housewares\", \"Kitchen supplies\", \"Groceries\", \"Cleaning supplies\", \"Office supplies\", \"Remodeling\", \"Paint bedroom\", \"Paint wall\", \"Fitness\", \"Decorate living room\",\r\n            \"Fix lights\", \"Fix front door\", \"Clean kitchen\"];\r\n        var firstNames =\r\n        [\r\n            \"Andrew\", \"Nancy\", \"Shelley\", \"Regina\", \"Yoshi\", \"Antoni\", \"Mayumi\", \"Ian\", \"Peter\", \"Lars\", \"Petra\", \"Martin\", \"Sven\", \"Elio\", \"Beate\", \"Cheryl\", \"Michael\", \"Guylene\"\r\n        ];\r\n        var lastNames =\r\n        [\r\n            \"Fuller\", \"Davolio\", \"Burke\", \"Murphy\", \"Nagase\", \"Saavedra\", \"Ohno\", \"Devling\", \"Wilson\", \"Peterson\", \"Winkler\", \"Bein\", \"Petersen\", \"Rossi\", \"Vileid\", \"Saylor\", \"Bjorn\", \"Nodier\"\r\n        ];\r\n        row[\"id\"] = generatekey();\r\n        row[\"firstname\"] = firstNames[Math.floor(Math.random() * firstNames.length)];\r\n        row[\"lastname\"] = lastNames[Math.floor(Math.random() * lastNames.length)];\r\n        row[\"name\"] = row[\"firstname\"] + \" \" + row[\"lastname\"];\r\n        var taskindex = Math.floor(Math.random() * tasks.length);\r\n        row[\"task\"] = tasks[taskindex];\r\n        row[\"duration\"] = 1+Math.floor(Math.random() * 10);\r\n        data.push(row);\r\n    }\r\n    return data;\r\n}\r\n// create Tree Grid\r\n$(\"#treeGrid\").jqxTreeGrid(\r\n{\r\n    width: 600,\r\n    pageable: true,\r\n    altRows: true,\r\n    virtualModeCreateRecords: function(expandedRecord, done)\r\n    {\r\n        // expandedRecord is equal to null when the function is initially called, because there is still no record to be expanded.\r\n        // prepare the data\r\n        var source =\r\n        {\r\n            dataType: \"array\",\r\n            dataFields: [\r\n                { name: \"id\", type: \"string\" },\r\n                { name: \"name\", type: \"string\" },\r\n                { name: \"duration\", type: \"number\" },\r\n                { name: \"task\", type: \"number\" }\r\n            ],\r\n            localData: expandedRecord === null ? generateTasks(3000) : generateTasks(),\r\n            id: 'id'\r\n        }\r\n        var dataAdapter = new $.jqx.dataAdapter(source, {\r\n            loadComplete: function () {\r\n                done(dataAdapter.records);\r\n            }\r\n        });\r\n        dataAdapter.dataBind();\r\n    },\r\n    virtualModeRecordCreating: function(record)\r\n    {\r\n        if (record.level == 2) {\r\n            // by setting the record's leaf member to true, you will define the record as a leaf node.\r\n            record.leaf = true;\r\n        }\r\n    },\r\n    columns: [\r\n        { text: 'Task', dataField: \"task\", align: 'center', width: 250 },\r\n        { text: 'Person Name', dataField: \"name\", cellsAlign: 'center', align: 'center', width: 200 },\r\n        {\r\n            text: 'Duration', aggregates: ['sum'], dataField: \"duration\", cellsAlign: 'center', align: 'center', cellsRenderer: function (row, column, value) {\r\n                var hour = value &gt; 1 ? \" hours\" : \" hour\";\r\n                return value + hour;\r\n            }\r\n        }\r\n    ]\r\n});\r\n</CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/j82VQ/",
            "exampleDescription": "virtualModeCreateRecords is set to a custom function",
            "dataType": "Function",
            "ts_dataType": "(expandedRecord?: any, done?: any) => void",
            "exampleName": "jqxtreegrid_virtualrecords",
            "exampleInit": {
                "virtualModeCreateRecords": "virtualModeCreateRecords"
            },
            "customExample": {
                "codeType": "custom",
                "code": "&lt;template>\n  &lt;JqxTreeGrid ref=\"myTreeGrid\"\n  :width=\"600\"  :columns=\"columns\"\n  :virtualModeCreateRecords=\"virtualModeCreateRecords\"\n  :virtualModeRecordCreating=\"virtualModeRecordCreating\"/>\n&lt;/template>\n \n&lt;script>\n  import JqxTreeGrid from 'jqwidgets-scripts/jqwidgets-vue/vue_jqxtreegrid.vue';\n \n  export default {\n    components: {\n      JqxTreeGrid\n    },\n    data: function () {\n      return {\n        columns: [\n          { text: 'Task', dataField: \"task\", width: 250 },\n          { text: 'Person Name', dataField: \"name\", width: 200 },\n          {\n            text: 'Duration',\n            dataField: \"duration\",\n            cellsRenderer: function (row, column, value) {\n              var hour = value > 1 ? \"hours\" : \" hour\";\n              return value + hour;\n            }\n          }\n        ]\n      }\n    },\n    methods: {\n     generateTasks: function (rowsCount) {\n       var rowsCount = !rowsCount ? 1 + Math.floor(Math.random() * 5) : rowsCount;\n       var data = new Array();\n       var generatekey = function () {\n         var S4 = function () {\n           return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n         };\n         return (S4() + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + S4() + S4());\n       };\n \n       for (var i = 0; i &lt; rowsCount; i++) {\n         var row = {};\n         var tasks = [\"Shopping\", \"Housewares\", \"Kitchen supplies\", \"Groceries\", \"Cleaning supplies\", \"Office supplies\", \"Remodeling\", \"Paint bedroom\", \"Paint wall\", \"Fitness\", \"Decorate living room\",\n           \"Fix lights\", \"Fix front door\", \"Clean kitchen\"];\n         var firstNames = [ \"Andrew\", \"Nancy\", \"Shelley\", \"Regina\", \"Yoshi\", \"Antoni\", \"Mayumi\", \"Ian\", \"Peter\", \"Lars\", \"Petra\", \"Martin\", \"Sven\", \"Elio\", \"Beate\", \"Cheryl\", \"Michael\", \"Guylene\"];\n         var lastNames = [ \"Fuller\", \"Davolio\", \"Burke\", \"Murphy\", \"Nagase\", \"Saavedra\", \"Ohno\", \"Devling\", \"Wilson\", \"Peterson\", \"Winkler\", \"Bein\", \"Petersen\", \"Rossi\", \"Vileid\", \"Saylor\", \"Bjorn\", \"Nodier\"];\n         row[\"id\"] = generatekey();\n         row[\"firstname\"] = firstNames[Math.floor(Math.random() * firstNames.length)];\n         row[\"lastname\"] = lastNames[Math.floor(Math.random() * lastNames.length)];\n         row[\"name\"] = row[\"firstname\"] + \"\" + row[\"lastname\"];\n         var taskindex = Math.floor(Math.random() * tasks.length);\n         row[\"task\"] = tasks[taskindex];\n         row[\"duration\"] = 1 + Math.floor(Math.random() * 10);\n         data.push(row);\n       }\n       return data;\n     },\n     virtualModeCreateRecords: function(expandedRecord, done) {\n       // expandedRecord is equal to null when the function is initially called, because there is still no record to be expanded.\n       var source = {\n         dataType: \"array\",\n         dataFields: [\n           { name: \"id\", type: \"string\" },\n           { name: \"name\", type: \"string\" },\n           { name: \"duration\", type: \"number\" },\n           { name: \"task\", type: \"number\" }\n         ],\n         localData: expandedRecord === null ? this.generateTasks(10) : this.generateTasks(),\n         id: 'id'\n       }\n       var dataAdapter = new jqx.dataAdapter(source, {\n         loadComplete: function () {\n           done(dataAdapter.records);\n         }\n       });\n       dataAdapter.dataBind();\n     },\n     virtualModeRecordCreating: function (record) {\n       if (record.level == 2) {\n         // by setting the record's leaf member to true, you will define the record as a leaf node.\n         record.leaf = true;\n       }\n     }\n   }\n }\n&lt;/script>"
            }
        },
        {
            "name": "virtualModeRecordCreating",
            "defaultValue": "null",
            "description": "<P>By defining that function you can initialize the dynamic data that you load into jqxTreeGrid. In order to enable the load on demand feature, you should also define <CODE>virtualModeCreateRecords</CODE> function. </P>\n\r\n<UL><LI>Row - object with the following reserved members: \r\n<UL>\r\n<LI>checked - boolean value. Determines the row's checked state. \r\n<LI>expanded - boolean value. Determines the row's expanded state. \r\n<LI>icon - string value. Determines the row's icon url. \r\n<LI>leaf - boolean value. Determines whether the row is a leaf in the hierarchy. When you set <CODE>leaf</CODE> to true, the expand/collapse button would not be displayed. \r\n<LI>level - Integer value. Returns the row's hierarchy level. \r\n<LI>selected - boolean value. Determines the row's selected state. </LI></UL></LI></UL>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>virtualModeRecordCreating</CODE> property. </P>\n<PRE style=\"OVERFLOW: auto; MAX-WIDTH: 630px; WIDTH: 630px; MAX-HEIGHT: 400px\"><CODE>\r\nvar generateTasks = function (rowsCount) {\r\n    var rowsCount = !rowsCount ? 1 + Math.floor(Math.random() * 5) : rowsCount;\r\n    var data = new Array();\r\n    var generatekey = function () {\r\n        var S4 = function () {\r\n            return (((1 + Math.random()) * 0x10000) | 0).tostring(16).substring(1);\r\n        };\r\n        return (S4() + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + S4() + S4());\r\n    };\r\n    for (var i = 0; i &lt; rowsCount; i++) {\r\n        var row = {};\r\n        var tasks = [\"Shopping\", \"Housewares\", \"Kitchen supplies\", \"Groceries\", \"Cleaning supplies\", \"Office supplies\", \"Remodeling\", \"Paint bedroom\", \"Paint wall\", \"Fitness\", \"Decorate living room\",\r\n            \"Fix lights\", \"Fix front door\", \"Clean kitchen\"];\r\n        var firstNames =\r\n        [\r\n            \"Andrew\", \"Nancy\", \"Shelley\", \"Regina\", \"Yoshi\", \"Antoni\", \"Mayumi\", \"Ian\", \"Peter\", \"Lars\", \"Petra\", \"Martin\", \"Sven\", \"Elio\", \"Beate\", \"Cheryl\", \"Michael\", \"Guylene\"\r\n        ];\r\n        var lastNames =\r\n        [\r\n            \"Fuller\", \"Davolio\", \"Burke\", \"Murphy\", \"Nagase\", \"Saavedra\", \"Ohno\", \"Devling\", \"Wilson\", \"Peterson\", \"Winkler\", \"Bein\", \"Petersen\", \"Rossi\", \"Vileid\", \"Saylor\", \"Bjorn\", \"Nodier\"\r\n        ];\r\n        row[\"id\"] = generatekey();\r\n        row[\"firstname\"] = firstNames[Math.floor(Math.random() * firstNames.length)];\r\n        row[\"lastname\"] = lastNames[Math.floor(Math.random() * lastNames.length)];\r\n        row[\"name\"] = row[\"firstname\"] + \" \" + row[\"lastname\"];\r\n        var taskindex = Math.floor(Math.random() * tasks.length);\r\n        row[\"task\"] = tasks[taskindex];\r\n        row[\"duration\"] = 1+Math.floor(Math.random() * 10);\r\n        data.push(row);\r\n    }\r\n    return data;\r\n}\r\n// create Tree Grid\r\n$(\"#treeGrid\").jqxTreeGrid(\r\n{\r\n    width: 600,\r\n    pageable: true,\r\n    altRows: true,\r\n    virtualModeCreateRecords: function(expandedRecord, done)\r\n    {\r\n        // expandedRecord is equal to null when the function is initially called, because there is still no record to be expanded.\r\n        // prepare the data\r\n        var source =\r\n        {\r\n            dataType: \"array\",\r\n            dataFields: [\r\n                { name: \"id\", type: \"string\" },\r\n                { name: \"name\", type: \"string\" },\r\n                { name: \"duration\", type: \"number\" },\r\n                { name: \"task\", type: \"number\" }\r\n            ],\r\n            localData: expandedRecord === null ? generateTasks(3000) : generateTasks(),\r\n            id: 'id'\r\n        }\r\n        var dataAdapter = new $.jqx.dataAdapter(source, {\r\n            loadComplete: function () {\r\n                done(dataAdapter.records);\r\n            }\r\n        });\r\n        dataAdapter.dataBind();\r\n    },\r\n    virtualModeRecordCreating: function(record)\r\n    {\r\n        if (record.level == 2) {\r\n            // by setting the record's leaf member to true, you will define the record as a leaf node.\r\n            record.leaf = true;\r\n        }\r\n    },\r\n    columns: [\r\n        { text: 'Task', dataField: \"task\", align: 'center', width: 250 },\r\n        { text: 'Person Name', dataField: \"name\", cellsAlign: 'center', align: 'center', width: 200 },\r\n        {\r\n            text: 'Duration', aggregates: ['sum'], dataField: \"duration\", cellsAlign: 'center', align: 'center', cellsRenderer: function (row, column, value) {\r\n                var hour = value &gt; 1 ? \" hours\" : \" hour\";\r\n                return value + hour;\r\n            }\r\n        }\r\n    ]\r\n});\r\n</CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/rBUcu/",
            "exampleDescription": "virtualModeRecordCreating is set to a custom function",
            "dataType": "Function",
            "ts_dataType": "(record?: any) => any",
            "exampleName": "jqxtreegrid_virtualrecords",
            "exampleInit": {
                "virtualModeRecordCreating": "virtualModeRecordCreating"
            },
            "customExample": {
                "codeType": "custom",
                "code": "&lt;template>\n  &lt;JqxTreeGrid ref=\"myTreeGrid\"\n  :width=\"600\"  :columns=\"columns\"\n  :virtualModeCreateRecords=\"virtualModeCreateRecords\"\n  :virtualModeRecordCreating=\"virtualModeRecordCreating\"/>\n&lt;/template>\n \n&lt;script>\n  import JqxTreeGrid from 'jqwidgets-scripts/jqwidgets-vue/vue_jqxtreegrid.vue';\n \n  export default {\n    components: {\n      JqxTreeGrid\n    },\n    data: function () {\n      return {\n        columns: [\n          { text: 'Task', dataField: \"task\", width: 250 },\n          { text: 'Person Name', dataField: \"name\", width: 200 },\n          {\n            text: 'Duration',\n            dataField: \"duration\",\n            cellsRenderer: function (row, column, value) {\n              var hour = value > 1 ? \"hours\" : \" hour\";\n              return value + hour;\n            }\n          }\n        ]\n      }\n    },\n    methods: {\n     generateTasks: function (rowsCount) {\n       var rowsCount = !rowsCount ? 1 + Math.floor(Math.random() * 5) : rowsCount;\n       var data = new Array();\n       var generatekey = function () {\n         var S4 = function () {\n           return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n         };\n         return (S4() + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + S4() + S4());\n       };\n \n       for (var i = 0; i &lt; rowsCount; i++) {\n         var row = {};\n         var tasks = [\"Shopping\", \"Housewares\", \"Kitchen supplies\", \"Groceries\", \"Cleaning supplies\", \"Office supplies\", \"Remodeling\", \"Paint bedroom\", \"Paint wall\", \"Fitness\", \"Decorate living room\",\n           \"Fix lights\", \"Fix front door\", \"Clean kitchen\"];\n         var firstNames = [ \"Andrew\", \"Nancy\", \"Shelley\", \"Regina\", \"Yoshi\", \"Antoni\", \"Mayumi\", \"Ian\", \"Peter\", \"Lars\", \"Petra\", \"Martin\", \"Sven\", \"Elio\", \"Beate\", \"Cheryl\", \"Michael\", \"Guylene\"];\n         var lastNames = [ \"Fuller\", \"Davolio\", \"Burke\", \"Murphy\", \"Nagase\", \"Saavedra\", \"Ohno\", \"Devling\", \"Wilson\", \"Peterson\", \"Winkler\", \"Bein\", \"Petersen\", \"Rossi\", \"Vileid\", \"Saylor\", \"Bjorn\", \"Nodier\"];\n         row[\"id\"] = generatekey();\n         row[\"firstname\"] = firstNames[Math.floor(Math.random() * firstNames.length)];\n         row[\"lastname\"] = lastNames[Math.floor(Math.random() * lastNames.length)];\n         row[\"name\"] = row[\"firstname\"] + \"\" + row[\"lastname\"];\n         var taskindex = Math.floor(Math.random() * tasks.length);\n         row[\"task\"] = tasks[taskindex];\n         row[\"duration\"] = 1 + Math.floor(Math.random() * 10);\n         data.push(row);\n       }\n       return data;\n     },\n     virtualModeCreateRecords: function(expandedRecord, done) {\n       // expandedRecord is equal to null when the function is initially called, because there is still no record to be expanded.\n       var source = {\n         dataType: \"array\",\n         dataFields: [\n           { name: \"id\", type: \"string\" },\n           { name: \"name\", type: \"string\" },\n           { name: \"duration\", type: \"number\" },\n           { name: \"task\", type: \"number\" }\n         ],\n         localData: expandedRecord === null ? this.generateTasks(10) : this.generateTasks(),\n         id: 'id'\n       }\n       var dataAdapter = new jqx.dataAdapter(source, {\n         loadComplete: function () {\n           done(dataAdapter.records);\n         }\n       });\n       dataAdapter.dataBind();\n     },\n     virtualModeRecordCreating: function (record) {\n       if (record.level == 2) {\n         // by setting the record's leaf member to true, you will define the record as a leaf node.\n         record.leaf = true;\n       }\n     }\n   }\n }\n&lt;/script>"
            }
        }
    ],
    "events": [
        {
            "name": "bindingComplete",
            "description": "<P>This event is triggered when the jqxTreeGrid binding is completed. *Bind to that event before the jqxTreeGrid's initialization. Otherwise, if you are populating the widget from a local data source and bind to <CODE>bindingComplete</CODE> after the initialization, the event could be already raised when you attach an event handler to it. </P>\n<H4>Code examples </H4>\n<P>Bind to the <CODE>bindingComplete</CODE> event by type: jqxTreeGrid. </P>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/j2taE/",
            "exampleDescription": "Bind to the bindingComplete event by type: jqxTreeGrid.",
            "example": "<PRE><CODE>$('#treeGrid').on('bindingComplete', function (event) { // Some code here. }); </CODE></PRE>",
            "customExample": {
                "customCode": "&lt;template>\n  &lt;JqxTreeGrid ref=\"myTreeGrid\" @bindingComplete=\"onBindingComplete($event)\"\n        :columns=\"columns\" />\n&lt;/template>\n\n&lt;script>\n  import JqxTreeGrid from 'jqwidgets-scripts/jqwidgets-vue/vue_jqxtreegrid.vue';\n\n  export default {\n    components: {\n      JqxTreeGrid\n    },\n    data: function () {\n      return {\n        columns: [\n          { text: 'FirstName', dataField: 'FirstName', width: 150, aggregates: ['count'] },\n          { text: 'LastName', dataField: 'LastName', width: 120 },\n          { text: 'Title', dataField: 'Title', width: 200 }\n        ]\n      }\n    },\n    beforeCreate: function () {\n      let employees = [{\n        'EmployeeID': 2,\n        'FirstName': 'Andrew',\n        'LastName': 'Fuller',\n        'Title': 'Vice President, Sales',\n        'expanded': 'true',\n        children: [{\n          'EmployeeID': 8,\n          'FirstName': 'Laura',\n          'LastName': 'Callahan',\n          'Title': 'Inside Sales Coordinator'\n        }, {\n          'EmployeeID': 5,\n          'FirstName': 'Steven',\n          'LastName': 'Buchanan',\n          'Title': 'Sales Manager',\n          'expanded': 'true',\n          children: [{\n            'EmployeeID': 6,\n            'FirstName': 'Michael',\n            'LastName': 'Suyama',\n            'Title': 'Sales Representative'\n          }, {\n            'EmployeeID': 7,\n            'FirstName': 'Robert',\n            'LastName': 'King',\n            'Title': 'Sales Representative'\n          }]\n        }]\n      }];\n      this.data = {\n        dataType: \"json\",\n        dataFields: [{ name: 'EmployeeID', type: 'number' },\n        { name: 'FirstName', type: 'string' },\n        { name: 'LastName', type: 'string' },\n        { name: 'Title', type: 'string' },\n        { name: 'children', type: 'array' },\n        { name: 'expanded', type: 'bool' }],\n        hierarchy: { root: 'children' },\n        id: 'EmployeeID',\n        localData: employees\n      };\n\n      \n    },\n    mounted: function () {\n      this.source = new jqx.dataAdapter(this.data);\n      this.$refs.myTreeGrid.source = this.source;\n    },\n    methods: {\n      onBindingComplete: function (event) {\n        alert('do something...');\n      }\n    }\n  }\n&lt;/script>"
            }
        },
        {
            "name": "cellBeginEdit",
            "description": "<P>This is triggered when a cell edit begins. Note: To turn on cell editing, you should set the <CODE>editSettings</CODE> property and make sure that its <CODE>editSingleCell</CODE> sub property is set to <CODE>true</CODE>. </P>\n<H4>Code examples </H4>\n<P>Bind to the <CODE>cellBeginEdit</CODE> event by type: jqxTreeGrid. </P>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/nCx5c/",
            "exampleDescription": "Bind to the cellBeginEdit event by type: jqxTreeGrid.",
            "example": "<PRE><CODE>\r\n$('#treeGrid').on('cellBeginEdit', \r\nfunction (event)\r\n{\r\n    var args = event.args;\r\n    // row key\r\n    var rowKey = args.key;\r\n    // row's data.\r\n    var row = args.row;\r\n    // column's data field.\r\n    var columnDataField = args.dataField;\r\n    // column's display field.\r\n    var columnDisplayField = args.displayField;\r\n    // cell's value.\r\n    var value = args.value;\r\n});\r\n                         </CODE></PRE>",
            "exampleInit": {
                "editable": "true",
                "editSettings": "{\n          editSingleCell: true,\n          editOnDoubleClick: true\n      }"
            }
        },
        {
            "name": "cellEndEdit",
            "description": "<P>This is triggered when a cell edit ends. Note: To turn on cell editing, you should set the <CODE>editSettings</CODE> property and make sure that its <CODE>editSingleCell</CODE> sub property is set to <CODE>true</CODE>. </P>\n<H4>Code examples </H4>\n<P>Bind to the <CODE>cellEndEdit</CODE> event by type: jqxTreeGrid. </P>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/nCx5c/",
            "exampleDescription": "Bind to the cellEndEdit event by type: jqxTreeGrid.",
            "example": "<PRE><CODE>\r\n$('#treeGrid').on('cellEndEdit', \r\nfunction (event)\r\n{\r\n    var args = event.args;\r\n    // row key\r\n    var rowKey = args.key;\r\n    // row's data.\r\n    var row = args.row;\r\n    // column's data field.\r\n    var columnDataField = args.dataField;\r\n    // column's display field.\r\n    var columnDisplayField = args.displayField;\r\n    // cell's value.\r\n    var value = args.value;\r\n});\r\n                         </CODE></PRE>",
            "exampleInit": {
                "editable": "true",
                "editSettings": "{\n        editSingleCell: true,\n        editOnDoubleClick: true,\n        saveOnSelectionChange: true,\n        saveOnEnter: true, \n        saveOnPageChange: true,\n        saveOnBlur: true\n      }"
            }
        },
        {
            "name": "cellValueChanged",
            "description": "<P>This event is triggered when a cell value is changed. </P>\n<H4>Code examples </H4>\n<P>Bind to the <CODE>cellValueChanged</CODE> event by type: jqxTreeGrid. </P>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/rKEJL/",
            "exampleDescription": "Bind to the cellValueChanged event by type: jqxTreeGrid.",
            "example": "<PRE><CODE>\r\n$('#treeGrid').on('cellValueChanged', \r\nfunction (event)\r\n{\r\n    // event args.\r\n    var args = event.args;\r\n    // cell value.\r\n    var value = args.value;\r\n    // old cell value.\r\n    var oldValue = args.oldValue;\r\n    // row data.\r\n    var row = args.row;\r\n    // row key.\r\n    var rowKey args.key;\r\n    // column data field.\r\n    var dataField = args.dataField;\r\n});\r\n                         </CODE></PRE>",
            "exampleInit": {
                "editable": "true"
            }
        },
        {
            "name": "columnResized",
            "description": "<P>This event is triggered when a column is resized. </P>\n<H4>Code examples </H4>\n<P>Bind to the <CODE>columnResized</CODE> event by type: jqxTreeGrid. </P>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/k2nAt/",
            "exampleDescription": "Bind to the columnResized event by type: jqxTreeGrid.",
            "example": "<PRE><CODE>\r\n$('#treeGrid').on('columnResized', \r\nfunction (event)\r\n{\r\n    // event args.\r\n    var args = event.args;\r\n    // column data field.\r\n    var dataField = args.dataField;\r\n    // old width.\r\n    var oldWidth = args.oldWidth;\r\n    // new width.\r\n    var newWidth = args.newWidth;\r\n});\r\n                         </CODE></PRE>",
            "exampleInit": {
                "columnsResize": "true"
            },
            "customExample": {
                "customCode": "&lt;template>\n  &lt;JqxTreeGrid ref=\"myTreeGrid\" @columnResized=\"onColumnResized($event)\"\n         :source=\"source\" :columns=\"columns\" :columnsResize=\"true\"/>\n&lt;/template>\n\n&lt;script>\n  import JqxTreeGrid from 'jqwidgets-scripts/jqwidgets-vue/vue_jqxtreegrid.vue';\n\n  export default {\n    components: {\n      JqxTreeGrid\n    },\n    data: function () {\n      return {\n        source: new $.jqx.dataAdapter(this.data),\n        columns: [\n          { text: 'FirstName', dataField: 'FirstName', width: 150, aggregates: ['count'] },\n          { text: 'LastName', dataField: 'LastName', width: 120 },\n          { text: 'Title', dataField: 'Title', width: 200 }\n        ]\n      }\n    },\n    beforeCreate: function () {\n      let employees = [{\n        'EmployeeID': 2,\n        'FirstName': 'Andrew',\n        'LastName': 'Fuller',\n        'Title': 'Vice President, Sales',\n        'expanded': 'true',\n        children: [{\n          'EmployeeID': 8,\n          'FirstName': 'Laura',\n          'LastName': 'Callahan',\n          'Title': 'Inside Sales Coordinator'\n        }, {\n          'EmployeeID': 5,\n          'FirstName': 'Steven',\n          'LastName': 'Buchanan',\n          'Title': 'Sales Manager',\n          'expanded': 'true',\n          children: [{\n            'EmployeeID': 6,\n            'FirstName': 'Michael',\n            'LastName': 'Suyama',\n            'Title': 'Sales Representative'\n          }, {\n            'EmployeeID': 7,\n            'FirstName': 'Robert',\n            'LastName': 'King',\n            'Title': 'Sales Representative'\n          }]\n        }]\n      }];\n      this.data = {\n        dataType: \"json\",\n        dataFields: [{ name: 'EmployeeID', type: 'number' },\n        { name: 'FirstName', type: 'string' },\n        { name: 'LastName', type: 'string' },\n        { name: 'Title', type: 'string' },\n        { name: 'children', type: 'array' },\n        { name: 'expanded', type: 'bool' }],\n        hierarchy: { root: 'children' },\n        id: 'EmployeeID',\n        localData: employees\n      };\n    },\n    methods: {\n      onColumnResized: function (event) {\n        alert('do something...');\n      }\n    }\n  }\n&lt;/script>"
            }
        },
        {
            "name": "columnReordered",
            "description": "<P>This event is triggered when the column's order is changed. </P>\n<H4>Code examples </H4>\n<P>Bind to the <CODE>columnReordered</CODE> event by type: jqxTreeGrid. </P>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/8H8ZW/",
            "exampleDescription": "Bind to the columnReordered event by type: jqxTreeGrid.",
            "example": "<PRE><CODE>\r\n$('#treeGrid').on('columnReordered', \r\nfunction (event)\r\n{\r\n    // event args.\r\n    var args = event.args;\r\n    // column data field.\r\n    var dataField = args.dataField;\r\n    // old index.\r\n    var oldIndex = args.oldIndex;\r\n    // new index.\r\n    var newIndex = args.newIndex;\r\n});\r\n                         </CODE></PRE>",
            "customExample": {
                "customCode": "&lt;template>\n  &lt;JqxTreeGrid ref=\"myTreeGrid\" @columnReordered=\"onColumnReordered($event)\"\n         :source=\"source\" :columns=\"columns\" :columnsReorder=\"true\"/>\n&lt;/template>\n\n&lt;script>\n  import JqxTreeGrid from 'jqwidgets-scripts/jqwidgets-vue/vue_jqxtreegrid.vue';\n\n  export default {\n    components: {\n      JqxTreeGrid\n    },\n    data: function () {\n      return {\n        source: new $.jqx.dataAdapter(this.data),\n        columns: [\n          { text: 'FirstName', dataField: 'FirstName', width: 150, aggregates: ['count'] },\n          { text: 'LastName', dataField: 'LastName', width: 120 },\n          { text: 'Title', dataField: 'Title', width: 200 }\n        ]\n      }\n    },\n    beforeCreate: function () {\n      let employees = [{\n        'EmployeeID': 2,\n        'FirstName': 'Andrew',\n        'LastName': 'Fuller',\n        'Title': 'Vice President, Sales',\n        'expanded': 'true',\n        children: [{\n          'EmployeeID': 8,\n          'FirstName': 'Laura',\n          'LastName': 'Callahan',\n          'Title': 'Inside Sales Coordinator'\n        }, {\n          'EmployeeID': 5,\n          'FirstName': 'Steven',\n          'LastName': 'Buchanan',\n          'Title': 'Sales Manager',\n          'expanded': 'true',\n          children: [{\n            'EmployeeID': 6,\n            'FirstName': 'Michael',\n            'LastName': 'Suyama',\n            'Title': 'Sales Representative'\n          }, {\n            'EmployeeID': 7,\n            'FirstName': 'Robert',\n            'LastName': 'King',\n            'Title': 'Sales Representative'\n          }]\n        }]\n      }];\n      this.data = {\n        dataType: \"json\",\n        dataFields: [{ name: 'EmployeeID', type: 'number' },\n        { name: 'FirstName', type: 'string' },\n        { name: 'LastName', type: 'string' },\n        { name: 'Title', type: 'string' },\n        { name: 'children', type: 'array' },\n        { name: 'expanded', type: 'bool' }],\n        hierarchy: { root: 'children' },\n        id: 'EmployeeID',\n        localData: employees\n      };\n    },\n    methods: {\n      onColumnReordered: function (event) {\n        alert('do something...');\n      }\n    }\n  }\n&lt;/script>"
            }
        },
        {
            "name": "filter",
            "description": "<P>This event is triggered when the jqxTreeGrid's rows filter is changed. </P>\n<H4>Code examples </H4>\n<P>Bind to the <CODE>filter</CODE> event by type: jqxTreeGrid. </P>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/cw9gL/",
            "exampleDescription": "Bind to the filter event by type: jqxTreeGrid.",
            "example": "<PRE><CODE>\r\n$('#treeGrid').on('filter',\r\nfunction (event)\r\n{\r\n    var args = event.args;\r\n    // array of filters. Each filter in that array has 2 members - \"datafield\" and \"filter\". \"datafield\" is the filter column's bound field, \r\n    // \"filter\" is an object with key/value pairs which represents a filter group applied to a column. It has a \"getfilters\" method which returns an Array of the individual filters.\r\n    // each individual filter has the following members: \"condition\", \"value\", \"type\" and \"operator\".\r\n    // For more information about \"condition\" see the \"localization\" property. \r\n    // \"type\" could be \"stringfilter\", \"numberfilter\", \"datefilter\" or \"booleanfilter\".\r\n    // \"operator\" could be \"0\" or \"1\" depending on the relation between the filter with the other filters within the filter group. \r\n    // \"value\" represents the filter's value.\r\n    var filters = args.filters;\r\n});\r\n                         </CODE></PRE>",
            "exampleInit": {
                "filterable": "true"
            }
        },
        {
            "name": "pageChanged",
            "description": "<P>This is triggered when the jqxTreeGrid's current page is changed. </P>\n<H4>Code examples </H4>\n<P>Bind to the <CODE>pageChanged</CODE> event by type: jqxTreeGrid. </P>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/99AGx/",
            "exampleDescription": "Bind to the pageChanged event by type: jqxTreeGrid.",
            "example": "<PRE><CODE>\r\n$('#treeGrid').on('pageChanged', \r\nfunction (event)\r\n{\r\n    // event args.\r\n    var args = event.args;\r\n    // page num.\r\n    var pageNum = args.pagenum;\r\n    // old page num.\r\n    var oldPageNum = args.oldpagenum;\r\n    // page size.\r\n    var pageSize args.pagesize;\r\n});\r\n                         </CODE></PRE>",
            "customExample": {
                "customCode": "&lt;template>\n  &lt;JqxTreeGrid ref=\"myTreeGrid\" @pageChanged=\"onPageChanged($event)\"\n         :source=\"source\" :columns=\"columns\" :pageable=\"true\" :pageSize=\"3\"/>\n&lt;/template>\n\n&lt;script>\n  import JqxTreeGrid from 'jqwidgets-scripts/jqwidgets-vue/vue_jqxtreegrid.vue';\n\n  export default {\n    components: {\n      JqxTreeGrid\n    },\n    data: function () {\n      return {\n        source: new $.jqx.dataAdapter(this.data),\n        columns: [\n          { text: 'FirstName', dataField: 'FirstName', width: 150, aggregates: ['count'] },\n          { text: 'LastName', dataField: 'LastName', width: 120 },\n          { text: 'Title', dataField: 'Title', width: 200 }\n        ]\n      }\n    },\n    beforeCreate: function () {\n      let employees = [{\n        'EmployeeID': 2,\n        'FirstName': 'Andrew',\n        'LastName': 'Fuller',\n        'Title': 'Vice President, Sales',\n        'expanded': 'true',\n        children: [{\n          'EmployeeID': 8,\n          'FirstName': 'Laura',\n          'LastName': 'Callahan',\n          'Title': 'Inside Sales Coordinator'\n        }, {\n          'EmployeeID': 5,\n          'FirstName': 'Steven',\n          'LastName': 'Buchanan',\n          'Title': 'Sales Manager',\n          'expanded': 'true',\n          children: [{\n            'EmployeeID': 6,\n            'FirstName': 'Michael',\n            'LastName': 'Suyama',\n            'Title': 'Sales Representative'\n          }, {\n            'EmployeeID': 7,\n            'FirstName': 'Robert',\n            'LastName': 'King',\n            'Title': 'Sales Representative'\n          }]\n        }]\n      }];\n      this.data = {\n        dataType: \"json\",\n        dataFields: [{ name: 'EmployeeID', type: 'number' },\n        { name: 'FirstName', type: 'string' },\n        { name: 'LastName', type: 'string' },\n        { name: 'Title', type: 'string' },\n        { name: 'children', type: 'array' },\n        { name: 'expanded', type: 'bool' }],\n        hierarchy: { root: 'children' },\n        id: 'EmployeeID',\n        localData: employees\n      };\n    },\n    methods: {\n      onPageChanged: function (event) {\n        alert('do something...');\n      }\n    }\n  }\n&lt;/script>"
            }
        },
        {
            "name": "pageSizeChanged",
            "description": "<P>This is triggered when the jqxTreeGrid's page size is changed. </P>\n<H4>Code examples </H4>\n<P>Bind to the <CODE>pageSizeChanged</CODE> event by type: jqxTreeGrid. </P>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/DMd5v/",
            "exampleDescription": "Bind to the pageSizeChanged event by type: jqxTreeGrid.",
            "example": "<PRE><CODE>\r\n$('#treeGrid').on('pageSizeChanged', \r\nfunction (event)\r\n{\r\n    // event args.\r\n    var args = event.args;\r\n    // page num.\r\n    var pageNum = args.pagenum;\r\n    // old page size.\r\n    var oldPageSize = args.oldpagesize;\r\n    // page size.\r\n    var pageSize = args.pagesize;\r\n});\r\n                         </CODE></PRE>",
            "customExample": {
                "customCode": "&lt;template>\n  &lt;JqxTreeGrid ref=\"myTreeGrid\" @pageSizeChanged=\"onPageSizeChanged($event)\"\n         :source=\"source\" :columns=\"columns\" :pageable=\"true\" :pageSize=\"3\" :pagerMode=\"'advanced'\"/>\n&lt;/template>\n&lt;script>\n  import JqxTreeGrid from 'jqwidgets-scripts/jqwidgets-vue/vue_jqxtreegrid.vue';\n  export default {\n    components: {\n      JqxTreeGrid\n    },\n    data: function () {\n      return {\n        source: new $.jqx.dataAdapter(this.data),\n        columns: [\n          { text: 'FirstName', dataField: 'FirstName', width: 150, aggregates: ['count'] },\n          { text: 'LastName', dataField: 'LastName', width: 120 },\n          { text: 'Title', dataField: 'Title', width: 200 }\n        ]\n      }\n    },\n    beforeCreate: function () {\n      let employees = [{\n        'EmployeeID': 2,\n        'FirstName': 'Andrew',\n        'LastName': 'Fuller',\n        'Title': 'Vice President, Sales',\n        'expanded': 'true',\n        children: [{\n          'EmployeeID': 8,\n          'FirstName': 'Laura',\n          'LastName': 'Callahan',\n          'Title': 'Inside Sales Coordinator'\n        }, {\n          'EmployeeID': 5,\n          'FirstName': 'Steven',\n          'LastName': 'Buchanan',\n          'Title': 'Sales Manager',\n          'expanded': 'true',\n          children: [{\n            'EmployeeID': 6,\n            'FirstName': 'Michael',\n            'LastName': 'Suyama',\n            'Title': 'Sales Representative'\n          }, {\n            'EmployeeID': 7,\n            'FirstName': 'Robert',\n            'LastName': 'King',\n            'Title': 'Sales Representative'\n          }]\n        }]\n      }];\n      this.data = {\n        dataType: \"json\",\n        dataFields: [{ name: 'EmployeeID', type: 'number' },\n        { name: 'FirstName', type: 'string' },\n        { name: 'LastName', type: 'string' },\n        { name: 'Title', type: 'string' },\n        { name: 'children', type: 'array' },\n        { name: 'expanded', type: 'bool' }],\n        hierarchy: { root: 'children' },\n        id: 'EmployeeID',\n        localData: employees\n      };\n    },\n    methods: {\n      onPageSizeChanged: function (event) {\n        alert('do something...');\n      }\n    }\n  }\n&lt;/script>"
            }
        },
        {
            "name": "rowClick",
            "description": "<P>This is triggered when a row is clicked. </P>\n<H4>Code examples </H4>\n<P>Bind to the <CODE>rowClick</CODE> event by type: jqxTreeGrid. </P>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/fVuBp/",
            "exampleDescription": "Bind to the rowClick event by type: jqxTreeGrid.",
            "example": "<PRE><CODE>\r\n$('#treeGrid').on('rowClick', \r\nfunction (event)\r\n{\r\n    // event args.\r\n    var args = event.args;\r\n    // row data.\r\n    var row = args.row;\r\n    // row key.\r\n    var key = args.key;\r\n    // data field\r\n    var dataField = args.dataField;\r\n    // original click event.\r\n    var clickEvent = args.originalEvent;\r\n});\r\n                         </CODE></PRE>"
        },
        {
            "name": "rowDoubleClick",
            "description": "<P>This is triggered when a row is double-clicked. </P>\n<H4>Code examples </H4>\n<P>Bind to the <CODE>rowDoubleClick</CODE> event by type: jqxTreeGrid. </P>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/gAhKc/",
            "exampleDescription": "Bind to the rowDoubleClick event by type: jqxTreeGrid.",
            "example": "<PRE><CODE>\r\n$('#treeGrid').on('rowDoubleClick', \r\nfunction (event)\r\n{\r\n    // event args.\r\n    var args = event.args;\r\n    // row data.\r\n    var row = args.row;\r\n    // row key.\r\n    var key = args.key;\r\n    // data field\r\n    var dataField = args.dataField;\r\n    // original double click event.\r\n    var clickEvent = args.originalEvent;\r\n});\r\n                         </CODE></PRE>"
        },
        {
            "name": "rowSelect",
            "description": "<P>This is triggered when a row is selected. </P>\n<H4>Code examples </H4>\n<P>Bind to the <CODE>rowSelect</CODE> event by type: jqxTreeGrid. </P>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/Y5h6y/",
            "exampleDescription": "Bind to the rowSelect event by type: jqxTreeGrid.",
            "example": "<PRE><CODE>\r\n$('#treeGrid').on('rowSelect', \r\nfunction (event)\r\n{\r\n    // event args.\r\n    var args = event.args;\r\n    // row data.\r\n    var row = args.row;\r\n    // row key.\r\n    var key = args.key;\r\n});\r\n                         </CODE></PRE>"
        },
        {
            "name": "rowUnselect",
            "description": "<P>This is triggered when a row is unselected. </P>\n<H4>Code examples </H4>\n<P>Bind to the <CODE>rowUnselect</CODE> event by type: jqxTreeGrid. </P>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/7c5wL/",
            "exampleDescription": "Bind to the rowUnselect event by type: jqxTreeGrid.",
            "example": "<PRE><CODE>\r\n$('#treeGrid').on('rowUnselect', \r\nfunction (event)\r\n{\r\n    // event args.\r\n    var args = event.args;\r\n    // row data.\r\n    var row = args.row;\r\n    // row key.\r\n    var key = args.key;\r\n});\r\n                         </CODE></PRE>"
        },
        {
            "name": "rowBeginEdit",
            "description": "<P>This is triggered when a row edit begins. </P>\n<H4>Code examples </H4>\n<P>Bind to the <CODE>rowBeginEdit</CODE> event by type: jqxTreeGrid. </P>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/SYGTL/",
            "exampleDescription": "Bind to the rowBeginEdit event by type: jqxTreeGrid.",
            "example": "<PRE><CODE>\r\n$('#treeGrid').on('rowBeginEdit', \r\nfunction (event)\r\n{\r\n    // event args.\r\n    var args = event.args;\r\n    // row data.\r\n    var row = args.row;\r\n    // row key.\r\n    var key = args.key;\r\n});\r\n                         </CODE></PRE>",
            "exampleInit": {
                "editable": "true"
            }
        },
        {
            "name": "rowEndEdit",
            "description": "<P>This is triggered when a row edit ends. </P>\n<H4>Code examples </H4>\n<P>Bind to the <CODE>rowEndEdit</CODE> event by type: jqxTreeGrid. </P>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/9ded2/",
            "exampleDescription": "Bind to the rowEndEdit event by type: jqxTreeGrid.",
            "example": "<PRE><CODE>\r\n$('#treeGrid').on('rowEndEdit', \r\nfunction (event)\r\n{\r\n    // event args.\r\n    var args = event.args;\r\n    // row data.\r\n    var row = args.row;\r\n    // row key.\r\n    var key = args.key;\r\n});\r\n                         </CODE></PRE>",
            "exampleInit": {
                "editable": "true"
            }
        },
        {
            "name": "rowExpand",
            "description": "<P>This is triggered when a row is expanded. </P>\n<H4>Code examples </H4>\n<P>Bind to the <CODE>rowExpand</CODE> event by type: jqxTreeGrid. </P>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/5c9h4/",
            "exampleDescription": "Bind to the rowExpand event by type: jqxTreeGrid.",
            "example": "<PRE><CODE>\r\n$('#treeGrid').on('rowExpand', \r\nfunction (event)\r\n{\r\n    // event args.\r\n    var args = event.args;\r\n    // row data.\r\n    var row = args.row;\r\n    // row key.\r\n    var key = args.key;\r\n});\r\n                         </CODE></PRE>"
        },
        {
            "name": "rowCollapse",
            "description": "<P>This is triggered when a row is collapsed. </P>\n<H4>Code examples </H4>\n<P>Bind to the <CODE>rowCollapse</CODE> event by type: jqxTreeGrid. </P>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/DUEZ7/",
            "exampleDescription": "Bind to the rowCollapse event by type: jqxTreeGrid.",
            "example": "<PRE><CODE>\r\n$('#treeGrid').on('rowCollapse', \r\nfunction (event)\r\n{\r\n    // event args.\r\n    var args = event.args;\r\n    // row data.\r\n    var row = args.row;\r\n    // row key.\r\n    var key = args.key;\r\n});\r\n                         </CODE></PRE>"
        },
        {
            "name": "rowCheck",
            "description": "<P>This is triggered when a row is checked. </P>\n<H4>Code examples </H4>\n<P>Bind to the <CODE>rowCheck</CODE> event by type: jqxTreeGrid. </P>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/HCNBN/",
            "exampleDescription": "Bind to the rowCheck event by type: jqxTreeGrid.",
            "example": "<PRE><CODE>\r\n$('#treeGrid').on('rowCheck', \r\nfunction (event)\r\n{\r\n    // event args.\r\n    var args = event.args;\r\n    // row data.\r\n    var row = args.row;\r\n    // row key.\r\n    var key = args.key;\r\n});\r\n                         </CODE></PRE>",
            "exampleInit": {
                "checkboxes": "true"
            }
        },
        {
            "name": "rowUncheck",
            "description": "<P>This is triggered when a row is unchecked. </P>\n<H4>Code examples </H4>\n<P>Bind to the <CODE>rowUncheck</CODE> event by type: jqxTreeGrid. </P>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/dKTa4/",
            "exampleDescription": "Bind to the rowUncheck event by type: jqxTreeGrid.",
            "example": "<PRE><CODE>\r\n$('#treeGrid').on('rowUncheck', \r\nfunction (event)\r\n{\r\n    // event args.\r\n    var args = event.args;\r\n    // row data.\r\n    var row = args.row;\r\n    // row key.\r\n    var key = args.key;\r\n});\r\n                         </CODE></PRE>",
            "exampleInit": {
                "checkboxes": "true"
            }
        },
        {
            "name": "sort",
            "description": "<P>This event is triggered when the jqxTreeGrid sort order or sort column is changed. </P>\n<H4>Code examples </H4>\n<P>Bind to the <CODE>sort</CODE> event by type: jqxTreeGrid. </P>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/7cFXL/",
            "exampleDescription": "Bind to the sort event by type: jqxTreeGrid.",
            "example": "<PRE><CODE>\r\n$('#treeGrid').on('sort', function (event) { \r\n    var args = event.args; \r\n    // column's data field.\r\n    var sortcolumn = args.sortcolumn; \r\n    // sort order.  { 'ascending': true or false, 'descending': true or false }\r\n    var sortdirection = args.sortdirection;\r\n});\r\n                        </CODE></PRE>",
            "exampleInit": {
                "sortable": "true"
            }
        }
    ],
    "methods": [
        {
            "name": "addRow",
            "description": "<P>Adds a new row. For synchronization with a server, please look also the jqxDataAdapter plug-in's help documentation. </P>\n<UL><LI>Row Key/ID - unique ID which identifies the row. If null is passed, the jqxTreeGrid will generate an unique. \r\n<LI>Row Data - object with Key/Value pairs. To add an empty row, pass {}. \r\n<LI>Row Position - string with two possible values - \"last\" and \"first\". By default \"last\" is used. </LI></UL>\n<H4>Code example </H4>\n<P>Invoke the <CODE>addRow</CODE> method. </P>\n<PRE><CODE>$(\"#treeGrid\").jqxTreeGrid('addRow', null, {});</CODE></PRE>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/rkttb/",
            "exampleDescription": "adds a new row in the jqxTreeGrid.",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "rowKey",
                    "dataType": "string",
                    "ts_dataType": "number | string | null",
                    "description": "",
                    "optional": false
                },
                {
                    "name": "rowData",
                    "dataType": "object",
                    "ts_dataType": "any",
                    "description": "",
                    "optional": false
                },
                {
                    "name": "rowPosition",
                    "dataType": "string",
                    "description": "",
                    "optional": false
                },
                {
                    "name": "parent",
                    "dataType": "string",
                    "description": "",
                    "optional": true
                }
            ],
            "exampleInit": {
                "args": [ "10", "{}", "'first'" ]
            }
        },
        {
            "name": "addFilter",
            "description": "<P>Adds a new filter. </P>",
            "exampleURL": "",
            "exampleDescription": "",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "dataField",
                    "dataType": "string",
                    "description": "",
                    "optional": false
                },
                {
                    "name": "filerGroup",
                    "dataType": "object",
                    "ts_dataType": "any",
                    "description": "",
                    "optional": false
                }
            ],
            "customExample": {
                "customCode": "&lt;template>\n  &lt;JqxTreeGrid ref=\"myTreeGrid\"\n         :source=\"source\" :columns=\"columns\" :filterable=\"true\"/>\n&lt;/template>\n\n&lt;script>\n  import JqxTreeGrid from 'jqwidgets-scripts/jqwidgets-vue/vue_jqxtreegrid.vue';\n\n  export default {\n    components: {\n      JqxTreeGrid\n    },\n    data: function () {\n      return {\n        source: new $.jqx.dataAdapter(this.data),\n        columns: [\n          { text: 'FirstName', dataField: 'FirstName', width: 150, aggregates: ['count'] },\n          { text: 'LastName', dataField: 'LastName', width: 120 },\n          { text: 'Title', dataField: 'Title', width: 200 }\n        ]\n      }\n    },\n    beforeCreate: function () {\n      let employees = [{\n        'EmployeeID': 2,\n        'FirstName': 'Andrew',\n        'LastName': 'Fuller',\n        'Title': 'Vice President, Sales',\n        'expanded': 'true',\n        children: [{\n          'EmployeeID': 8,\n          'FirstName': 'Laura',\n          'LastName': 'Callahan',\n          'Title': 'Inside Sales Coordinator'\n        }, {\n          'EmployeeID': 5,\n          'FirstName': 'Steven',\n          'LastName': 'Buchanan',\n          'Title': 'Sales Manager',\n          'expanded': 'true',\n          children: [{\n            'EmployeeID': 6,\n            'FirstName': 'Michael',\n            'LastName': 'Suyama',\n            'Title': 'Sales Representative'\n          }, {\n            'EmployeeID': 7,\n            'FirstName': 'Robert',\n            'LastName': 'King',\n            'Title': 'Sales Representative'\n          }]\n        }]\n      }];\n      this.data = {\n        dataType: \"json\",\n        dataFields: [{ name: 'EmployeeID', type: 'number' },\n        { name: 'FirstName', type: 'string' },\n        { name: 'LastName', type: 'string' },\n        { name: 'Title', type: 'string' },\n        { name: 'children', type: 'array' },\n        { name: 'expanded', type: 'bool' }],\n        hierarchy: { root: 'children' },\n        id: 'EmployeeID',\n        localData: employees\n      };\n    },\n    mounted: function () {\n      let filtertype = 'stringfilter';\n      // create a new group of filters.\n      let filtergroup = new $.jqx.filter();\n      let filter_or_operator = 1;\n      let filtervalue = \"Laura\";\n      let filtercondition = 'equal';\n      let filter = filtergroup.createfilter(filtertype, filtervalue, filtercondition);\n      filtergroup.addfilter(filter_or_operator, filter);\n \n      this.$refs.myTreeGrid.addFilter('FirstName', filtergroup);\n      this.$refs.myTreeGrid.applyFilters();\n    }\n  }\n&lt;/script>"
            }
        },
        {
            "name": "applyFilters",
            "description": "<P>Applies the added/removed filters. </P>\n<H4>Code example </H4>\n<P>Invoke the <CODE>applyFilters</CODE> method. </P>\n<PRE><CODE>$(\"#treeGrid\").jqxTreeGrid('applyFilters');</CODE></PRE>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/5QDqq/",
            "exampleDescription": "apply a new filter in the jqxTreeGrid.",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "None",
                    "dataType": null,
                    "description": "",
                    "optional": false
                }
            ],
            "customExample": {
                "customCode": "&lt;template>\n  &lt;JqxTreeGrid ref=\"myTreeGrid\"\n         :source=\"source\" :columns=\"columns\" :filterable=\"true\"/>\n&lt;/template>\n\n&lt;script>\n  import JqxTreeGrid from 'jqwidgets-scripts/jqwidgets-vue/vue_jqxtreegrid.vue';\n\n  export default {\n    components: {\n      JqxTreeGrid\n    },\n    data: function () {\n      return {\n        source: new $.jqx.dataAdapter(this.data),\n        columns: [\n          { text: 'FirstName', dataField: 'FirstName', width: 150, aggregates: ['count'] },\n          { text: 'LastName', dataField: 'LastName', width: 120 },\n          { text: 'Title', dataField: 'Title', width: 200 }\n        ]\n      }\n    },\n    beforeCreate: function () {\n      let employees = [{\n        'EmployeeID': 2,\n        'FirstName': 'Andrew',\n        'LastName': 'Fuller',\n        'Title': 'Vice President, Sales',\n        'expanded': 'true',\n        children: [{\n          'EmployeeID': 8,\n          'FirstName': 'Laura',\n          'LastName': 'Callahan',\n          'Title': 'Inside Sales Coordinator'\n        }, {\n          'EmployeeID': 5,\n          'FirstName': 'Steven',\n          'LastName': 'Buchanan',\n          'Title': 'Sales Manager',\n          'expanded': 'true',\n          children: [{\n            'EmployeeID': 6,\n            'FirstName': 'Michael',\n            'LastName': 'Suyama',\n            'Title': 'Sales Representative'\n          }, {\n            'EmployeeID': 7,\n            'FirstName': 'Robert',\n            'LastName': 'King',\n            'Title': 'Sales Representative'\n          }]\n        }]\n      }];\n      this.data = {\n        dataType: \"json\",\n        dataFields: [{ name: 'EmployeeID', type: 'number' },\n        { name: 'FirstName', type: 'string' },\n        { name: 'LastName', type: 'string' },\n        { name: 'Title', type: 'string' },\n        { name: 'children', type: 'array' },\n        { name: 'expanded', type: 'bool' }],\n        hierarchy: { root: 'children' },\n        id: 'EmployeeID',\n        localData: employees\n      };\n    },\n    mounted: function () {\n      let filtertype = 'stringfilter';\n      // create a new group of filters.\n      let filtergroup = new $.jqx.filter();\n      let filter_or_operator = 1;\n      let filtervalue = \"Laura\";\n      let filtercondition = 'equal';\n      let filter = filtergroup.createfilter(filtertype, filtervalue, filtercondition);\n      filtergroup.addfilter(filter_or_operator, filter);\n \n      this.$refs.myTreeGrid.addFilter('FirstName', filtergroup);\n      this.$refs.myTreeGrid.applyFilters();\n    }\n  }\n&lt;/script>"
            }
        },
        {
            "name": "beginUpdate",
            "description": "<P>Begins an update and stops all refreshes. </P>\n<H4>Code example </H4>\n<P>Invoke the <CODE>beginUpdate</CODE> method. </P>\n<PRE><CODE>$(\"#treeGrid\").jqxTreeGrid('beginUpdate');</CODE></PRE>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/dF9j2/",
            "exampleDescription": "begins the update of the jqxTreeGrid.",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "None",
                    "dataType": null,
                    "description": "",
                    "optional": false
                }
            ],
            "customExample": {
                "customCode": "&lt;template>\n  &lt;div>\n    &lt;JqxTreeGrid ref=\"myTreeGrid\"\n           :source=\"source\" :columns=\"columns\"/>\n    &lt;jqxButton style=\"width: 100px;margin-right:100px;\" @click=\"beginUpdate()\">Begin Update&lt;/jqxButton>\n    &lt;jqxButton style=\"width: 80px;\" @click=\"endUpdate()\">End Update&lt;/jqxButton>\n  &lt;/div>\n&lt;/template>\n&lt;script>\n  import JqxTreeGrid from 'jqwidgets-scripts/jqwidgets-vue/vue_jqxtreegrid.vue';\n  import JqxButton from 'jqwidgets-scripts/jqwidgets-vue/vue_jqxbuttons.vue';\n\n  export default {\n    components: {\n      JqxTreeGrid,\n      JqxButton\n    },\n    data: function () {\n      return {\n        source: new $.jqx.dataAdapter(this.data),\n        columns: [\n          { text: 'FirstName', dataField: 'FirstName', width: 150, aggregates: ['count'] },\n          { text: 'LastName', dataField: 'LastName', width: 120 },\n          { text: 'Title', dataField: 'Title', width: 200 }\n        ]\n      }\n    },\n    beforeCreate: function () {\n      let employees = [{\n        'EmployeeID': 2,\n        'FirstName': 'Andrew',\n        'LastName': 'Fuller',\n        'Title': 'Vice President, Sales',\n        'expanded': 'true',\n        children: [{\n          'EmployeeID': 8,\n          'FirstName': 'Laura',\n          'LastName': 'Callahan',\n          'Title': 'Inside Sales Coordinator'\n        }, {\n          'EmployeeID': 5,\n          'FirstName': 'Steven',\n          'LastName': 'Buchanan',\n          'Title': 'Sales Manager',\n          'expanded': 'true',\n          children: [{\n            'EmployeeID': 6,\n            'FirstName': 'Michael',\n            'LastName': 'Suyama',\n            'Title': 'Sales Representative'\n          }, {\n            'EmployeeID': 7,\n            'FirstName': 'Robert',\n            'LastName': 'King',\n            'Title': 'Sales Representative'\n          }]\n        }]\n      }];\n      this.data = {\n        dataType: \"json\",\n        dataFields: [{ name: 'EmployeeID', type: 'number' },\n        { name: 'FirstName', type: 'string' },\n        { name: 'LastName', type: 'string' },\n        { name: 'Title', type: 'string' },\n        { name: 'children', type: 'array' },\n        { name: 'expanded', type: 'bool' }],\n        hierarchy: { root: 'children' },\n        id: 'EmployeeID',\n        localData: employees\n      };\n    },\n    methods: {\n      beginUpdate: function () {\n        this.$refs.myTreeGrid.beginUpdate();\n      },\n      endUpdate: function () {\n        this.$refs.myTreeGrid.endUpdate();\n      }\n    }\n  }\n&lt;/script>\n&lt;style>\n  .jqx-button {\n    margin-top: 20px;\n    display: inline-block;\n  }\n&lt;/style>"
            }
        },
        {
            "name": "beginRowEdit",
            "description": "<P>Begins a row edit operation when <CODE>editable</CODE> is set to true. </P>\n<H4>Code example </H4>\n<P>Invoke the <CODE>beginRowEdit</CODE> method. </P>\n<PRE><CODE>$(\"#treeGrid\").jqxTreeGrid('beginRowEdit', 'ALFKI');</CODE></PRE>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/rcbJm/",
            "exampleDescription": "begins the row edit of the jqxTreeGrid.",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "rowKey",
                    "dataType": "string",
                    "ts_dataType": "number | string",
                    "description": "Unique ID which identifies the row",
                    "optional": false
                }
            ],
            "exampleInit": {
                "args": [ "8" ]
            },
            "extraData": {
                "editable": "true"
            }
        },
        {
            "name": "beginCellEdit",
            "description": "<P>Begins a cell edit operation when <CODE>editable</CODE> is set to true. </P>\n<H4>Code example </H4>\n<P>Invoke the <CODE>beginCellEdit</CODE> method. </P>\n<PRE><CODE>$(\"#treeGrid\").jqxTreeGrid('beginCellEdit', 'ALFKI', 'FirstName');</CODE></PRE>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/MbE78/",
            "exampleDescription": "begins the cell edit of the jqxTreeGrid.",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "rowKey",
                    "dataType": "string",
                    "ts_dataType": "number | string",
                    "description": "Unique ID which identifies the row",
                    "optional": false
                },
                {
                    "name": "dataField",
                    "dataType": "string",
                    "description": "",
                    "optional": false
                }
            ],
            "exampleInit": {
                "args": [ "8", "'firstName'" ]
            },
            "extraData": {
                "editable": "true"
            }
        },
        {
            "name": "clearSelection",
            "description": "<P>Clears the selection. </P>\n<H4>Code example </H4>\n<P>Invoke the <CODE>clearSelection</CODE> method. </P>\n<PRE><CODE>$(\"#treeGrid\").jqxTreeGrid('clearSelection');</CODE></PRE>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/6wY27/",
            "exampleDescription": "clears the selection of the jqxTreeGrid.",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "None",
                    "dataType": null,
                    "description": "",
                    "optional": false
                }
            ],
            "customExample": {
                "customCode": "&lt;template>\n  &lt;div>\n    &lt;JqxTreeGrid ref=\"myTreeGrid\"\n           :source=\"source\" :columns=\"columns\" />\n    &lt;JqxButton style=\"width: 100px; margin-top: 20px;\" @click=\"clearSelection()\">Clear Selection&lt;/JqxButton>\n  &lt;/div>\n&lt;/template>\n&lt;script>\n  import JqxTreeGrid from 'jqwidgets-scripts/jqwidgets-vue/vue_jqxtreegrid.vue';\n  import JqxButton from 'jqwidgets-scripts/jqwidgets-vue/vue_jqxbuttons.vue';\n  export default {\n    components: {\n      JqxTreeGrid,\n      JqxButton\n    },\n    data: function () {\n      return {\n        source: new $.jqx.dataAdapter(this.data),\n        columns: [\n          { text: 'FirstName', dataField: 'FirstName', width: 150, aggregates: ['count'] },\n          { text: 'LastName', dataField: 'LastName', width: 120 },\n          { text: 'Title', dataField: 'Title', width: 200 }\n        ]\n      }\n    },\n    beforeCreate: function () {\n      let employees = [{\n        'EmployeeID': 2,\n        'FirstName': 'Andrew',\n        'LastName': 'Fuller',\n        'Title': 'Vice President, Sales',\n        'expanded': 'true',\n        children: [{\n          'EmployeeID': 8,\n          'FirstName': 'Laura',\n          'LastName': 'Callahan',\n          'Title': 'Inside Sales Coordinator'\n        }, {\n          'EmployeeID': 5,\n          'FirstName': 'Steven',\n          'LastName': 'Buchanan',\n          'Title': 'Sales Manager',\n          'expanded': 'true',\n          children: [{\n            'EmployeeID': 6,\n            'FirstName': 'Michael',\n            'LastName': 'Suyama',\n            'Title': 'Sales Representative'\n          }, {\n            'EmployeeID': 7,\n            'FirstName': 'Robert',\n            'LastName': 'King',\n            'Title': 'Sales Representative'\n          }]\n        }]\n      }];\n      this.data = {\n        dataType: \"json\",\n        dataFields: [{ name: 'EmployeeID', type: 'number' },\n        { name: 'FirstName', type: 'string' },\n        { name: 'LastName', type: 'string' },\n        { name: 'Title', type: 'string' },\n        { name: 'children', type: 'array' },\n        { name: 'expanded', type: 'bool' }],\n        hierarchy: { root: 'children' },\n        id: 'EmployeeID',\n        localData: employees\n      };\n    },\n    mounted: function () {\n      this.$refs.myTreeGrid.selectRow(2);\n    },\n    methods: {\n      clearSelection: function () {\n        this.$refs.myTreeGrid.clearSelection();\n      }\n    }\n  }\n&lt;/script>"
            }
        },
        {
            "name": "clearFilters",
            "description": "<P>Clears the filters. </P>\n<H4>Code example </H4>\n<P>Invoke the <CODE>clearFilters</CODE> method. </P>\n<PRE><CODE>$(\"#treeGrid\").jqxTreeGrid('clearFilters');</CODE></PRE>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/VL2hh/",
            "exampleDescription": "clears the filters of the jqxTreeGrid.",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "None",
                    "dataType": null,
                    "description": "",
                    "optional": false
                }
            ],
            "customExample": {
                "customCode": "&lt;template>\n  &lt;div>\n    &lt;JqxTreeGrid ref=\"myTreeGrid\"\n           :source=\"source\" :columns=\"columns\" :filterable=\"true\" />\n    &lt;JqxButton style=\"width: 100px; margin-top: 20px;\" @click=\"clearFilters()\">Clear Filters&lt;/JqxButton>\n  &lt;/div>\n&lt;/template>\n&lt;script>\n  import JqxTreeGrid from 'jqwidgets-scripts/jqwidgets-vue/vue_jqxtreegrid.vue';\n  import JqxButton from 'jqwidgets-scripts/jqwidgets-vue/vue_jqxbuttons.vue';\n\n  export default {\n    components: {\n      JqxTreeGrid,\n      JqxButton\n    },\n    data: function () {\n      return {\n        source: new $.jqx.dataAdapter(this.data),\n        columns: [\n          { text: 'FirstName', dataField: 'FirstName', width: 150, aggregates: ['count'] },\n          { text: 'LastName', dataField: 'LastName', width: 120 },\n          { text: 'Title', dataField: 'Title', width: 200 }\n        ]\n      }\n    },\n    beforeCreate: function () {\n      let employees = [{\n        'EmployeeID': 2,\n        'FirstName': 'Andrew',\n        'LastName': 'Fuller',\n        'Title': 'Vice President, Sales',\n        'expanded': 'true',\n        children: [{\n          'EmployeeID': 8,\n          'FirstName': 'Laura',\n          'LastName': 'Callahan',\n          'Title': 'Inside Sales Coordinator'\n        }, {\n          'EmployeeID': 5,\n          'FirstName': 'Steven',\n          'LastName': 'Buchanan',\n          'Title': 'Sales Manager',\n          'expanded': 'true',\n          children: [{\n            'EmployeeID': 6,\n            'FirstName': 'Michael',\n            'LastName': 'Suyama',\n            'Title': 'Sales Representative'\n          }, {\n            'EmployeeID': 7,\n            'FirstName': 'Robert',\n            'LastName': 'King',\n            'Title': 'Sales Representative'\n          }]\n        }]\n      }];\n      this.data = {\n        dataType: \"json\",\n        dataFields: [{ name: 'EmployeeID', type: 'number' },\n        { name: 'FirstName', type: 'string' },\n        { name: 'LastName', type: 'string' },\n        { name: 'Title', type: 'string' },\n        { name: 'children', type: 'array' },\n        { name: 'expanded', type: 'bool' }],\n        hierarchy: { root: 'children' },\n        id: 'EmployeeID',\n        localData: employees\n      };\n    },\n    mounted: function () {\n      let filtertype = 'stringfilter';\n      // create a new group of filters.\n      let filtergroup = new $.jqx.filter();\n      let filter_or_operator = 1;\n      let filtervalue = \"Laura\";\n      let filtercondition = 'equal';\n      let filter = filtergroup.createfilter(filtertype, filtervalue, filtercondition);\n      filtergroup.addfilter(filter_or_operator, filter);\n\n      this.$refs.myTreeGrid.addFilter('FirstName', filtergroup);\n      this.$refs.myTreeGrid.applyFilters();\n    },\n    methods: {\n      clearFilters: function () {\n        this.$refs.myTreeGrid.clearFilters();\n      }\n    }\n  }\n&lt;/script>"
            }
        },
        {
            "name": "clear",
            "description": "<P>Clears the jqxTreeGrid. </P>\n<H4>Code example </H4>\n<P>Invoke the <CODE>clear</CODE> method. </P>\n<PRE><CODE>$(\"#treeGrid\").jqxTreeGrid('clear');</CODE></PRE>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/jbt9C/",
            "exampleDescription": "clears the jqxTreeGrid.",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "None",
                    "dataType": null,
                    "description": "",
                    "optional": false
                }
            ]
        },
        {
            "name": "checkRow",
            "description": "<P>Checks a row when <CODE>checkboxes</CODE> is set to true. </P>\n<H4>Code example </H4>\n<P>Invoke the <CODE>checkRow</CODE> method. </P>\n<PRE><CODE>$(\"#treeGrid\").jqxTreeGrid('checkRow', 'ALFKI');</CODE></PRE>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/3rt8z/",
            "exampleDescription": "checks a row in the the jqxTreeGrid.",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "rowKey",
                    "dataType": "string",
                    "ts_dataType": "number | string",
                    "description": "Unique ID which identifies the row",
                    "optional": false
                }
            ],
            "exampleInit": {
                "args": [ "8" ]
            },
            "extraData": {
                "checkboxes": "true"
            }
        },
        {
            "name": "collapseRow",
            "description": "<P>Collapses a row. </P>\n<H4>Code example </H4>\n<P>Invoke the <CODE>collapseRow</CODE> method. </P>\n<PRE><CODE>$(\"#treeGrid\").jqxTreeGrid('collapseRow', 'ALFKI');</CODE></PRE>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/A7CtW/",
            "exampleDescription": "collapses a row in the the jqxTreeGrid.",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "rowKey",
                    "dataType": "string",
                    "ts_dataType": "number | string",
                    "description": "Unique ID which identifies the row",
                    "optional": false
                }
            ],
            "exampleInit": {
                "args": [ "5" ]
            }
        },
        {
            "name": "collapseAll",
            "description": "<P>Collapses all rows. </P>\n<H4>Code example </H4>\n<P>Invoke the <CODE>collapseAll</CODE> method. </P>\n<PRE><CODE>$(\"#treeGrid\").jqxTreeGrid('collapseAll');</CODE></PRE>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/2sp0g00b/",
            "exampleDescription": "Collapses all rows in the jqxTreeGrid.",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "None",
                    "dataType": null,
                    "description": "",
                    "optional": false
                }
            ]
        },
        {
            "name": "destroy",
            "description": "<P>Destroys jqxTreeGrid and removes it from the DOM. </P>\n<H4>Code example </H4>\n<P>Invoke the <CODE>destroy</CODE> method. </P>\n<PRE><CODE>$(\"#treeGrid\").jqxTreeGrid('destroy');</CODE></PRE>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/kKBRx/",
            "exampleDescription": "destroy the jqxTreeGrid.",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "None",
                    "dataType": null,
                    "description": "",
                    "optional": false
                }
            ]
        },
        {
            "name": "deleteRow",
            "description": "<P>Deletes a row. For synchronization with a server, please look also the jqxDataAdapter plug-in's help documentation. </P>\n<H4>Code example </H4>\n<P>Invoke the <CODE>deleteRow</CODE> method. </P>\n<PRE><CODE>$(\"#treeGrid\").jqxTreeGrid('deleteRow', 'ALFKI');</CODE></PRE>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/23yBu/",
            "exampleDescription": "delete a row in the jqxTreeGrid.",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "rowKey",
                    "dataType": "string",
                    "ts_dataType": "string[] | string",
                    "description": "Unique ID which identifies the row",
                    "optional": false
                }
            ],
            "exampleInit": {
                "args": [ "7" ]
            }
        },
        {
            "name": "expandRow",
            "description": "<P>Expands a row. </P>\n<H4>Code example </H4>\n<P>Invoke the <CODE>expandRow</CODE> method. </P>\n<PRE><CODE>$(\"#treeGrid\").jqxTreeGrid('expandRow', 'ALFKI');</CODE></PRE>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/675mL/",
            "exampleDescription": "expand a row in the jqxTreeGrid.",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "rowKey",
                    "dataType": "string",
                    "ts_dataType": "Array<number | string> | string | number",
                    "description": "Unique ID which identifies the row",
                    "optional": false
                }
            ],
            "customExample": {
                "customCode": "&lt;template>\n  &lt;JqxTreeGrid ref=\"myTreeGrid\"\n         :source=\"source\" :columns=\"columns\" />\n&lt;/template>\n\n&lt;script>\n  import JqxTreeGrid from 'jqwidgets-scripts/jqwidgets-vue/vue_jqxtreegrid.vue';\n\n  export default {\n    components: {\n      JqxTreeGrid\n    },\n    data: function () {\n      return {\n        source: new $.jqx.dataAdapter(this.data),\n        columns: [\n          { text: 'FirstName', dataField: 'FirstName', width: 150, aggregates: ['count'] },\n          { text: 'LastName', dataField: 'LastName', width: 120 },\n          { text: 'Title', dataField: 'Title', width: 200 }\n        ]\n      }\n    },\n    beforeCreate: function () {\n      let employees = [{\n        'EmployeeID': 2,\n        'FirstName': 'Andrew',\n        'LastName': 'Fuller',\n        'Title': 'Vice President, Sales',\n        'expanded': 'true',\n        children: [{\n          'EmployeeID': 8,\n          'FirstName': 'Laura',\n          'LastName': 'Callahan',\n          'Title': 'Inside Sales Coordinator'\n        }, {\n          'EmployeeID': 5,\n          'FirstName': 'Steven',\n          'LastName': 'Buchanan',\n          'Title': 'Sales Manager',\n          'expanded': 'true',\n          children: [{\n            'EmployeeID': 6,\n            'FirstName': 'Michael',\n            'LastName': 'Suyama',\n            'Title': 'Sales Representative'\n          }, {\n            'EmployeeID': 7,\n            'FirstName': 'Robert',\n            'LastName': 'King',\n            'Title': 'Sales Representative'\n          }]\n        }]\n      }];\n      this.data = {\n        dataType: \"json\",\n        dataFields: [{ name: 'EmployeeID', type: 'number' },\n        { name: 'FirstName', type: 'string' },\n        { name: 'LastName', type: 'string' },\n        { name: 'Title', type: 'string' },\n        { name: 'children', type: 'array' },\n        { name: 'expanded', type: 'bool' }],\n        hierarchy: { root: 'children' },\n        id: 'EmployeeID',\n        localData: employees\n      };\n    },\n    mounted: function () {\n      this.$refs.myTreeGrid.collapseAll();\n      this.$refs.myTreeGrid.expandRow(2);\n    }\n  }\n&lt;/script>"
            }
        },
        {
            "name": "expandAll",
            "description": "<P>Expands all rows. </P>\n<H4>Code example </H4>\n<P>Invoke the <CODE>expandAll</CODE> method. </P>\n<PRE><CODE>$(\"#treeGrid\").jqxTreeGrid('expandAll');</CODE></PRE>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/yw02cpwe/",
            "exampleDescription": "expands all rows in the jqxTreeGrid.",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "None",
                    "dataType": null,
                    "description": "",
                    "optional": false
                }
            ],
            "customExample": {
                "customCode": "&lt;template>\n  &lt;JqxTreeGrid ref=\"myTreeGrid\"\n         :source=\"source\" :columns=\"columns\" />\n&lt;/template>\n\n&lt;script>\n  import JqxTreeGrid from 'jqwidgets-scripts/jqwidgets-vue/vue_jqxtreegrid.vue';\n\n  export default {\n    components: {\n      JqxTreeGrid\n    },\n    data: function () {\n      return {\n        source: new $.jqx.dataAdapter(this.data),\n        columns: [\n          { text: 'FirstName', dataField: 'FirstName', width: 150, aggregates: ['count'] },\n          { text: 'LastName', dataField: 'LastName', width: 120 },\n          { text: 'Title', dataField: 'Title', width: 200 }\n        ]\n      }\n    },\n    beforeCreate: function () {\n      let employees = [{\n        'EmployeeID': 2,\n        'FirstName': 'Andrew',\n        'LastName': 'Fuller',\n        'Title': 'Vice President, Sales',\n        'expanded': 'true',\n        children: [{\n          'EmployeeID': 8,\n          'FirstName': 'Laura',\n          'LastName': 'Callahan',\n          'Title': 'Inside Sales Coordinator'\n        }, {\n          'EmployeeID': 5,\n          'FirstName': 'Steven',\n          'LastName': 'Buchanan',\n          'Title': 'Sales Manager',\n          'expanded': 'true',\n          children: [{\n            'EmployeeID': 6,\n            'FirstName': 'Michael',\n            'LastName': 'Suyama',\n            'Title': 'Sales Representative'\n          }, {\n            'EmployeeID': 7,\n            'FirstName': 'Robert',\n            'LastName': 'King',\n            'Title': 'Sales Representative'\n          }]\n        }]\n      }];\n      this.data = {\n        dataType: \"json\",\n        dataFields: [{ name: 'EmployeeID', type: 'number' },\n        { name: 'FirstName', type: 'string' },\n        { name: 'LastName', type: 'string' },\n        { name: 'Title', type: 'string' },\n        { name: 'children', type: 'array' },\n        { name: 'expanded', type: 'bool' }],\n        hierarchy: { root: 'children' },\n        id: 'EmployeeID',\n        localData: employees\n      };\n    },\n    mounted: function () {\n      this.$refs.myTreeGrid.collapseAll();\n      this.$refs.myTreeGrid.expandAll();\n    }\n  }\n&lt;/script>"
            }
        },
        {
            "name": "endUpdate",
            "description": "<P>Ends the update and resumes all refreshes. </P>\n<H4>Code example </H4>\n<P>Invoke the <CODE>endUpdate</CODE> method. </P>\n<PRE><CODE>$(\"#treeGrid\").jqxTreeGrid('endUpdate');</CODE></PRE>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/sM6LX/",
            "exampleDescription": "ends the update of the jqxTreeGrid.",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "None",
                    "dataType": null,
                    "description": "",
                    "optional": false
                }
            ],
            "customExample": {
                "customCode": "&lt;template>\n  &lt;div>\n    &lt;JqxTreeGrid ref=\"myTreeGrid\"\n           :source=\"source\" :columns=\"columns\"/>\n    &lt;jqxButton style=\"width: 100px;margin-right:100px;\" @click=\"beginUpdate()\">Begin Update&lt;/jqxButton>\n    &lt;jqxButton style=\"width: 80px;\" @click=\"endUpdate()\">End Update&lt;/jqxButton>\n  &lt;/div>\n&lt;/template>\n&lt;script>\n  import JqxTreeGrid from 'jqwidgets-scripts/jqwidgets-vue/vue_jqxtreegrid.vue';\n  import JqxButton from 'jqwidgets-scripts/jqwidgets-vue/vue_jqxbuttons.vue';\n\n  export default {\n    components: {\n      JqxTreeGrid,\n      JqxButton\n    },\n    data: function () {\n      return {\n        source: new $.jqx.dataAdapter(this.data),\n        columns: [\n          { text: 'FirstName', dataField: 'FirstName', width: 150, aggregates: ['count'] },\n          { text: 'LastName', dataField: 'LastName', width: 120 },\n          { text: 'Title', dataField: 'Title', width: 200 }\n        ]\n      }\n    },\n    beforeCreate: function () {\n      let employees = [{\n        'EmployeeID': 2,\n        'FirstName': 'Andrew',\n        'LastName': 'Fuller',\n        'Title': 'Vice President, Sales',\n        'expanded': 'true',\n        children: [{\n          'EmployeeID': 8,\n          'FirstName': 'Laura',\n          'LastName': 'Callahan',\n          'Title': 'Inside Sales Coordinator'\n        }, {\n          'EmployeeID': 5,\n          'FirstName': 'Steven',\n          'LastName': 'Buchanan',\n          'Title': 'Sales Manager',\n          'expanded': 'true',\n          children: [{\n            'EmployeeID': 6,\n            'FirstName': 'Michael',\n            'LastName': 'Suyama',\n            'Title': 'Sales Representative'\n          }, {\n            'EmployeeID': 7,\n            'FirstName': 'Robert',\n            'LastName': 'King',\n            'Title': 'Sales Representative'\n          }]\n        }]\n      }];\n      this.data = {\n        dataType: \"json\",\n        dataFields: [{ name: 'EmployeeID', type: 'number' },\n        { name: 'FirstName', type: 'string' },\n        { name: 'LastName', type: 'string' },\n        { name: 'Title', type: 'string' },\n        { name: 'children', type: 'array' },\n        { name: 'expanded', type: 'bool' }],\n        hierarchy: { root: 'children' },\n        id: 'EmployeeID',\n        localData: employees\n      };\n    },\n    methods: {\n      beginUpdate: function () {\n        this.$refs.myTreeGrid.beginUpdate();\n      },\n      endUpdate: function () {\n        this.$refs.myTreeGrid.endUpdate();\n      }\n    }\n  }\n&lt;/script>\n&lt;style>\n  .jqx-button {\n    margin-top: 20px;\n    display: inline-block;\n  }\n&lt;/style>"
            }
        },
        {
            "name": "ensureRowVisible",
            "description": "<P>Moves the vertical scrollbar to a row. </P>\n<H4>Code example </H4>\n<P>Invoke the <CODE>ensureRowVisible</CODE> method. </P>\n<PRE><CODE>$(\"#treeGrid\").jqxTreeGrid('ensureRowVisible', 'ALFKI');</CODE></PRE>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/6XZW5/",
            "exampleDescription": "ensures a row's vizibility in the jqxTreeGrid.",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "rowKey",
                    "dataType": "string",
                    "ts_dataType": "number | string",
                    "description": "Unique ID which identifies the row",
                    "optional": false
                }
            ],
            "customExample": {
                "customCode": "&lt;template>\n  &lt;JqxTreeGrid ref=\"myTreeGrid\"\n         :source=\"source\" :columns=\"columns\" :height=\"100\" />\n&lt;/template>\n\n&lt;script>\n  import JqxTreeGrid from 'jqwidgets-scripts/jqwidgets-vue/vue_jqxtreegrid.vue';\n\n  export default {\n    components: {\n      JqxTreeGrid\n    },\n    data: function () {\n      return {\n        source: new $.jqx.dataAdapter(this.data),\n        columns: [\n          { text: 'FirstName', dataField: 'FirstName', width: 150, aggregates: ['count'] },\n          { text: 'LastName', dataField: 'LastName', width: 120 },\n          { text: 'Title', dataField: 'Title', width: 200 }\n        ]\n      }\n    },\n    beforeCreate: function () {\n      let employees = [{\n        'EmployeeID': 2,\n        'FirstName': 'Andrew',\n        'LastName': 'Fuller',\n        'Title': 'Vice President, Sales',\n        'expanded': 'true',\n        children: [{\n          'EmployeeID': 8,\n          'FirstName': 'Laura',\n          'LastName': 'Callahan',\n          'Title': 'Inside Sales Coordinator'\n        }, {\n          'EmployeeID': 5,\n          'FirstName': 'Steven',\n          'LastName': 'Buchanan',\n          'Title': 'Sales Manager',\n          'expanded': 'true',\n          children: [{\n            'EmployeeID': 6,\n            'FirstName': 'Michael',\n            'LastName': 'Suyama',\n            'Title': 'Sales Representative'\n          }, {\n            'EmployeeID': 7,\n            'FirstName': 'Robert',\n            'LastName': 'King',\n            'Title': 'Sales Representative'\n          }]\n        }]\n      }];\n      this.data = {\n        dataType: \"json\",\n        dataFields: [{ name: 'EmployeeID', type: 'number' },\n        { name: 'FirstName', type: 'string' },\n        { name: 'LastName', type: 'string' },\n        { name: 'Title', type: 'string' },\n        { name: 'children', type: 'array' },\n        { name: 'expanded', type: 'bool' }],\n        hierarchy: { root: 'children' },\n        id: 'EmployeeID',\n        localData: employees\n      };\n    },\n    mounted: function () {\n      this.$refs.myTreeGrid.ensureRowVisible(6);\n    }\n  }\n&lt;/script>"
            }
        },
        {
            "name": "endRowEdit",
            "description": "<P>Ends a row edit when <CODE>editable</CODE> is set to true. </P>\n<H4>Code example </H4>\n<P>Invoke the <CODE>endRowEdit</CODE> method. </P>\n<PRE><CODE>$(\"#treeGrid\").jqxTreeGrid('endRowEdit', 'ALFKI');</CODE></PRE>\n<P>Invoke the <CODE>endRowEdit</CODE> method and cancel changes. </P>\n<PRE><CODE>$(\"#treeGrid\").jqxTreeGrid('endRowEdit', 'ALFKI', true);</CODE></PRE>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/DQDy8/",
            "exampleDescription": "Invoke the endRowEdit method of the jqxTreeGrid.",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "rowKey",
                    "dataType": "string",
                    "ts_dataType": "number | string",
                    "description": "Unique ID which identifies the row",
                    "optional": false
                },
                {
                    "name": "cancelChanges",
                    "dataType": "boolean",
                    "description": "",
                    "optional": true
                }
            ],
            "customExample": {
                "customCode": "&lt;template>\n  &lt;div>\n    &lt;JqxTreeGrid ref=\"myTreeGrid\"\n           :source=\"source\" :columns=\"columns\" />\n    &lt;JqxButton style=\"width: 100px; margin-top: 20px;\" @click=\"endRowEdit()\">End row edit&lt;/JqxButton>\n  &lt;/div>\n&lt;/template>\n&lt;script>\n  import JqxTreeGrid from 'jqwidgets-scripts/jqwidgets-vue/vue_jqxtreegrid.vue';\n  import JqxButton from 'jqwidgets-scripts/jqwidgets-vue/vue_jqxbuttons.vue';\n  export default {\n    components: {\n      JqxTreeGrid,\n      JqxButton\n    },\n    data: function () {\n      return {\n        source: new $.jqx.dataAdapter(this.data),\n        columns: [\n          { text: 'FirstName', dataField: 'FirstName', width: 150, aggregates: ['count'] },\n          { text: 'LastName', dataField: 'LastName', width: 120 },\n          { text: 'Title', dataField: 'Title', width: 200 }\n        ]\n      }\n    },\n    beforeCreate: function () {\n      let employees = [{\n        'EmployeeID': 2,\n        'FirstName': 'Andrew',\n        'LastName': 'Fuller',\n        'Title': 'Vice President, Sales',\n        'expanded': 'true',\n        children: [{\n          'EmployeeID': 8,\n          'FirstName': 'Laura',\n          'LastName': 'Callahan',\n          'Title': 'Inside Sales Coordinator'\n        }, {\n          'EmployeeID': 5,\n          'FirstName': 'Steven',\n          'LastName': 'Buchanan',\n          'Title': 'Sales Manager',\n          'expanded': 'true',\n          children: [{\n            'EmployeeID': 6,\n            'FirstName': 'Michael',\n            'LastName': 'Suyama',\n            'Title': 'Sales Representative'\n          }, {\n            'EmployeeID': 7,\n            'FirstName': 'Robert',\n            'LastName': 'King',\n            'Title': 'Sales Representative'\n          }]\n        }]\n      }];\n      this.data = {\n        dataType: \"json\",\n        dataFields: [{ name: 'EmployeeID', type: 'number' },\n        { name: 'FirstName', type: 'string' },\n        { name: 'LastName', type: 'string' },\n        { name: 'Title', type: 'string' },\n        { name: 'children', type: 'array' },\n        { name: 'expanded', type: 'bool' }],\n        hierarchy: { root: 'children' },\n        id: 'EmployeeID',\n        localData: employees\n      };\n    },\n    mounted: function () {\n      this.$refs.myTreeGrid.beginRowEdit(2);\n    },\n    methods: {\n      endRowEdit: function () {\n        this.$refs.myTreeGrid.endRowEdit(2, true);\n      }\n    }\n  }\n&lt;/script>"
            }
        },
        {
            "name": "endCellEdit",
            "description": "<P>Ends a cell edit operation when <CODE>editable</CODE> is set to true. </P>\n<H4>Code example </H4>\n<P>Invoke the <CODE>endCellEdit</CODE> method. </P>\n<PRE><CODE>$(\"#treeGrid\").jqxTreeGrid('endCellEdit', 'ALFKI', 'FirstName');</CODE></PRE>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/G69GB/",
            "exampleDescription": "ends the cell edit of the jqxTreeGrid.",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "rowKey",
                    "dataType": "string",
                    "ts_dataType": "number | string",
                    "description": "Unique ID which identifies the row",
                    "optional": false
                },
                {
                    "name": "dataField",
                    "dataType": "string",
                    "description": "",
                    "optional": false
                },
                {
                    "name": "cancelChanges",
                    "dataType": "boolean",
                    "description": "Determines whether the changes would be canceled or confirmed. Default: false",
                    "optional": true
                }
            ],
            "customExample": {
                "customCode": "&lt;template>\n  &lt;div>\n    &lt;JqxTreeGrid ref=\"myTreeGrid\"\n           :source=\"source\" :columns=\"columns\" :editSettings=\"editSettings\"/>\n    &lt;JqxButton style=\"width: 100px; margin-top: 20px;\" @click=\"endRowEdit()\">End cell edit&lt;/JqxButton>\n  &lt;/div>\n&lt;/template>\n&lt;script>\n  import JqxTreeGrid from 'jqwidgets-scripts/jqwidgets-vue/vue_jqxtreegrid.vue';\n  import JqxButton from 'jqwidgets-scripts/jqwidgets-vue/vue_jqxbuttons.vue';\n  export default {\n    components: {\n      JqxTreeGrid,\n      JqxButton\n    },\n    data: function () {\n      return {\n        source: new $.jqx.dataAdapter(this.data),\n        columns: [\n          { text: 'FirstName', dataField: 'FirstName', width: 150, aggregates: ['count'] },\n          { text: 'LastName', dataField: 'LastName', width: 120 },\n          { text: 'Title', dataField: 'Title', width: 200 }\n        ],\n        editSettings: {\n          editSingleCell: true\n        }\n      }\n    },\n    beforeCreate: function () {\n      let employees = [{\n        'EmployeeID': 2,\n        'FirstName': 'Andrew',\n        'LastName': 'Fuller',\n        'Title': 'Vice President, Sales',\n        'expanded': 'true',\n        children: [{\n          'EmployeeID': 8,\n          'FirstName': 'Laura',\n          'LastName': 'Callahan',\n          'Title': 'Inside Sales Coordinator'\n        }, {\n          'EmployeeID': 5,\n          'FirstName': 'Steven',\n          'LastName': 'Buchanan',\n          'Title': 'Sales Manager',\n          'expanded': 'true',\n          children: [{\n            'EmployeeID': 6,\n            'FirstName': 'Michael',\n            'LastName': 'Suyama',\n            'Title': 'Sales Representative'\n          }, {\n            'EmployeeID': 7,\n            'FirstName': 'Robert',\n            'LastName': 'King',\n            'Title': 'Sales Representative'\n          }]\n        }]\n      }];\n      this.data = {\n        dataType: \"json\",\n        dataFields: [{ name: 'EmployeeID', type: 'number' },\n        { name: 'FirstName', type: 'string' },\n        { name: 'LastName', type: 'string' },\n        { name: 'Title', type: 'string' },\n        { name: 'children', type: 'array' },\n        { name: 'expanded', type: 'bool' }],\n        hierarchy: { root: 'children' },\n        id: 'EmployeeID',\n        localData: employees\n      };\n    },\n    mounted: function () {\n      this.$refs.myTreeGrid.beginCellEdit(2, 'LastName');\n    },\n    methods: {\n      endRowEdit: function () {\n        this.$refs.myTreeGrid.endCellEdit(2, 'LastName');\n      }\n    }\n  }\n&lt;/script>"
            }
        },
        {
            "name": "exportData",
            "description": "<P>Exports TreeGrid Data to Excel, HTML, XML, JSON, CSV or TSV. See also the <CODE>exportSettings</CODE> property </P>\n<H4>Code example </H4>\n<PRE style=\"OVERFLOW: auto; MAX-WIDTH: 630px; HEIGHT: 400px; WIDTH: 630px; MAX-HEIGHT: 400px\"><CODE>\r\nvar employees = [{ \"EmployeeID\": 1, \"FirstName\": \"Nancy\", \"LastName\": \"Davolio\", \"ReportsTo\": 2, \"Country\": \"USA\", \"Title\": \"Sales Representative\", \"HireDate\": \"1992-05-01 00:00:00\", \"BirthDate\": \"1948-12-08 00:00:00\", \"City\": \"Seattle\", \"Address\": \"507 - 20th Ave. E.Apt. 2A\" }, { \"EmployeeID\": 2, \"FirstName\": \"Andrew\", \"LastName\": \"Fuller\", \"ReportsTo\": null, \"Country\": \"USA\", \"Title\": \"Vice President, Sales\", \"HireDate\": \"1992-08-14 00:00:00\", \"BirthDate\": \"1952-02-19 00:00:00\", \"City\": \"Tacoma\", \"Address\": \"908 W. Capital Way\" }, { \"EmployeeID\": 3, \"FirstName\": \"Janet\", \"LastName\": \"Leverling\", \"ReportsTo\": 2, \"Country\": \"USA\", \"Title\": \"Sales Representative\", \"HireDate\": \"1992-04-01 00:00:00\", \"BirthDate\": \"1963-08-30 00:00:00\", \"City\": \"Kirkland\", \"Address\": \"722 Moss Bay Blvd.\" }, { \"EmployeeID\": 4, \"FirstName\": \"Margaret\", \"LastName\": \"Peacock\", \"ReportsTo\": 2, \"Country\": \"USA\", \"Title\": \"Sales Representative\", \"HireDate\": \"1993-05-03 00:00:00\", \"BirthDate\": \"1937-09-19 00:00:00\", \"City\": \"Redmond\", \"Address\": \"4110 Old Redmond Rd.\" }, { \"EmployeeID\": 5, \"FirstName\": \"Steven\", \"LastName\": \"Buchanan\", \"ReportsTo\": 2, \"Country\": \"UK\", \"Title\": \"Sales Manager\", \"HireDate\": \"1993-10-17 00:00:00\", \"BirthDate\": \"1955-03-04 00:00:00\", \"City\": \"London\", \"Address\": \"14 Garrett Hill\" }, { \"EmployeeID\": 6, \"FirstName\": \"Michael\", \"LastName\": \"Suyama\", \"ReportsTo\": 5, \"Country\": \"UK\", \"Title\": \"Sales Representative\", \"HireDate\": \"1993-10-17 00:00:00\", \"BirthDate\": \"1963-07-02 00:00:00\", \"City\": \"London\", \"Address\": \"Coventry House Miner Rd.\" }, { \"EmployeeID\": 7, \"FirstName\": \"Robert\", \"LastName\": \"King\", \"ReportsTo\": 5, \"Country\": \"UK\", \"Title\": \"Sales Representative\", \"HireDate\": \"1994-01-02 00:00:00\", \"BirthDate\": \"1960-05-29 00:00:00\", \"City\": \"London\", \"Address\": \"Edgeham Hollow Winchester Way\" }, { \"EmployeeID\": 8, \"FirstName\": \"Laura\", \"LastName\": \"Callahan\", \"ReportsTo\": 2, \"Country\": \"USA\", \"Title\": \"Inside Sales Coordinator\", \"HireDate\": \"1994-03-05 00:00:00\", \"BirthDate\": \"1958-01-09 00:00:00\", \"City\": \"Seattle\", \"Address\": \"4726 - 11th Ave. N.E.\" }, { \"EmployeeID\": 9, \"FirstName\": \"Anne\", \"LastName\": \"Dodsworth\", \"ReportsTo\": 5, \"Country\": \"UK\", \"Title\": \"Sales Representative\", \"HireDate\": \"1994-11-15 00:00:00\", \"BirthDate\": \"1966-01-27 00:00:00\", \"City\": \"London\", \"Address\": \"7 Houndstooth Rd.\" }];\r\n//// prepare the data\r\nvar source =\r\n{\r\n    dataType: \"json\",\r\n    dataFields: [\r\n        { name: 'EmployeeID', type: 'number' },\r\n        { name: 'ReportsTo', type: 'number' },\r\n        { name: 'FirstName', type: 'string' },\r\n        { name: 'LastName', type: 'string' },\r\n        { name: 'Country', type: 'string' },\r\n        { name: 'City', type: 'string' },\r\n        { name: 'Address', type: 'string' },\r\n        { name: 'Title', type: 'string' },\r\n        { name: 'HireDate', type: 'date' },\r\n        { name: 'BirthDate', type: 'date' }\r\n    ],\r\n    hierarchy:\r\n    {\r\n        keyDataField: { name: 'EmployeeID' },\r\n        parentDataField: { name: 'ReportsTo' }\r\n    },\r\n    id: 'EmployeeID',\r\n    localData: employees\r\n};\r\nvar dataAdapter = new $.jqx.dataAdapter(source);\r\n// create Tree Grid\r\n$(\"#treeGrid\").jqxTreeGrid(\r\n{\r\n    width: 600,\r\n    source: dataAdapter,\r\n    ready: function () {\r\n        $(\"#treeGrid\").jqxTreeGrid('expandRow', '2');\r\n    },\r\n    columns: [\r\n        { text: 'First Name', dataField: 'FirstName', width: 150 },\r\n        { text: 'Last Name', dataField: 'LastName', width: 120 },\r\n        { text: 'Title', dataField: 'Title', width: 160 },\r\n        { text: 'Birth Date', dataField: 'BirthDate', cellsFormat: 'd', width: 120 },\r\n        { text: 'Hire Date', dataField: 'HireDate', cellsFormat: 'd', width: 120 },\r\n        { text: 'Address', dataField: 'Address', width: 250 },\r\n        { text: 'City', dataField: 'City', width: 120 },\r\n        { text: 'Country', dataField: 'Country', width: 120 }\r\n    ]\r\n});\r\n$(\"#excelExport\").jqxButton();\r\n$(\"#xmlExport\").jqxButton();\r\n$(\"#csvExport\").jqxButton();\r\n$(\"#tsvExport\").jqxButton();\r\n$(\"#htmlExport\").jqxButton();\r\n$(\"#jsonExport\").jqxButton();\r\n$(\"#excelExport\").click(function () {\r\n    $(\"#treeGrid\").jqxTreeGrid('exportData', 'xls');\r\n});\r\n$(\"#xmlExport\").click(function () {\r\n    $(\"#treeGrid\").jqxTreeGrid('exportData', 'xml');\r\n});\r\n$(\"#csvExport\").click(function () {\r\n    $(\"#treeGrid\").jqxTreeGrid('exportData', 'csv');\r\n});\r\n$(\"#tsvExport\").click(function () {\r\n    $(\"#treeGrid\").jqxTreeGrid('exportData', 'tsv');\r\n});\r\n$(\"#htmlExport\").click(function () {\r\n    $(\"#treeGrid\").jqxTreeGrid('exportData', 'html');\r\n});\r\n$(\"#jsonExport\").click(function () {\r\n    $(\"#treeGrid\").jqxTreeGrid('exportData', 'json');\r\n});\r\n                        </CODE></PRE>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/zk2qW/",
            "exampleDescription": "Invoke the exportData method of the jqxTreeGrid.",
            "returnDataType": "object(optional)",
            "ts_returnDataType": "any",
            "arguments": [
                {
                    "name": "exportDataType",
                    "dataType": "string",
                    "description": "'xls', 'html', 'xml', 'json', 'csv', 'tsv' or 'pdf'",
                    "ts_dataType": "any",
                    "optional": false
                }
            ],
            "exampleInit": {
                "args": [ "'pdf'" ]
            }
        },
        {
            "name": "focus",
            "description": "<P>Focus jqxTreeGrid. </P>\n<H4>Code example </H4>\n<P>Invoke the <CODE>focus</CODE> method. </P>\n<PRE><CODE>$(\"#treeGrid\").jqxTreeGrid('focus');</CODE></PRE>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/MgayL/",
            "exampleDescription": "Invoke the focus method of the jqxTreeGrid.",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "None",
                    "dataType": null,
                    "description": "",
                    "optional": false
                }
            ]
        },
        {
            "name": "getColumnProperty",
            "description": "<P>Gets a property value of a column. </P>\n<H4>Code example </H4>\n<P>Invoke the <CODE>getColumnProperty</CODE> method. </P>\n<PRE><CODE>$(\"#treeGrid\").jqxTreeGrid('getColumnProperty', 'firstName', 'width');</CODE></PRE>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/Qcx3x/",
            "exampleDescription": "Invoke the getColumnProperty method of the jqxTreeGrid.",
            "returnDataType": "object",
            "ts_returnDataType": "any",
            "arguments": [
                {
                    "name": "dataField",
                    "dataType": "string",
                    "description": "",
                    "optional": false
                },
                {
                    "name": "propertyName",
                    "dataType": "string",
                    "description": "",
                    "optional": false
                }
            ],
            "exampleInit": {
                "args": [ "'firstName'", "'width'" ]
            }
        },
        {
            "name": "goToPage",
            "description": "<P>Navigates to a page when <CODE>pageable</CODE> is set to true. </P>\n<H4>Code example </H4>\n<P>Invoke the <CODE>goToPage</CODE> method. </P>\n<PRE><CODE>$(\"#treeGrid\").jqxTreeGrid('goToPage', 2);</CODE></PRE>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/3m8yB/",
            "exampleDescription": "Invoke the goToPage method of the jqxTreeGrid.",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "pageIndex",
                    "dataType": "number",
                    "description": "",
                    "optional": false
                }
            ],
            "customExample": {
                "customCode": "&lt;template>\n  &lt;JqxTreeGrid ref=\"myTreeGrid\"\n         :source=\"source\" :columns=\"columns\" :pageable=\"true\" :pageSize=\"3\"/>\n&lt;/template>\n\n&lt;script>\n  import JqxTreeGrid from 'jqwidgets-scripts/jqwidgets-vue/vue_jqxtreegrid.vue';\n\n  export default {\n    components: {\n      JqxTreeGrid\n    },\n    data: function () {\n      return {\n        source: new $.jqx.dataAdapter(this.data),\n        columns: [\n          { text: 'FirstName', dataField: 'FirstName', width: 150, aggregates: ['count'] },\n          { text: 'LastName', dataField: 'LastName', width: 120 },\n          { text: 'Title', dataField: 'Title', width: 200 }\n        ]\n      }\n    },\n    beforeCreate: function () {\n      let employees = [{\n        'EmployeeID': 2,\n        'FirstName': 'Andrew',\n        'LastName': 'Fuller',\n        'Title': 'Vice President, Sales',\n        'expanded': 'true',\n        children: [{\n          'EmployeeID': 8,\n          'FirstName': 'Laura',\n          'LastName': 'Callahan',\n          'Title': 'Inside Sales Coordinator'\n        }, {\n          'EmployeeID': 5,\n          'FirstName': 'Steven',\n          'LastName': 'Buchanan',\n          'Title': 'Sales Manager',\n          'expanded': 'true',\n          children: [{\n            'EmployeeID': 6,\n            'FirstName': 'Michael',\n            'LastName': 'Suyama',\n            'Title': 'Sales Representative'\n          }, {\n            'EmployeeID': 7,\n            'FirstName': 'Robert',\n            'LastName': 'King',\n            'Title': 'Sales Representative'\n          }]\n        }]\n      }];\n      this.data = {\n        dataType: \"json\",\n        dataFields: [{ name: 'EmployeeID', type: 'number' },\n        { name: 'FirstName', type: 'string' },\n        { name: 'LastName', type: 'string' },\n        { name: 'Title', type: 'string' },\n        { name: 'children', type: 'array' },\n        { name: 'expanded', type: 'bool' }],\n        hierarchy: { root: 'children' },\n        id: 'EmployeeID',\n        localData: employees\n      };\n    },\n    mounted: function () {\n      this.$refs.myTreeGrid.goToPage(2);\n    }\n  }\n&lt;/script>"
            }
        },
        {
            "name": "goToPrevPage",
            "description": "<P>Navigates to a previous page when <CODE>pageable</CODE> is set to true. </P>\n<H4>Code example </H4>\n<P>Invoke the <CODE>goToPrevPage</CODE> method. </P>\n<PRE><CODE>$(\"#treeGrid\").jqxTreeGrid('goToPrevPage');</CODE></PRE>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/L9Frb/",
            "exampleDescription": "Invoke the goToPrevPage method of the jqxTreeGrid.",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "None",
                    "dataType": null,
                    "description": "",
                    "optional": false
                }
            ],
            "customExample": {
                "customCode": "&lt;template>\n  &lt;JqxTreeGrid ref=\"myTreeGrid\"\n         :source=\"source\" :columns=\"columns\" :pageable=\"true\" :pageSize=\"2\" />\n&lt;/template>\n&lt;script>\n  import JqxTreeGrid from 'jqwidgets-scripts/jqwidgets-vue/vue_jqxtreegrid.vue';\n  export default {\n    components: {\n      JqxTreeGrid\n    },\n    data: function () {\n      return {\n        source: new $.jqx.dataAdapter(this.data),\n        columns: [\n          { text: 'FirstName', dataField: 'FirstName', width: 150, aggregates: ['count'] },\n          { text: 'LastName', dataField: 'LastName', width: 120 },\n          { text: 'Title', dataField: 'Title', width: 200 }\n        ]\n      }\n    },\n    beforeCreate: function () {\n      let employees = [{\n        'EmployeeID': 2,\n        'FirstName': 'Andrew',\n        'LastName': 'Fuller',\n        'Title': 'Vice President, Sales',\n        'expanded': 'true',\n        children: [{\n          'EmployeeID': 8,\n          'FirstName': 'Laura',\n          'LastName': 'Callahan',\n          'Title': 'Inside Sales Coordinator'\n        }, {\n          'EmployeeID': 5,\n          'FirstName': 'Steven',\n          'LastName': 'Buchanan',\n          'Title': 'Sales Manager',\n          'expanded': 'true',\n          children: [{\n            'EmployeeID': 6,\n            'FirstName': 'Michael',\n            'LastName': 'Suyama',\n            'Title': 'Sales Representative'\n          }, {\n            'EmployeeID': 7,\n            'FirstName': 'Robert',\n            'LastName': 'King',\n            'Title': 'Sales Representative'\n          }]\n        }]\n      }];\n      this.data = {\n        dataType: \"json\",\n        dataFields: [{ name: 'EmployeeID', type: 'number' },\n        { name: 'FirstName', type: 'string' },\n        { name: 'LastName', type: 'string' },\n        { name: 'Title', type: 'string' },\n        { name: 'children', type: 'array' },\n        { name: 'expanded', type: 'bool' }],\n        hierarchy: { root: 'children' },\n        id: 'EmployeeID',\n        localData: employees\n      };\n    },\n    mounted: function () {\n      this.$refs.myTreeGrid.goToPage(3);\n      this.$refs.myTreeGrid.goToPrevPage();\n    }\n  }\n&lt;/script>"
            }
        },
        {
            "name": "goToNextPage",
            "description": "<P>Navigates to a next page when <CODE>pageable</CODE> is set to true. </P>\n<H4>Code example </H4>\n<P>Invoke the <CODE>goToNextPage</CODE> method. </P>\n<PRE><CODE>$(\"#treeGrid\").jqxTreeGrid('goToNextPage');</CODE></PRE>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/Vjj85/",
            "exampleDescription": "Invoke the goToNextPage method of the jqxTreeGrid.",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "None",
                    "dataType": null,
                    "description": "",
                    "optional": false
                }
            ],
            "customExample": {
                "customCode": "&lt;template>\n  &lt;JqxTreeGrid ref=\"myTreeGrid\"\n         :source=\"source\" :columns=\"columns\" :pageable=\"true\" :pageSize=\"3\"/>\n&lt;/template>\n\n&lt;script>\n  import JqxTreeGrid from 'jqwidgets-scripts/jqwidgets-vue/vue_jqxtreegrid.vue';\n\n  export default {\n    components: {\n      JqxTreeGrid\n    },\n    data: function () {\n      return {\n        source: new $.jqx.dataAdapter(this.data),\n        columns: [\n          { text: 'FirstName', dataField: 'FirstName', width: 150, aggregates: ['count'] },\n          { text: 'LastName', dataField: 'LastName', width: 120 },\n          { text: 'Title', dataField: 'Title', width: 200 }\n        ]\n      }\n    },\n    beforeCreate: function () {\n      let employees = [{\n        'EmployeeID': 2,\n        'FirstName': 'Andrew',\n        'LastName': 'Fuller',\n        'Title': 'Vice President, Sales',\n        'expanded': 'true',\n        children: [{\n          'EmployeeID': 8,\n          'FirstName': 'Laura',\n          'LastName': 'Callahan',\n          'Title': 'Inside Sales Coordinator'\n        }, {\n          'EmployeeID': 5,\n          'FirstName': 'Steven',\n          'LastName': 'Buchanan',\n          'Title': 'Sales Manager',\n          'expanded': 'true',\n          children: [{\n            'EmployeeID': 6,\n            'FirstName': 'Michael',\n            'LastName': 'Suyama',\n            'Title': 'Sales Representative'\n          }, {\n            'EmployeeID': 7,\n            'FirstName': 'Robert',\n            'LastName': 'King',\n            'Title': 'Sales Representative'\n          }]\n        }]\n      }];\n      this.data = {\n        dataType: \"json\",\n        dataFields: [{ name: 'EmployeeID', type: 'number' },\n        { name: 'FirstName', type: 'string' },\n        { name: 'LastName', type: 'string' },\n        { name: 'Title', type: 'string' },\n        { name: 'children', type: 'array' },\n        { name: 'expanded', type: 'bool' }],\n        hierarchy: { root: 'children' },\n        id: 'EmployeeID',\n        localData: employees\n      };\n    },\n    mounted: function () {\n      this.$refs.myTreeGrid.goToNextPage();\n    }\n  }\n&lt;/script>"
            }
        },
        {
            "name": "getSelection",
            "description": "<P>Returns an array of selected rows. </P>\n<H4>Code example </H4>\n<P>Invoke the <CODE>getSelection</CODE> method. </P>\n<PRE><CODE>$(\"#treeGrid\").jqxTreeGrid('getSelection');</CODE></PRE>\n<P>Invoke the <CODE>getSelection</CODE> and loop through the selected rows</P>\n<PRE><CODE>\r\nvar selection = $(\"#table\").jqxTreeGrid('getSelection');\r\nfor (var i = 0; i &lt; selection.length; i++) {\r\n    // get a selected row.\r\n\tvar rowData = selection[i];\r\n}\r\n                         </CODE></PRE>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/D2S5r/",
            "exampleDescription": "Invoke the getSelection method of the jqxTreeGrid.",
            "returnDataType": "Array",
            "ts_returnDataType": "Array<any>",
            "arguments": [
                {
                    "name": "None",
                    "dataType": null,
                    "description": "",
                    "optional": false
                }
            ]
        },
        {
            "name": "getKey",
            "description": "<P>Returns the Row's Key. If the row's key is not found, returns null. </P>\n<H4>Code example </H4>\n<P>Invoke the <CODE>getKey</CODE> method. </P>\n<PRE><CODE>\r\nvar key = $(\"#table\").jqxTreeGrid('getKey', row);\r\n                         </CODE></PRE>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/S3q9c/",
            "exampleDescription": "Invoke the getKey method of the jqxTreeGrid.",
            "returnDataType": "string",
            "arguments": [
                {
                    "name": "row",
                    "dataType": "object",
                    "ts_dataType": "any",
                    "description": "",
                    "optional": false
                }
            ],
            "customExample": {
                "customCode": "&lt;template>\n  &lt;JqxTreeGrid ref=\"myTreeGrid\"\n         :source=\"source\" :columns=\"columns\" />\n&lt;/template>\n\n&lt;script>\n  import JqxTreeGrid from 'jqwidgets-scripts/jqwidgets-vue/vue_jqxtreegrid.vue';\n\n  export default {\n    components: {\n      JqxTreeGrid\n    },\n    data: function () {\n      return {\n        source: new $.jqx.dataAdapter(this.data),\n        columns: [\n          { text: 'FirstName', dataField: 'FirstName', width: 150, aggregates: ['count'] },\n          { text: 'LastName', dataField: 'LastName', width: 120 },\n          { text: 'Title', dataField: 'Title', width: 200 }\n        ]\n      }\n    },\n    beforeCreate: function () {\n      let employees = [{\n        'EmployeeID': 2,\n        'FirstName': 'Andrew',\n        'LastName': 'Fuller',\n        'Title': 'Vice President, Sales',\n        'expanded': 'true',\n        children: [{\n          'EmployeeID': 8,\n          'FirstName': 'Laura',\n          'LastName': 'Callahan',\n          'Title': 'Inside Sales Coordinator'\n        }, {\n          'EmployeeID': 5,\n          'FirstName': 'Steven',\n          'LastName': 'Buchanan',\n          'Title': 'Sales Manager',\n          'expanded': 'true',\n          children: [{\n            'EmployeeID': 6,\n            'FirstName': 'Michael',\n            'LastName': 'Suyama',\n            'Title': 'Sales Representative'\n          }, {\n            'EmployeeID': 7,\n            'FirstName': 'Robert',\n            'LastName': 'King',\n            'Title': 'Sales Representative'\n          }]\n        }]\n      }];\n      this.data = {\n        dataType: \"json\",\n        dataFields: [{ name: 'EmployeeID', type: 'number' },\n        { name: 'FirstName', type: 'string' },\n        { name: 'LastName', type: 'string' },\n        { name: 'Title', type: 'string' },\n        { name: 'children', type: 'array' },\n        { name: 'expanded', type: 'bool' }],\n        hierarchy: { root: 'children' },\n        id: 'EmployeeID',\n        localData: employees\n      };\n    },\n    mounted: function () {\n      let rows = this.$refs.myTreeGrid.getRows();\n      let key = this.$refs.myTreeGrid.getKey(rows[0]);\n      alert(key);\n    }\n  }\n&lt;/script>"
            }
        },
        {
            "name": "getRow",
            "description": "<P>Returns an object. If the row is not found, returns null. </P>\n<UL><LI>checked - boolean value. Returns the row's checked state. \r\n<LI>expanded - boolean value. Returns the row's expanded state. \r\n<LI>icon - string value. Returns the row's icon url. \r\n<LI>leaf - boolean value. Returns whether the row is a leaf in the hierarchy. \r\n<LI>level - Integer value. Returns the row's hierarchy level. \r\n<LI>parent - object. Returns null for root rows. Otherwise, returns the parent row's object \r\n<LI>records - Array. Returns the row's sub-rows collection. \r\n<LI>selected - boolean value. Returns the row's selected state. \r\n<LI>uid - number/string value. Returns the row's unique ID/Key. </LI></UL>\n<H4>Code example </H4>\n<P>Invoke the <CODE>getRow</CODE> method. </P>\n<PRE><CODE>\r\nvar row = $(\"#table\").jqxTreeGrid('getRow', \"1.2\");\r\n                         </CODE></PRE>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/nhbJ5/",
            "exampleDescription": "Invoke the getRow method of the jqxTreeGrid.",
            "returnDataType": "object",
            "ts_returnDataType": "TreeGridGetRow",
            "arguments": [
                {
                    "name": "rowKey",
                    "dataType": "string",
                    "ts_dataType": "number | string",
                    "description": "",
                    "optional": false
                }
            ],
            "exampleInit": {
                "args": [ "2" ]
            }
        },
        {
            "name": "getRows",
            "description": "<P>Returns an array of all rows loaded into jqxTreeGrid. </P>\n<UL><LI>checked - boolean value. Returns the row's checked state. \r\n<LI>expanded - boolean value. Returns the row's expanded state. \r\n<LI>icon - string value. Returns the row's icon url. \r\n<LI>leaf - boolean value. Returns whether the row is a leaf in the hierarchy. \r\n<LI>level - Integer value. Returns the row's hierarchy level. \r\n<LI>parent - object. Returns null for root rows. Otherwise, returns the parent row's object \r\n<LI>records - Array. Returns the row's sub-rows collection. \r\n<LI>selected - boolean value. Returns the row's selected state. \r\n<LI>uid - number/string value. Returns the row's unique ID/Key. </LI></UL>\n<H4>Code example </H4>\n<P>Invoke the <CODE>getRows</CODE> method. </P>\n<PRE><CODE>$(\"#treeGrid\").jqxTreeGrid('getRows');</CODE></PRE>\n<P>Invoke the <CODE>getRows</CODE> and loop through the rows</P>\n<PRE><CODE>\r\n      var firstLevelRows = $(\"#treeGrid\").jqxTreeGrid('getRows');\r\n      for (var i = 0; i &lt; firstLevelRows.length; i++) {\r\n          // get a row.\r\n          var rowData = firstLevelRows[i];\r\n      }\r\n                         </CODE></PRE>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/wjbL3/",
            "exampleDescription": "Invoke the getRows method of the jqxTreeGrid.",
            "returnDataType": "Array",
            "ts_returnDataType": "Array<TreeGridGetRow>",
            "arguments": [
                {
                    "name": "None",
                    "dataType": null,
                    "description": "",
                    "optional": false
                }
            ]
        },
        {
            "name": "getCheckedRows",
            "description": "<P>Returns a flat array of all checked rows. </P>\n<UL><LI>checked - boolean value. Returns the row's checked state. \r\n<LI>expanded - boolean value. Returns the row's expanded state. \r\n<LI>icon - string value. Returns the row's icon url. \r\n<LI>leaf - boolean value. Returns whether the row is a leaf in the hierarchy. \r\n<LI>level - Integer value. Returns the row's hierarchy level. \r\n<LI>parent - object. Returns null for root rows. Otherwise, returns the parent row's object \r\n<LI>records - Array. Returns the row's sub-rows collection. \r\n<LI>selected - boolean value. Returns the row's selected state. \r\n<LI>uid - number/string value. Returns the row's unique ID/Key. </LI></UL>\n<H4>Code example </H4>\n<P>Invoke the <CODE>getCheckedRows</CODE> method. </P>\n<PRE><CODE>$(\"#treeGrid\").jqxTreeGrid('getCheckedRows');</CODE></PRE>\n<P>Invoke the <CODE>getCheckedRows</CODE> and loop through the rows</P>\n<PRE><CODE>\r\n      var checkedRows = $(\"#treeGrid\").jqxTreeGrid('getCheckedRows');\r\n      for (var i = 0; i &lt; checkedRows.length; i++) {\r\n          // get a row.\r\n          var rowData = checkedRows[i];\r\n      }\r\n                         </CODE></PRE>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/uj0xvnv9/",
            "exampleDescription": "Invoke the getCheckedRows method of the jqxTreeGrid.",
            "returnDataType": "Array",
            "ts_returnDataType": "Array<TreeGridGetRow>",
            "arguments": [
                {
                    "name": "None",
                    "dataType": null,
                    "description": "",
                    "optional": false
                }
            ],
            "extraData": {
                "checkboxes": "true"
            }
        },
        {
            "name": "getView",
            "description": "<P>Returns an array of all rows loaded into jqxTreeGrid. The method takes into account the applied Filtering and Sorting. </P>\n<UL><LI>checked - boolean value. Returns the row's checked state. \r\n<LI>expanded - boolean value. Returns the row's expanded state. \r\n<LI>icon - string value. Returns the row's icon url. \r\n<LI>leaf - boolean value. Returns whether the row is a leaf in the hierarchy. \r\n<LI>level - Integer value. Returns the row's hierarchy level. \r\n<LI>parent - object. Returns null for root rows. Otherwise, returns the parent row's object \r\n<LI>records - Array. Returns the row's sub-rows collection. \r\n<LI>selected - boolean value. Returns the row's selected state. \r\n<LI>uid - number/string value. Returns the row's unique ID/Key. </LI></UL>\n<H4>Code example </H4>\n<P>Invoke the <CODE>getView</CODE> method. </P>\n<PRE><CODE>$(\"#treeGrid\").jqxTreeGrid('getView');</CODE></PRE>\n<P>Invoke the <CODE>getView</CODE> and loop through the rows</P>\n<PRE><CODE>\r\nvar firstLevelRows = $(\"#table\").jqxTreeGrid('getView');\r\nfor (var i = 0; i &lt; rows.length; i++) {\r\n    // get a row.\r\n    var rowData = rows[i];\r\n}\r\n                         </CODE></PRE>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/ryxbE/",
            "exampleDescription": "Invoke the getView method of the jqxTreeGrid.",
            "returnDataType": "Array",
            "ts_returnDataType": "Array<TreeGridGetRow>",
            "arguments": [
                {
                    "name": "None",
                    "dataType": null,
                    "description": "",
                    "optional": false
                }
            ],
            "customExample": {
                "customCode": "&lt;template>\n  &lt;JqxTreeGrid ref=\"myTreeGrid\"\n         :source=\"source\" :columns=\"columns\" :sortable=\"true\"/>\n&lt;/template>\n\n&lt;script>\n  import JqxTreeGrid from 'jqwidgets-scripts/jqwidgets-vue/vue_jqxtreegrid.vue';\n\n  export default {\n    components: {\n      JqxTreeGrid\n    },\n    data: function () {\n      return {\n        source: new $.jqx.dataAdapter(this.data),\n        columns: [\n          { text: 'FirstName', dataField: 'FirstName', width: 150, aggregates: ['count'] },\n          { text: 'LastName', dataField: 'LastName', width: 120 },\n          { text: 'Title', dataField: 'Title', width: 200 }\n        ]\n      }\n    },\n    beforeCreate: function () {\n      let employees = [{\n        'EmployeeID': 2,\n        'FirstName': 'Andrew',\n        'LastName': 'Fuller',\n        'Title': 'Vice President, Sales',\n        'expanded': 'true',\n        children: [{\n          'EmployeeID': 8,\n          'FirstName': 'Laura',\n          'LastName': 'Callahan',\n          'Title': 'Inside Sales Coordinator'\n        }, {\n          'EmployeeID': 5,\n          'FirstName': 'Steven',\n          'LastName': 'Buchanan',\n          'Title': 'Sales Manager',\n          'expanded': 'true',\n          children: [{\n            'EmployeeID': 6,\n            'FirstName': 'Michael',\n            'LastName': 'Suyama',\n            'Title': 'Sales Representative'\n          }, {\n            'EmployeeID': 7,\n            'FirstName': 'Robert',\n            'LastName': 'King',\n            'Title': 'Sales Representative'\n          }]\n        }]\n      }];\n      this.data = {\n        dataType: \"json\",\n        dataFields: [{ name: 'EmployeeID', type: 'number' },\n        { name: 'FirstName', type: 'string' },\n        { name: 'LastName', type: 'string' },\n        { name: 'Title', type: 'string' },\n        { name: 'children', type: 'array' },\n        { name: 'expanded', type: 'bool' }],\n        hierarchy: { root: 'children' },\n        id: 'EmployeeID',\n        localData: employees\n      };\n    },\n    mounted: function () {\n      this.$refs.myTreeGrid.sortBy('FirstName', 'desc');\n      const view = this.$refs.myTreeGrid.getView();\n      console.log(view);\n    }\n  }\n&lt;/script>"
            }
        },
        {
            "name": "getCellValue",
            "description": "<P>Returns a value of a cell. </P>\n<H4>Code example </H4>\n<P>Invoke the <CODE>getCellValue</CODE> method. </P>\n<PRE><CODE>var value = $(\"#treeGrid\").jqxTreeGrid('getCellValue', 0, 'firstName');</CODE></PRE>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/LRWm4/",
            "exampleDescription": "Invoke the getCellValue method of the jqxTreeGrid.",
            "returnDataType": "object",
            "ts_returnDataType": "any",
            "arguments": [
                {
                    "name": "rowKey",
                    "dataType": "string",
                    "ts_dataType": "number | string",
                    "description": "Unique ID which identifies the row",
                    "optional": false
                },
                {
                    "name": "dataField",
                    "dataType": "string",
                    "description": "",
                    "optional": false
                }
            ],
            "exampleInit": {
                "args": [ "2", "'FirstName'" ]
            }
        },
        {
            "name": "hideColumn",
            "description": "<P>Hides a column. </P>\n<UL><LI>data field - column's data field. </LI></UL>\n<H4>Code example </H4>\n<P>Invoke the <CODE>hideColumn</CODE> method. </P>\n<PRE><CODE>$(\"#treeGrid\").jqxTreeGrid('hideColumn','firstName');</CODE></PRE>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/2RXVR/",
            "exampleDescription": "Invoke the hideColumn method of the jqxTreeGrid.",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "dataField",
                    "dataType": "string",
                    "description": "",
                    "optional": false
                }
            ],
            "exampleInit": {
                "args": [ "'FirstName'" ]
            }
        },
        {
            "name": "isBindingCompleted",
            "description": "<P>Returns whether the binding is completed and if the result is true, this means that you can invoke methods and set properties. Otherwise, if the binding is not completed and you try to set a property or invoke a method, the widget will throw an exception. </P>\n<H4>Code example </H4>\n<P>Invoke the <CODE>isBindingCompleted</CODE> method. </P>\n<PRE><CODE>var isCompleted = $(\"#grid\").jqxTreeGrid('isBindingCompleted');</CODE></PRE>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/vu1beLLy/",
            "exampleDescription": "Invoke the isBindingCompleted method of the jqxTreeGrid.",
            "returnDataType": "boolean",
            "arguments": [
                {
                    "name": "None",
                    "dataType": null,
                    "description": "",
                    "optional": false
                }
            ]
        },
        {
            "name": "lockRow",
            "description": "<P>Locks a row i.e editing of the row would be disabled. </P>\n<H4>Code example </H4>\n<P>Invoke the <CODE>lockRow</CODE> method. </P>\n<PRE><CODE>$(\"#treeGrid\").jqxTreeGrid('lockRow', 'ALFKI');</CODE></PRE>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/LLASY/",
            "exampleDescription": "Invoke the lockRow method of the jqxTreeGrid.",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "rowKey",
                    "dataType": "string",
                    "ts_dataType": "string | number | Array<number | string>",
                    "description": "Unique ID which identifies the row",
                    "optional": false
                }
            ],
            "exampleInit": {
                "args": [ "2" ]
            }
        },
        {
            "name": "refresh",
            "description": "<P>Performs a layout and updates the HTML elements position and size. </P>\n<H4>Code example </H4>\n<P>Invoke the <CODE>refresh</CODE> method. </P>\n<PRE><CODE>$(\"#treeGrid\").jqxTreeGrid('refresh');</CODE></PRE>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/eCwAX/",
            "exampleDescription": "Invoke the refresh method of the jqxTreeGrid.",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "None",
                    "dataType": null,
                    "description": "",
                    "optional": false
                }
            ]
        },
        {
            "name": "render",
            "description": "<P>Renders jqxTreeGrid. </P>\n<H4>Code example </H4>\n<P>Invoke the <CODE>render</CODE> method. </P>\n<PRE><CODE>$(\"#treeGrid\").jqxTreeGrid('render');</CODE></PRE>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/59Unx/",
            "exampleDescription": "Invoke the render method of the jqxTreeGrid.",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "None",
                    "dataType": null,
                    "description": "",
                    "optional": false
                }
            ]
        },
        {
            "name": "removeFilter",
            "description": "<P>Removes a filter. </P>\n<UL><LI>data field - column's data field. </LI></UL>\n<H4>Code example </H4>\n<P>Invoke the <CODE>removeFilter</CODE> method. </P>\n<PRE><CODE>$(\"#treeGrid\").jqxTreeGrid('removeFilter','firstName');</CODE></PRE>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/rg3zc/",
            "exampleDescription": "Invoke the removeFilter method of the jqxTreeGrid.",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "dataField",
                    "dataType": "string",
                    "description": "",
                    "optional": false
                }
            ],
            "customExample": {
                "customCode": "&lt;template>\n  &lt;div>\n    &lt;JqxTreeGrid ref=\"myTreeGrid\"\n           :source=\"source\" :columns=\"columns\" :filterable=\"true\" />\n    &lt;JqxButton style=\"width: 200px; margin-top: 20px;\" @click=\"removeFilter()\">Remove FirstName Filter&lt;/JqxButton>\n  &lt;/div>\n&lt;/template>\n&lt;script>\n  import JqxTreeGrid from 'jqwidgets-scripts/jqwidgets-vue/vue_jqxtreegrid.vue';\n  import JqxButton from 'jqwidgets-scripts/jqwidgets-vue/vue_jqxbuttons.vue';\n  export default {\n    components: {\n      JqxTreeGrid,\n      JqxButton\n    },\n    data: function () {\n      return {\n        source: new jqx.dataAdapter(this.data),\n        columns: [\n          { text: 'FirstName', dataField: 'FirstName', width: 150, aggregates: ['count'] },\n          { text: 'LastName', dataField: 'LastName', width: 120 },\n          { text: 'Title', dataField: 'Title', width: 200 }\n        ]\n      }\n    },\n    beforeCreate: function () {\n      let employees = [{\n        'EmployeeID': 2,\n        'FirstName': 'Andrew',\n        'LastName': 'Fuller',\n        'Title': 'Vice President, Sales',\n        'expanded': 'true',\n        children: [{\n          'EmployeeID': 8,\n          'FirstName': 'Laura',\n          'LastName': 'Callahan',\n          'Title': 'Inside Sales Coordinator'\n        }, {\n          'EmployeeID': 5,\n          'FirstName': 'Steven',\n          'LastName': 'Buchanan',\n          'Title': 'Sales Manager',\n          'expanded': 'true',\n          children: [{\n            'EmployeeID': 6,\n            'FirstName': 'Michael',\n            'LastName': 'Suyama',\n            'Title': 'Sales Representative'\n          }, {\n            'EmployeeID': 7,\n            'FirstName': 'Robert',\n            'LastName': 'King',\n            'Title': 'Sales Representative'\n          }]\n        }]\n      }];\n      this.data = {\n        dataType: \"json\",\n        dataFields: [{ name: 'EmployeeID', type: 'number' },\n        { name: 'FirstName', type: 'string' },\n        { name: 'LastName', type: 'string' },\n        { name: 'Title', type: 'string' },\n        { name: 'children', type: 'array' },\n        { name: 'expanded', type: 'bool' }],\n        hierarchy: { root: 'children' },\n        id: 'EmployeeID',\n        localData: employees\n      };\n    },\n    mounted: function () {\n      let filtertype = 'stringfilter';\n      // create a new group of filters.\n      let filtergroup = new $.jqx.filter();\n      let filter_or_operator = 1;\n      let filtervalue = \"Laura\";\n      let filtercondition = 'equal';\n      let filter = filtergroup.createfilter(filtertype, filtervalue, filtercondition);\n      filtergroup.addfilter(filter_or_operator, filter);\n\n      this.$refs.myTreeGrid.addFilter('FirstName', filtergroup);\n      this.$refs.myTreeGrid.applyFilters();\n    },\n    methods: {\n      removeFilter: function () {\n        this.$refs.myTreeGrid.removeFilter('FirstName');\n        this.$refs.myTreeGrid.applyFilters();\n      }\n    }\n  }\n&lt;/script>"
            }
        },
        {
            "name": "scrollOffset",
            "description": "<P>Scrolls to a position or gets the scroll position. </P>\n<H4>Code example </H4>\n<P>Invoke the <CODE>scrollOffset</CODE> method. </P>\n<PRE><CODE>$(\"#treeGrid\").jqxTreeGrid('scrollOffset', 10, 10);</CODE></PRE>\n<P>Get the scroll position. </P>\n<PRE><CODE>\r\nvar offset = $(\"#treeGrid\").jqxTreeGrid('scrollOffset');\r\nvar left = offset.left;\r\nvar top = offset.top;                                                        \r\n                        </CODE></PRE>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/2TEGt/",
            "exampleDescription": "Invoke the scrollOffset method of the jqxTreeGrid.",
            "returnDataType": "Object",
            "ts_returnDataType": "TreeGridScrollOffset",
            "arguments": [
                {
                    "name": "top",
                    "dataType": "number",
                    "description": "vertical scrollbar value",
                    "optional": true
                },
                {
                    "name": "left",
                    "dataType": "number",
                    "description": "horizontal scrollbar value",
                    "optional": true
                }
            ],
            "customExample": {
                "customCode": "&lt;template>\n  &lt;JqxTreeGrid ref=\"myTreeGrid\"\n         :source=\"source\" :columns=\"columns\" :height=\"100\"/>\n&lt;/template>\n\n&lt;script>\n  import JqxTreeGrid from 'jqwidgets-scripts/jqwidgets-vue/vue_jqxtreegrid.vue';\n\n  export default {\n    components: {\n      JqxTreeGrid\n    },\n    data: function () {\n      return {\n        source: new jqx.dataAdapter(this.data),\n        columns: [\n          { text: 'FirstName', dataField: 'FirstName', width: 150, aggregates: ['count'] },\n          { text: 'LastName', dataField: 'LastName', width: 120 },\n          { text: 'Title', dataField: 'Title', width: 200 }\n        ]\n      }\n    },\n    beforeCreate: function () {\n      let employees = [{\n        'EmployeeID': 2,\n        'FirstName': 'Andrew',\n        'LastName': 'Fuller',\n        'Title': 'Vice President, Sales',\n        'expanded': 'true',\n        children: [{\n          'EmployeeID': 8,\n          'FirstName': 'Laura',\n          'LastName': 'Callahan',\n          'Title': 'Inside Sales Coordinator'\n        }, {\n          'EmployeeID': 5,\n          'FirstName': 'Steven',\n          'LastName': 'Buchanan',\n          'Title': 'Sales Manager',\n          'expanded': 'true',\n          children: [{\n            'EmployeeID': 6,\n            'FirstName': 'Michael',\n            'LastName': 'Suyama',\n            'Title': 'Sales Representative'\n          }, {\n            'EmployeeID': 7,\n            'FirstName': 'Robert',\n            'LastName': 'King',\n            'Title': 'Sales Representative'\n          }]\n        }]\n      }];\n      this.data = {\n        dataType: \"json\",\n        dataFields: [{ name: 'EmployeeID', type: 'number' },\n        { name: 'FirstName', type: 'string' },\n        { name: 'LastName', type: 'string' },\n        { name: 'Title', type: 'string' },\n        { name: 'children', type: 'array' },\n        { name: 'expanded', type: 'bool' }],\n        hierarchy: { root: 'children' },\n        id: 'EmployeeID',\n        localData: employees\n      };\n    },\n    mounted: function () {\n      this.$refs.myTreeGrid.scrollOffset(40, 0);\n    }\n  }\n&lt;/script>"
            }
        },
        {
            "name": "setColumnProperty",
            "description": "<P>Sets a property of a column. See the <CODE>columns</CODE> property for more information. </P>\n<H4>Code example </H4>\n<P>Invoke the <CODE>setColumnProperty</CODE> method. </P>\n<PRE><CODE>$(\"#treeGrid\").jqxTreeGrid('setColumnProperty', 'firstName', 'width', 200);</CODE></PRE>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/F7UMz/",
            "exampleDescription": "Invoke the setColumnProperty method of the jqxTreeGrid.",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "dataField",
                    "dataType": "string",
                    "description": "",
                    "optional": false
                },
                {
                    "name": "propertyName",
                    "dataType": "string",
                    "description": "",
                    "optional": false
                },
                {
                    "name": "propertyValue",
                    "dataType": "object",
                    "ts_dataType": "any",
                    "description": "",
                    "optional": false
                }
            ],
            "exampleInit": {
                "args": [ "'FirstName'", "'text'", "'New Text'" ]
            }
        },
        {
            "name": "showColumn",
            "description": "<P>Shows a column. </P>\n<H4>Code example </H4>\n<P>Invoke the <CODE>showColumn</CODE> method. </P>\n<PRE><CODE>$(\"#treeGrid\").jqxTreeGrid('showColumn', 'firstName');</CODE></PRE>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/x7Cdm/",
            "exampleDescription": "Invoke the showColumn method of the jqxTreeGrid.",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "dataField",
                    "dataType": "string",
                    "description": "",
                    "optional": false
                }
            ],
            "customExample": {
                "customCode": "&lt;template>\n  &lt;div>\n    &lt;JqxTreeGrid ref=\"myTreeGrid\"\n           :source=\"source\" :columns=\"columns\" />\n    &lt;JqxButton style=\"width: 200px\" @click=\"showColumn()\">Show hidden column&lt;/JqxButton>\n  &lt;/div>\n&lt;/template>\n\n&lt;script>\n  import JqxTreeGrid from 'jqwidgets-scripts/jqwidgets-vue/vue_jqxtreegrid.vue';\n  import JqxButton from 'jqwidgets-scripts/jqwidgets-vue/vue_jqxbuttons.vue';\n\n  export default {\n    components: {\n      JqxTreeGrid,\n      JqxButton\n    },\n    data: function () {\n      return {\n        source: new jqx.dataAdapter(this.data),\n        columns: [\n          { text: 'FirstName', hidden: true, dataField: 'FirstName', width: 150, aggregates: ['count'] },\n          { text: 'LastName', dataField: 'LastName', width: 120 },\n          { text: 'Title', dataField: 'Title', width: 200 }\n        ]\n      }\n    },\n    beforeCreate: function () {\n      let employees = [{\n        'EmployeeID': 2,\n        'FirstName': 'Andrew',\n        'LastName': 'Fuller',\n        'Title': 'Vice President, Sales',\n        'expanded': 'true',\n        children: [{\n          'EmployeeID': 8,\n          'FirstName': 'Laura',\n          'LastName': 'Callahan',\n          'Title': 'Inside Sales Coordinator'\n        }, {\n          'EmployeeID': 5,\n          'FirstName': 'Steven',\n          'LastName': 'Buchanan',\n          'Title': 'Sales Manager',\n          'expanded': 'true',\n          children: [{\n            'EmployeeID': 6,\n            'FirstName': 'Michael',\n            'LastName': 'Suyama',\n            'Title': 'Sales Representative'\n          }, {\n            'EmployeeID': 7,\n            'FirstName': 'Robert',\n            'LastName': 'King',\n            'Title': 'Sales Representative'\n          }]\n        }]\n      }];\n      this.data = {\n        dataType: \"json\",\n        dataFields: [{ name: 'EmployeeID', type: 'number' },\n        { name: 'FirstName', type: 'string' },\n        { name: 'LastName', type: 'string' },\n        { name: 'Title', type: 'string' },\n        { name: 'children', type: 'array' },\n        { name: 'expanded', type: 'bool' }],\n        hierarchy: { root: 'children' },\n        id: 'EmployeeID',\n        localData: employees\n      };\n    },\n    methods: {\n      showColumn: function () {\n        this.$refs.myTreeGrid.showColumn('FirstName');\n      }\n    }\n  }\n&lt;/script>"
            }
        },
        {
            "name": "selectRow",
            "description": "<P>Selects a row. </P>\n<H4>Code example </H4>\n<P>Invoke the <CODE>selectRow</CODE> method. </P>\n<PRE><CODE>$(\"#treeGrid\").jqxTreeGrid('selectRow', 'ALFKI');</CODE></PRE>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/24RfH/",
            "exampleDescription": "Invoke the selectRow method of the jqxTreeGrid.",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "rowId",
                    "dataType": "string",
                    "ts_dataType": "string | number | Array<number | string>",
                    "description": "Unique ID which identifies the row",
                    "optional": false
                }
            ],
            "exampleInit": {
                "args": [ "2" ]
            }
        },
        {
            "name": "setCellValue",
            "description": "<P>Sets a value of a cell. </P>\n<H4>Code example </H4>\n<P>Invoke the <CODE>setCellValue</CODE> method. </P>\n<PRE><CODE>$(\"#treeGrid\").jqxTreeGrid('setCellValue', 'ALFKI', 'firstName', 'New Value');</CODE></PRE>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/ycsY2/",
            "exampleDescription": "Invoke the setCellValue method of the jqxTreeGrid.",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "rowId",
                    "dataType": "string",
                    "description": "",
                    "optional": false
                },
                {
                    "name": "dataField",
                    "dataType": "string",
                    "description": "",
                    "optional": false
                },
                {
                    "name": "cellValue",
                    "dataType": "object",
                    "ts_dataType": "any",
                    "description": "",
                    "optional": false
                }
            ],
            "exampleInit": {
                "args": [ "2", "'FirstName'", "'New Value'" ]
            }
        },
        {
            "name": "sortBy",
            "description": "<P>Sorts a column, if <CODE>sortable</CODE> is set to true. </P>\n<H4>Code example </H4>\n<P>Invoke the <CODE>sortBy</CODE> method. </P>\n<PRE><CODE>$(\"#treeGrid\").jqxTreeGrid('sortBy', 'firstName', 'asc');</CODE></PRE>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/TK4LJ/",
            "exampleDescription": "Invoke the sortBy method of the jqxTreeGrid.",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "dataField",
                    "dataType": "string",
                    "ts_dataType": "number | string",
                    "description": "",
                    "optional": false
                },
                {
                    "name": "sortOrder",
                    "dataType": "string",
                    "ts_dataType": "'asc' | 'desc' | null",
                    "description": "'asc', 'desc' or null",
                    "optional": true
                }
            ],
            "exampleInit": {
                "args": [ "'FirstName'", "'asc'" ]
            }
        },
        {
            "name": "updating",
            "description": "<P>Gets a boolean value which determines whether jqxTreeGrid is in update state i.e the <CODE>beginUpdate</CODE> method was called and the <CODE>endUpdate</CODE> method is not called yet. </P>\n<H4>Code example </H4>\n<P>Invoke the <CODE>updating</CODE> method. </P>\n<PRE><CODE>var isUpdating = $(\"#treeGrid\").jqxTreeGrid('updating');</CODE></PRE>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/ykY69/",
            "exampleDescription": "Invoke the updating method of the jqxTreeGrid.",
            "returnDataType": "boolean",
            "arguments": [
                {
                    "name": "None",
                    "dataType": null,
                    "description": "",
                    "optional": false
                }
            ]
        },
        {
            "name": "updateBoundData",
            "description": "<P>Performs a data bind and updates jqxTreeGrid with the new data. </P>\n<H4>Code example </H4>\n<P>Invoke the <CODE>updateBoundData</CODE> method. </P>\n<PRE><CODE>$(\"#treeGrid\").jqxTreeGrid('updateBoundData');</CODE></PRE>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/7J2qP/",
            "exampleDescription": "Invoke the updateBoundData method of the jqxTreeGrid.",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "None",
                    "dataType": null,
                    "description": "",
                    "optional": false
                }
            ]
        },
        {
            "name": "unselectRow",
            "description": "<P>Unselects a row. </P>\n<H4>Code example </H4>\n<P>Invoke the <CODE>unselectRow</CODE> method. </P>\n<PRE><CODE>$(\"#treeGrid\").jqxTreeGrid('unselectRow', 'ALFKI');</CODE></PRE>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/R7HpR/",
            "exampleDescription": "Invoke the unselectRow method of the jqxTreeGrid.",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "rowId",
                    "dataType": "string",
                    "ts_dataType": "string | number | Array<number | string>",
                    "description": "Unique ID which identifies the row",
                    "optional": false
                }
            ],
            "exampleInit": {
                "args": [ "2" ]
            }
        },
        {
            "name": "uncheckRow",
            "description": "<P>Unchecks a row when <CODE>checkboxes</CODE> is set to true. </P>\n<H4>Code example </H4>\n<P>Invoke the <CODE>uncheckRow</CODE> method. </P>\n<PRE><CODE>$(\"#treeGrid\").jqxTreeGrid('uncheckRow', 'ALFKI');</CODE></PRE>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/CphBU/",
            "exampleDescription": "Invoke the uncheckRow method of the jqxTreeGrid.",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "rowId",
                    "dataType": "string",
                    "description": "Unique ID which identifies the row",
                    "optional": false
                }
            ],
            "exampleInit": {
                "args": [ "2" ]
            },
            "extraData": {
                "checkboxes": "true"
            }
        },
        {
            "name": "updateRow",
            "description": "<P>Updates the row's data. For synchronization with a server, please look also the jqxDataAdapter plug-in's help documentation. </P>\n<H4>Code example </H4>\n<P>Invoke the <CODE>updateRow</CODE> method. </P>\n<PRE><CODE>$(\"#treeGrid\").jqxTreeGrid('updateRow', 'ALFKI', {firstName: \"New First Name\", lastName: \"New Last Name\"});</CODE></PRE>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/hgwan/",
            "exampleDescription": "Invoke the updateRow method of the jqxTreeGrid.",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "rowId",
                    "dataType": "number",
                    "ts_dataType": "number | string",
                    "description": "Unique ID which identifies the row",
                    "optional": false
                },
                {
                    "name": "data",
                    "dataType": "object",
                    "ts_dataType": "any",
                    "description": "",
                    "optional": false
                }
            ],
            "exampleInit": {
                "args": [ "2", "{FirstName: 'Nancy', LastName: 'Davolio'}" ]
            }
        },
        {
            "name": "unlockRow",
            "description": "<P>Unlocks a row. </P>\n<H4>Code example </H4>\n<P>Invoke the <CODE>unlockRow</CODE> method. </P>\n<PRE><CODE>$(\"#treeGrid\").jqxTreeGrid('unlockRow', 'ALFKI');</CODE></PRE>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/rQ7jS/",
            "exampleDescription": "Invoke the unlockRow method of the jqxTreeGrid.",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "rowId",
                    "dataType": "string",
                    "ts_dataType": "string | number | Array<number | string>",
                    "description": "Unique ID which identifies the row",
                    "optional": false
                }
            ],
            "exampleInit": {
                "args": [ "2" ]
            }
        }
    ]
}