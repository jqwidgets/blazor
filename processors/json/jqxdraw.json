{
    "widget": {
        "name": "jqxDraw",
        "description": "Drawing SVG, HTML5 and VML programming interface.",
        "angular2": {
            "name": "jqxDrawComponent",
            "selector": "jqxDraw"
        }
    },
    "dataTypes": [
        {
            "name": "DrawRenderEngine",
            "ts_dataType": "enum",
            "enumOptions": [ "SVG", "VML", "HTML5" ]
        }
    ],
    "exampledInitExtraData": {
        "properties": "",
        "beforeCreate": "",
        "mounted": "const size = this.$refs.myDraw.getSize();\n      const borderElement = this.$refs.myDraw.rect(0, 0, size.width - 680, size.height, { stroke: '#777777', fill: 'transparent' });\n      const textElement = this.$refs.myDraw.text('Drawing shapes', 35, 20, undefined, undefined, 0, { 'class': 'largeText', fill: 'yellow', stroke: 'orange' }, false, 'center', 'center', 'centermiddle');\n      const circleElement = this.$refs.myDraw.circle(85, 150, 50, {});\n      this.$refs.myDraw.attr(circleElement, { fill: 'lightblue', stroke: 'darkblue' });\n      const circleUp = this.$refs.myDraw.circle(50, 450, 30, { fill: '#DEDEDE', stroke: '#777777' });\n      const pathUp = this.$refs.myDraw.path('M30 460 L 70 460 L50 430 Z', { fill: 'transparent', stroke: '#777777', 'stroke-width': 1 });\n      const circleDown = this.$refs.myDraw.circle(120, 450, 30, { fill: '#DEDEDE', stroke: '#777777' });\n      const pathDown = this.$refs.myDraw.path('M100 440 L 140 440 L120 470 Z', { fill: 'transparent', stroke: '#777777', 'stroke-width': 1 });\n      this.$refs.myDraw.text('Click these buttons:', 20, 390);\n      const moveCircle = moveUp => { \n        const circleY = parseInt(this.$refs.myDraw.getAttr(circleElement, 'cy')); \n        this.$refs.myDraw.attr(circleElement, { cy: circleY + (moveUp ? -10 : 10) }); \n      }\n      this.$refs.myDraw.on(circleUp, 'click', () => { moveCircle(true); }); \n      this.$refs.myDraw.on(pathUp, 'click', () => { moveCircle(true); }); \n      this.$refs.myDraw.on(circleDown, 'click', () => { moveCircle(false); }); \n      this.$refs.myDraw.on(pathDown, 'click', () => { moveCircle(false); });",
        "methods": ""
    },
    "properties": [
        {
            "name": "renderEngine",
            "defaultValue": "''",
            "description": "<P>Determines the rendering engine used to display the chart. Possible values are 'SVG', 'VML' and 'HTML5'. When the property is not set jqxDraw will automatically select an optimal rendering engine depending on the browser capabilities. </P>\n\r\n<H4>Code examples</H4>\n<PRE><CODE>    \r\n    $('#jqxDraw').jqxDraw({renderEngine: 'HTML5'});\r\n    $('#jqxDraw').jqxDraw('refresh');\r\n</CODE></PRE>",
            "example": "",
            "exampleURL": "http://jsfiddle.net/jqwidgets/F74Sk/",
            "exampleDescription": "renderEngine is set to 'HTML5'",
            "dataType": "string",
            "ts_dataType": "enum:DrawRenderEngine",
            "exampleInit": {
                "renderEngine": "''"
            }
        }
    ],
    "events": [],
    "methods": [
        {
            "name": "attr",
            "description": "<P>Sets attributes of an element</P>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/m9mzY/",
            "exampleDescription": "invoke the 'attr' method",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "element",
                    "dataType": "object",
                    "ts_dataType": "any",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "attributes",
                    "dataType": "object",
                    "ts_dataType": "any",
                    "description": "",
                    "optional": true
                }
            ],
            "exampleInit": {
                "args": [ "textElement", " { fill: 'lightblue', stroke: 'darkblue' }" ]
            }
        },
        {
            "name": "circle",
            "description": "<P>Creates a circle element</P>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/xv5u8/",
            "exampleDescription": "invoke the 'circle' method",
            "returnDataType": "object",
            "ts_returnDataType": "any",
            "arguments": [
                {
                    "name": "cx",
                    "dataType": "number",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "cy",
                    "dataType": "number",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "r",
                    "dataType": "number",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "attributes",
                    "dataType": "object",
                    "ts_dataType": "any",
                    "description": "",
                    "optional": true
                }
            ],
            "exampleInit": {
                "args": [ "85", "300", " 50", " {}" ]
            }
        },
        {
            "name": "clear",
            "description": "<P>Clears the content of the jqxDraw widget</P>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/raMw9/",
            "exampleDescription": "invoke the 'clear' method",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "None",
                    "dataType": null,
                    "description": "",
                    "optional": true
                }
            ]
        },
        {
            "name": "getAttr",
            "description": "<P>Gets element's attribute</P>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/bd64X/",
            "exampleDescription": "invoke the 'getAttr' method",
            "returnDataType": "string",
            "arguments": [
                {
                    "name": "element",
                    "dataType": "object",
                    "ts_dataType": "any",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "attributes",
                    "dataType": "object",
                    "ts_dataType": "any",
                    "description": "",
                    "optional": true
                }
            ],
            "exampleInit": {
                "args": [ "circleElement", " 'fill'" ]
            }
        },
        {
            "name": "getSize",
            "description": "",
            "exampleURL": "",
            "exampleDescription": "",
            "returnDataType": "object",
            "ts_returnDataType": "any",
            "arguments": [
                {
                    "name": "None",
                    "dataType": null,
                    "description": "",
                    "optional": true
                }
            ]
        },
        {
            "name": "line",
            "description": "<P>Creates a line element</P>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/N2PHz/",
            "exampleDescription": "invoke the 'line' method",
            "returnDataType": "object",
            "ts_returnDataType": "any",
            "arguments": [
                {
                    "name": "x1",
                    "dataType": "number",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "y1",
                    "dataType": "number",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "x2",
                    "dataType": "number",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "y2",
                    "dataType": "number",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "attributes",
                    "dataType": "object",
                    "ts_dataType": "any",
                    "description": "",
                    "optional": true
                }
            ],
            "exampleInit": {
                "args": [ "85", "100", "85", "200", " { stroke: 'blue', 'stroke-width': 6 }" ]
            }
        },
        {
            "name": "measureText",
            "description": "<P>Estimates the size of a text element</P>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/7Vvj8/",
            "exampleDescription": "invoke the 'measureText' method",
            "returnDataType": "object",
            "ts_returnDataType": "any",
            "arguments": [
                {
                    "name": "text",
                    "dataType": "string",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "angle",
                    "dataType": "number",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "attributes",
                    "dataType": "object",
                    "ts_dataType": "any",
                    "description": "",
                    "optional": true
                }
            ],
            "exampleInit": {
                "args": [ "'My text'", " 45", " { 'class': 'smallText' }" ]
            }
        },
        {
            "name": "on",
            "description": "<P>Adds an event handler to an element</P>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/5yRPa/",
            "exampleDescription": "invoke the 'on' method",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "element",
                    "dataType": "object",
                    "ts_dataType": "any",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "event",
                    "dataType": "string",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "func",
                    "dataType": "object",
                    "ts_dataType": "any",
                    "description": "",
                    "optional": true
                }
            ],
            "exampleInit": {
                "args": [ "circleElement", " 'click'", " () => { alert('Clicked The Big Circle!') }" ]
            }
        },
        {
            "name": "off",
            "description": "<P>Removes an event handler from an element</P>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/3LXyU/",
            "exampleDescription": "invoke the 'off' method",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "element",
                    "dataType": "object",
                    "ts_dataType": "any",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "event",
                    "dataType": "string",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "func",
                    "dataType": "object",
                    "ts_dataType": "any",
                    "description": "",
                    "optional": true
                }
            ],
            "exampleInit": {
                "args": [ "pathDown", "'click'", "moveCircle(false)" ]
            }
        },
        {
            "name": "path",
            "description": "<P>Creates a path element</P>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/j4d2Q/",
            "exampleDescription": "invoke the 'path' method",
            "returnDataType": "object",
            "ts_returnDataType": "any",
            "arguments": [
                {
                    "name": "path",
                    "dataType": "string",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "attributes",
                    "dataType": "object",
                    "ts_dataType": "any",
                    "description": "",
                    "optional": true
                }
            ],
            "exampleInit": {
                "args": [ "'M10 160 L 160 160 L80 320 Z'", " { fill: 'transparent', stroke: 'blue', 'stroke-width': 1 }" ]
            }
        },
        {
            "name": "pieslice",
            "description": "<P>Creates a pie slice element</P>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/N4fLM/",
            "exampleDescription": "invoke the 'pieslice' method",
            "returnDataType": "object",
            "ts_returnDataType": "any",
            "arguments": [
                {
                    "name": "cx",
                    "dataType": "number",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "xy",
                    "dataType": "number",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "innerRadius",
                    "dataType": "number",
                    "ts_dataType": "any",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "outerRadius",
                    "dataType": "number",
                    "ts_dataType": "any",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "fromAngle",
                    "dataType": "number",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "endAngle",
                    "dataType": "number",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "centerOffset",
                    "dataType": "number",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "attributes",
                    "dataType": "object",
                    "ts_dataType": "any",
                    "description": "",
                    "optional": true
                }
            ],
            "exampleInit": {
                "args": [ "50", " 350", " 50", " 100", " 15", " 95", " 0", " {fill: 'yellow'}" ]
            }
        },
        {
            "name": "refresh",
            "description": "<P>Refreshes / re-draws the content of the jqxDraw widget</P>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/XN8Xw/",
            "exampleDescription": "invoke the 'refresh' method",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "None",
                    "dataType": null,
                    "description": "",
                    "optional": true
                }
            ]
        },
        {
            "name": "rect",
            "description": "<P>Creates a rectangle element</P>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/tXQrf/",
            "exampleDescription": "invoke the 'rect' method",
            "returnDataType": "object",
            "ts_returnDataType": "any",
            "arguments": [
                {
                    "name": "x",
                    "dataType": "number",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "y",
                    "dataType": "number",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "width",
                    "dataType": "number",
                    "ts_dataType": "number | string",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "height",
                    "dataType": "number",
                    "ts_dataType": "number | string",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "attributes",
                    "dataType": "object",
                    "ts_dataType": "any",
                    "description": "",
                    "optional": true
                }
            ],
            "exampleInit": {
                "args": [ "20", "280", "130", "50", " { stroke: 'blue', fill: 'transparent' }" ]
            }
        },
        {
            "name": "saveAsJPEG",
            "description": "<P>Exports the content as JPEG image</P>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/y4DzZ/",
            "exampleDescription": "invoke the 'saveAsJPEG' method",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "image",
                    "dataType": "string",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "url",
                    "dataType": "string",
                    "description": "",
                    "optional": true
                }
            ],
            "exampleInit": {
                "args": [ "'myImage.jpeg'", " 'http://<my domain>/export_server/server.php'" ]
            }
        },
        {
            "name": "saveAsPNG",
            "description": "<P>Exports the chart's content as PNG image</P>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/Mx2s7/",
            "exampleDescription": "invoke the 'saveAsPNG' method",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "image",
                    "dataType": "string",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "url",
                    "dataType": "string",
                    "description": "",
                    "optional": true
                }
            ],
            "exampleInit": {
                "args": [ "'myImage.png'", " 'http://<my domain>/export_server/server.php'" ]
            }
        },
        {
            "name": "text",
            "description": "<P>Creates a text element</P>",
            "exampleURL": "http://jsfiddle.net/jqwidgets/KGbwb/",
            "exampleDescription": "invoke the 'text' method",
            "returnDataType": "object",
            "ts_returnDataType": "any",
            "arguments": [
                {
                    "name": "text",
                    "dataType": "string",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "x",
                    "dataType": "number",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "y",
                    "dataType": "number",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "width",
                    "dataType": "number",
                    "ts_dataType": "number | string",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "height",
                    "dataType": "number",
                    "ts_dataType": "number | string",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "angle",
                    "dataType": "number",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "attributes",
                    "dataType": "Array",
                    "ts_dataType": "any",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "clip",
                    "dataType": "boolean",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "halign",
                    "dataType": "string",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "valign",
                    "dataType": "string",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "rotateAround",
                    "dataType": "string",
                    "description": "",
                    "optional": true
                }
            ],
            "exampleInit": {
                "args": [ "'Some More Text!'", " 30", " 280", " undefined", " undefined", " 0", " { 'class': 'largeText', fill: 'blue', stroke: 'blue' }", " false", " 'center'", " 'center'", " 'centermiddle'" ]
            }
        }
    ]
}