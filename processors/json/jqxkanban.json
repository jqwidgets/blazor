{
    "widget": {
        "name": "jqxKanban",
        "description": "Can be used to implement the kanban method for a project. ",
        "angular2": {
            "name": "jqxKanbanComponent",
            "selector": "jqxKanban"
        }
    },
    "dataTypes": [
        {
            "name": "KanbanCollapseDirection",
            "ts_dataType": "enum",
            "enumOptions": [ "left", "right" ]
        },
        {
            "name": "KanbanColumns",
            "ts_dataType": "interface",
            "properties": [
                {
                    "name": "text",
                    "dataType": "string",
                    "optional": "true",
                    "displayName": "Text",
                    "defaultValue": ""
                },
                {
                    "name": "dataField",
                    "dataType": "string",
                    "optional": "true",
                    "displayName": "Data field",
                    "defaultValue": ""
                },
                {
                    "name": "maxItems",
                    "dataType": "number",
                    "optional": "true",
                    "displayName": "Max items",
                    "defaultValue": ""
                },
                {
                    "name": "collapsible",
                    "dataType": "boolean",
                    "optional": "true",
                    "displayName": "Collapsible",
                    "defaultValue": ""
                },
                {
                    "name": "collapseDirection",
                    "ts_dataType": "enum:KanbanCollapseDirection",
                    "optional": "true",
                    "displayName": "Collapse direction",
                    "defaultValue": ""
                },
                {
                    "name": "headerElement",
                    "ts_dataType": "any",
                    "optional": "true",
                    "displayName": "Header element",
                    "defaultValue": ""
                },
                {
                    "name": "collapsedHeaderElement",
                    "ts_dataType": "any",
                    "optional": "true",
                    "displayName": "Collapsed header element",
                    "defaultValue": ""
                },
                {
                    "name": "iconClassName",
                    "dataType": "string",
                    "optional": "true",
                    "displayName": "Icon class name",
                    "defaultValue": ""
                }
            ]
        },
        {
            "name": "KanbanColumnRenderer",
            "ts_dataType": "interface",
            "properties": [
                {
                    "name": "element",
                    "dataType": "any",
                    "optional": "true",
                    "displayName": "Element",
                    "defaultValue": ""
                },
                {
                    "name": "collapsedElement",
                    "dataType": "any",
                    "optional": "true",
                    "displayName": "CollapsedElement",
                    "defaultValue": ""
                },
                {
                    "name": "column",
                    "dataType": "any",
                    "optional": "true",
                    "displayName": "Column",
                    "defaultValue": ""
                }
            ]
        },
        {
            "name": "KanbanItemRenderer",
            "ts_dataType": "interface",
            "properties": [
                {
                    "name": "element",
                    "dataType": "any",
                    "optional": "true",
                    "displayName": "Element",
                    "defaultValue": ""
                },
                {
                    "name": "item",
                    "dataType": "any",
                    "optional": "true",
                    "displayName": "Item",
                    "defaultValue": ""
                },
                {
                    "name": "resource",
                    "dataType": "any",
                    "optional": "true",
                    "displayName": "Resource",
                    "defaultValue": ""
                }
            ]
        },
        {
            "name": "KanbanSource",
            "ts_dataType": "interface",
            "properties": [
                {
                    "name": "id",
                    "dataType": "number",
                    "optional": "true",
                    "displayName": "Id",
                    "defaultValue": ""
                },
                {
                    "name": "status",
                    "dataType": "string",
                    "optional": "true",
                    "displayName": "Status",
                    "defaultValue": ""
                },
                {
                    "name": "text",
                    "dataType": "string",
                    "optional": "true",
                    "displayName": "Text",
                    "defaultValue": ""
                },
                {
                    "name": "content",
                    "ts_dataType": "any",
                    "optional": "true",
                    "displayName": "Content",
                    "defaultValue": ""
                },
                {
                    "name": "tags",
                    "dataType": "string",
                    "optional": "true",
                    "displayName": "Tags",
                    "defaultValue": ""
                },
                {
                    "name": "color",
                    "dataType": "string",
                    "optional": "true",
                    "displayName": "Color",
                    "defaultValue": ""
                },
                {
                    "name": "resourceId",
                    "ts_dataType": "any",
                    "optional": "true",
                    "displayName": "Resource id",
                    "defaultValue": ""
                },
                {
                    "name": "className",
                    "dataType": "string",
                    "optional": "true",
                    "displayName": "Class name",
                    "defaultValue": ""
                }
            ]
        },
        {
            "name": "KanbanUpdateItem",
            "ts_dataType": "interface",
            "properties": [
                {
                    "name": "status",
                    "dataType": "string",
                    "optional": "true",
                    "displayName": "Status",
                    "defaultValue": ""
                },
                {
                    "name": "text",
                    "dataType": "string",
                    "optional": "true",
                    "displayName": "Text",
                    "defaultValue": ""
                },
                {
                    "name": "content",
                    "ts_dataType": "any",
                    "optional": "true",
                    "displayName": "Content",
                    "defaultValue": ""
                },
                {
                    "name": "tags",
                    "dataType": "string",
                    "optional": "true",
                    "displayName": "Tags",
                    "defaultValue": ""
                },
                {
                    "name": "color",
                    "dataType": "string",
                    "optional": "true",
                    "displayName": "Color",
                    "defaultValue": ""
                },
                {
                    "name": "resourceId",
                    "ts_dataType": "any",
                    "optional": "true",
                    "displayName": "Resource id",
                    "defaultValue": ""
                },
                {
                    "name": "className",
                    "dataType": "string",
                    "optional": "true",
                    "displayName": "Class name",
                    "defaultValue": ""
                }
            ]
        }
    ],
    "exampleElementsInit": {
        "columns": "columns",
        "source": "adapter",
        "resources": "resources"
    },
    "exampleInit": {
        "width": "600",
        "height": "500",
        "columns": "columns",
        "source": "dataAdapter",
        "resources": "resources"
    },
    "exampledInitExtraData": {
        "properties": "dataAdapter: new jqx.dataAdapter(this.source),\n        columns: [\n          { text: \"Backlog\", dataField: \"new\", maxItems: 5 },\n          { text: \"In Progress\", dataField: \"work\", maxItems: 5 },\n          { text: \"Done\", dataField: \"done\", maxItems: 5, collapseDirection: \"right\" }\n        ],\n        resources: new jqx.dataAdapter(this.resourcesSource)",
        "beforeCreate": "const fields = [\n        { name: 'id', type: 'string' },\n        { name: 'status', map: 'state', type: 'string' },\n        { name: 'text', map: 'label', type: 'string' },\n        { name: 'tags', type: 'string' },\n        { name: 'color', map: 'hex', type: 'string' },\n        { name: 'resourceId', type: 'number' }\n      ];\n      this.source = {\n        localData: [\n          { id: '1161', state: 'new', label: 'Combine Orders', tags: 'orders, combine', hex: '#5dc3f0', resourceId: 3 },\n          { id: '1645', state: 'work', label: 'Change Billing Address', tags: 'billing', hex: '#f19b60', resourceId: 1 },\n          { id: '9213', state: 'new', label: 'One item added to the cart', tags: 'cart', hex: '#5dc3f0', resourceId: 3 },\n          { id: '6546', state: 'done', label: 'Edit Item Price', tags: 'price, edit', hex: '#5dc3f0', resourceId: 4 },\n          { id: '9034', state: 'new', label: 'Login 404 issue', tags: 'issue login', hex: '#6bbd49' }\n        ],\n        dataType: 'array',\n        dataFields: fields\n      }; \n      this.resourcesSource = {\n        localData: [\n          { id: 0, name: 'No name', image: 'https://www.jqwidgets.com/jquery-widgets-demo/jqwidgets/styles/images/common.png', common: true },\n          { id: 1, name: 'Andrew Fuller', image: 'https://www.jqwidgets.com/jquery-widgets-demo/images/andrew.png' },\n          { id: 2, name: 'Janet Leverling', image: 'https://www.jqwidgets.com/jquery-widgets-demo/images/janet.png' },\n          { id: 3, name: 'Steven Buchanan', image: 'https://www.jqwidgets.com/jquery-widgets-demo/images/steven.png' },\n          { id: 4, name: 'Nancy Davolio', image: 'https://www.jqwidgets.com/jquery-widgets-demo/images/nancy.png' },\n          { id: 5, name: 'Michael Buchanan', image: 'https://www.jqwidgets.com/jquery-widgets-demo/images/Michael.png' },\n          { id: 6, name: 'Margaret Buchanan', image: 'https://www.jqwidgets.com/jquery-widgets-demo/images/margaret.png' },\n          { id: 7, name: 'Robert Buchanan', image: 'https://www.jqwidgets.com/jquery-widgets-demo/images/robert.png' },\n          { id: 8, name: 'Laura Buchanan', image: 'https://www.jqwidgets.com/jquery-widgets-demo/images/Laura.png' },\n          { id: 9, name: 'Laura Buchanan', image: 'https://www.jqwidgets.com/jquery-widgets-demo/images/Anne.png' }\n        ],\n        dataType: 'array',\n        dataFields: [\n          { name: 'id', type: 'number' },\n          { name: 'name', type: 'string' },\n          { name: 'image', type: 'string' },\n          { name: 'common', type: 'boolean' }\n        ]\n      };",
        "mounted": "",
        "methods": ""
    },
    "properties": [
        {
            "name": "columnRenderer",
            "defaultValue": "null",
            "description": "<P>Sets or gets a custom rendering function for jqxKanban's columns. </P>\n\r\n<H4>Code examples </H4>\n<PRE><CODE>\r\n$('#jqxKanban').jqxKanban({\r\n    resources: resourcesAdapterFunc(),\r\n    source: dataAdapter2,\r\n    columns: [\r\n        { text: \"Ready\", dataField: \"ready\", maxItems: 10 }\r\n    ],\r\n    // render column headers.\r\n    columnRenderer: function (element, collapsedElement, column) {\r\n        var columnItems = $(\"#kanban2\").jqxKanban('getColumnItems', column.dataField).length;\r\n        // update header's status.\r\n        element.find(\".jqx-kanban-column-header-status\").html(\" (\" + columnItems + \"/\" + column.maxItems + \")\");\r\n        // update collapsed header's status.\r\n        collapsedElement.find(\".jqx-kanban-column-header-status\").html(\" (\" + columnItems + \"/\" + column.maxItems + \")\");\r\n    }\r\n});                  \r\n                        </CODE></PRE>",
            "example": "",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqwidgets-kanban-columnrenderer-property",
            "exampleDescription": "columnRenderer is set to a custom function.",
            "dataType": "Function",
            "ts_dataType": "(element?: KanbanColumnRenderer['element'], collapsedElement?: KanbanColumnRenderer['collapsedElement'], column?: KanbanColumnRenderer['column']) => void",
            "exampleInit": {
                "columnRenderer": "columnRenderer",
                "exampleData": "var columnItems = this.$refs.myKanban.getColumnItems(column.dataField).length;\n        /* update header's status.*/\n        element.find(\".jqx-kanban-column-header-status\").html(\" (\" + columnItems + \"/\" + column.maxItems + \")\");\n        /* update collapsed header's status.*/\n        collapsedElement.find(\".jqx-kanban-column-header-status\").html(\" (\" + columnItems + \"/\" + column.maxItems + \")\");"
            }
        },
        {
            "name": "columns",
            "defaultValue": "null",
            "description": "<P>Sets or gets the jqxKanban columns. </P>\n\r\n<H4>Code examples </H4>\n<PRE><CODE>\r\n$('#jqxKanban').jqxKanban({\r\n    width: 600,\r\n    height: 500,\r\n    resources: resourcesAdapterFunc(),\r\n    source: dataAdapter,\r\n    columns: [\r\n        { text: \"Backlog\", dataField: \"new\", maxItems: 5 },\r\n        { text: \"In Progress\", dataField: \"work\", maxItems: 5 },\r\n        { text: \"Done\", dataField: \"done\", maxItems: 5, collapseDirection: \"right\" }\r\n    ]\r\n});                    \r\n                        </CODE></PRE>\n\r\n<UL><LI>text - sets the text in column's header. \r\n<LI>dataField - sets the column datafield. \r\n<LI>maxItems - sets maximum number of items per column. \r\n<LI>collapsible - determines whether the column can be collapsed or not. \r\n<LI>collapseDirection - determines the column's collapse direction - \"left\" or \"right\". \r\n<LI>headerElement - gets the header element of the column after the widget is created. \r\n<LI>collapsedHeaderElement - gets the collapsed header element of the column after the widget is created. \r\n<LI>iconClassName - sets the class name of the header element's icon. </LI></UL>",
            "example": "",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqwidgets-kanban-template",
            "exampleDescription": "columns is set to columns array.",
            "dataType": "Array",
            "ts_dataType": "Array<KanbanColumns>"
        },
        {
            "name": "connectWith",
            "defaultValue": "null",
            "description": "<P>Sets a connection to another jqxKanban widget. As a selector is used the id of the widget. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>connectWith</CODE> property. </P>\n<PRE><CODE>$('#jqxKanban').jqxKanban({connectWith: '#jqxKanban2'});</CODE></PRE>\n\r\n<P>Get the <CODE>connectWith</CODE> property. </P>\n<PRE><CODE>var connectWith = $('#jqxKanban').jqxKanban('connectWith'); </CODE></PRE>",
            "example": "",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqwidgets-kanban-connectwith-property",
            "exampleDescription": "connectWith is set to '#jqxKanban2'",
            "dataType": "string",
            "exampleInit": {
                "connectWith": "#jqxKanban2"
            },
            "customExample": {
                "codeType": "custom",
                "code": "&lt;template>\n    &lt;div>\n        &lt;div id=\"outerBox1\">\n            &lt;h2>Team 1&lt;/h2>\n            &lt;div id=\"kanbanBox1\">\n                &lt;JqxKanban :width=\"400\" :height=\"400\" :columns=\"kanbanColumns\" :resources=\"staff\"\n                           :source=\"kanbanSourceConnected1\" :connectWith=\"'#kanbanBox2'\">\n                &lt;/JqxKanban>\n            &lt;/div>\n        &lt;/div>\n        &lt;div id=\"outerBox2\">\n            &lt;h2>Team 2&lt;/h2>\n            &lt;div id=\"kanbanBox2\">\n                &lt;JqxKanban :width=\"400\" :height=\"400\" :columns=\"kanbanColumns\" :resources=\"staff\"\n                           :source=\"kanbanSourceConnected2\" :connectWith=\"'#kanbanBox1'\">\n                &lt;/JqxKanban>\n            &lt;/div>\n        &lt;/div>\n    &lt;/div>\n&lt;/template>\n&lt;script>\n    import JqxKanban from \"jqwidgets-scripts/jqwidgets-vue/vue_jqxkanban.vue\";\n    export default {\n        components: {\n            JqxKanban\n        },\n        data: function () {\n            return {\n                getWidth: getWidth('kanban'),\n                staff: [\n                    { id: 0, name: \"No name\", image: \"https://www.jqwidgets.com/jquery-widgets-demo/jqwidgets/styles/images/common.png\", common: true },\n                    { id: 1, name: \"Andrew Fuller\", image: \"https://www.jqwidgets.com/jquery-widgets-demo/images/andrew.png\" },\n                    { id: 2, name: \"Janet Leverling\", image: \"https://www.jqwidgets.com/jquery-widgets-demo/images/janet.png\" },\n                    { id: 3, name: \"Steven Buchanan\", image: \"https://www.jqwidgets.com/jquery-widgets-demo/images/steven.png\" }\n                ],\n                kanbanColumns: [\n                    { text: 'Backlog', dataField: 'new', access: 'none', maxItems: 5 },\n                    { text: 'In Progress', dataField: 'work', access: 'none', maxItems: 5 },\n                    { text: 'Done', dataField: 'done', access: 'none', maxItems: 5, collapseDirection: 'right' }\n                ],\n                kanbanSourceConnected1: [\n                    { id: 3, status: 'done', text: 'Combine Orders', tags: 'orders, combine', color: '#5dc3f0', resourceId: 3 },\n                    { id: 4, status: 'work', text: 'Change Billing Address', tags: 'billing', color: '#6bbd49', resourceId: 1 },\n                    { id: 5, status: 'new', text: 'One item added to the cart', tags: 'cart', color: '#5dc3f0', resourceId: 3 },\n                    { id: 6, status: 'work', text: 'Login 404 issue', tags: 'issue, login', color: '#6bbd49' }\n                ],\n                kanbanSourceConnected2: [\n                    { id: 0, status: 'new', text: 'State opened does not contain items', tags: 'state, open', color: '#5dc3f0', resourceId: 1 },\n                    { id: 1, status: 'done', text: 'Patch #2043', tags: 'patch', color: '#6bbd49', personId: 2 },\n                    { id: 2, status: 'work', text: 'Change payment method', tags: 'payment', color: '#6bbd49', resourceId: 2 }\n                ]\n            }\n        }\n    }\n&lt;/script>\n&lt;style>\n    #kanbanBox1 {\n        width: 400px;\n        height: 400px;\n        float: left;\n        padding: 2px;\n    }\n    #kanbanBox2 {\n        width: 400px;\n        height: 400px;\n        float: left;\n        padding: 2px;\n    }\n    #outerBox1 {\n        float: left;\n        padding: 5px;\n        margin: 2px;\n        background-color: #6bbd49;\n        color: #fff;\n    }\n    #outerBox2 {\n        color: #fff;\n        float: left;\n        padding: 5px;\n        margin: 2px;\n        background-color: #5dc3f0;\n    }\n&lt;/style>"
            }
        },
        {
            "name": "headerHeight",
            "defaultValue": "30",
            "description": "<P>Sets or gets the height of the jqxKanban column headers when columns are expanded. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>headerHeight</CODE> property. </P>\n<PRE><CODE>$('#jqxKanban').jqxKanban({ headerHeight: 50 }); </CODE></PRE>\n\r\n<P>Get the <CODE>autoClose</CODE> property. </P>\n<PRE><CODE>var headerHeight = $('#jqxKanban').jqxKanban('headerHeight'); </CODE></PRE>",
            "example": "",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqwidgets-kanban-header-properties",
            "exampleDescription": "headerHeight is set to 30",
            "dataType": "number",
            "ts_dataType": "number | string",
            "exampleInit": {
                "headerHeight": "50"
            }
        },
        {
            "name": "headerWidth",
            "defaultValue": "30",
            "description": "<P>Sets or gets the width of the jqxKanban column headers when columns are collapsed. </P>\n<B>Possible Values:</B>\n\r\n<H4>Code example </H4>\n\r\n<P>Set the <CODE>headerWidth</CODE> property. </P>\n<PRE><CODE>$('#jqxKanban').jqxKanban({headerWidth : 50}); </CODE></PRE>\n\r\n<P>Get the <CODE>headerWidth</CODE> property. </P>\n<PRE><CODE>var headerWidth = $('#jqxKanban').jqxKanban('headerWidth'); </CODE></PRE>",
            "example": "",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqwidgets-kanban-header-properties",
            "exampleDescription": "headerWidth is set to 50",
            "dataType": "number",
            "exampleInit": {
                "headerWidth": "50"
            }
        },
        {
            "name": "height",
            "defaultValue": "400",
            "description": "<P>Sets or gets the kanban's height. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>height</CODE> property. </P>\n<PRE><CODE>$('#jqxKanban').jqxKanban({height: 500});</CODE></PRE>\n\r\n<P>Get the <CODE>height</CODE> property. </P>\n<PRE><CODE>var height = $('#jqxKanban').jqxKanban('height');</CODE></PRE>",
            "example": "",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqwidgets-kanban-header-properties",
            "exampleDescription": "height is set to 500",
            "dataType": "string | number",
            "ts_dataType": "string | number"
        },
        {
            "name": "itemRenderer",
            "defaultValue": "null",
            "description": "<P>This function is called when an item is being rendered. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>itemRenderer</CODE> property. </P>\n<PRE><CODE>\r\n$('#kanban1').jqxKanban({\r\n    resources: resourcesAdapterFunc(),\r\n    source: dataAdapter,\r\n    itemRenderer: function(element, item, resource)\r\n    {\r\n        $(element).find(\".jqx-kanban-item-color-status\").html(resource.name);\r\n    },\r\n    columns: [\r\n        { text: \"Backlog\", iconClassName: getIconClassName(), dataField: \"new\" },\r\n        { text: \"In Progress\", iconClassName: getIconClassName(), dataField: \"work\" },\r\n        { text: \"Done\", iconClassName: getIconClassName(), dataField: \"done\" }\r\n    ]\r\n});                        \r\n                        </CODE></PRE>\n\r\n<P>Get the <CODE>ready</CODE> property. </P>\n<PRE><CODE>var ready = $('#jqxKanban').jqxKanban('ready'); </CODE></PRE>",
            "example": "",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqwidgets-kanban-item-template",
            "exampleDescription": "itemRenderer is set to 'function(){...}'",
            "dataType": "Function",
            "ts_dataType": "(element?: KanbanItemRenderer['element'], item?: KanbanItemRenderer['item'], resource?: KanbanItemRenderer['resource']) => void",
            "exampleInit": {
                "itemRenderer": "itemRenderer",
                "exampleData": "$(element).find(\".jqx-kanban-item-text\").html(\"&lt;strong>\" + resource.name + \"&lt;/strong>\");"
            }
        },
        {
            "name": "ready",
            "defaultValue": "null",
            "description": "<P>This function is called when the jqxKanban is initialized and the binding is completed. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>ready</CODE> property. </P>\n<PRE><CODE>$('#jqxKanban').jqxKanban({ ready: function(){ // Some code here. } }); </CODE></PRE>\n\r\n<P>Get the <CODE>ready</CODE> property. </P>\n<PRE><CODE>var ready = $('#jqxKanban').jqxKanban('ready'); </CODE></PRE>",
            "example": "",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqwidgets-kanban-ready-property",
            "exampleDescription": "ready is set to 'function(){...}'",
            "dataType": "Function",
            "ts_dataType": "() => void",
            "exampleInit": {
                "ready": "ready",
                "exampleData": "alert('ready');"
            }
        },
        {
            "name": "rtl",
            "defaultValue": "false",
            "description": "<P>Sets or gets a value indicating whether widget's elements are aligned to support locales using right-to-left fonts. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>rtl</CODE> property. </P>\n<PRE><CODE>$('#jqxKanban').jqxKanban({ rtl: true }); </CODE></PRE>\n\r\n<P>Get the <CODE>rtl</CODE> property. </P>\n<PRE><CODE>var rtl = $('#jqxKanban').jqxKanban('rtl'); </CODE></PRE>",
            "example": "",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqwidgets-kanban-rtl-property-1",
            "exampleDescription": "rtl is set to true",
            "dataType": "boolean",
            "exampleInit": {
                "rtl": "true"
            }
        },
        {
            "name": "source",
            "defaultValue": "null",
            "description": "<P>The source object represents a set of key/value pairs. Every set is a jqxKanban item.</P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>source</CODE> property. </P>\n<PRE><CODE>\r\nvar fields = [\r\n            { name: \"id\", type: \"string\" },\r\n            { name: \"status\", map: \"state\", type: \"string\" },\r\n            { name: \"text\", map: \"label\", type: \"string\" },\r\n            { name: \"tags\", type: \"string\" },\r\n            { name: \"color\", map: \"hex\", type: \"string\" },\r\n            { name: \"resourceId\", type: \"number\" }\r\n];\r\n\r\nvar source =\r\n    {\r\n        localData: [\r\n                { id: \"1161\", state: \"new\", label: \"Combine Orders\", tags: \"orders, combine\", hex: \"#5dc3f0\", resourceId: 3 },\r\n                { id: \"1645\", state: \"work\", label: \"Change Billing Address\", tags: \"billing\", hex: \"#f19b60\", resourceId: 1 },\r\n                { id: \"9213\", state: \"new\", label: \"One item added to the cart\", tags: \"cart\", hex: \"#5dc3f0\", resourceId: 3 },\r\n                { id: \"6546\", state: \"done\", label: \"Edit Item Price\", tags: \"price, edit\", hex: \"#5dc3f0\", resourceId: 4 },\r\n                { id: \"9034\", state: \"new\", label: \"Login 404 issue\", tags: \"issue, login\", hex: \"#6bbd49\" }\r\n        ],\r\n        dataType: \"array\",\r\n        dataFields: fields\r\n    };\r\n\r\nvar dataAdapter = new $.jqx.dataAdapter(source);                   \r\n                        </CODE></PRE>\n\r\n<UL><LI>id - unique identifier of the item. This property is required! \r\n<LI>status - sets the column where the item will be stored. Associated to column's dataField property. This property is required! \r\n<LI>text - sets the item's text. \r\n<LI>content - sets the content area. Could be filled with text/images/widgets etc. \r\n<LI>tags - sets taggs stored in item footer div. \r\n<LI>color - sets unique status color of the item. \r\n<LI>resourceId - contains resource id, associated to some resource from resources property. \r\n<LI>className - sets individual css class about item. </LI></UL>\n\r\n<P>Get the <CODE>source</CODE> property. </P>\n<PRE><CODE>var source = $('#jqxKanban').jqxKanban('source'); </CODE></PRE>",
            "example": "",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqwidgets-kanban-template",
            "exampleDescription": "source is set to a dataAdapter instance.",
            "dataType": "Array | Object",
            "ts_dataType": "any"
        },
        {
            "name": "resources",
            "defaultValue": "null",
            "description": "<P>The resources object represents a set of key/value pairs. It contains information about items, associated to the jqxKanban cards. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>resources</CODE> property. </P>\n<PRE><CODE>\r\nvar fields = [\r\n        { name: \"id\", type: \"string\" },\r\n        { name: \"status\", map: \"state\", type: \"string\" },\r\n        { name: \"text\", map: \"label\", type: \"string\" },\r\n        { name: \"tags\", type: \"string\" },\r\n        { name: \"color\", map: \"hex\", type: \"string\" },\r\n        { name: \"resourceId\", type: \"number\" }\r\n];\r\n\r\nvar source =\r\n{\r\n    localData: [\r\n            { id: \"1161\", state: \"new\", label: \"Combine Orders\", tags: \"orders, combine\", hex: \"#5dc3f0\", resourceId: 3 },\r\n            { id: \"1645\", state: \"work\", label: \"Change Billing Address\", tags: \"billing\", hex: \"#f19b60\", resourceId: 1 },\r\n            { id: \"9213\", state: \"new\", label: \"One item added to the cart\", tags: \"cart\", hex: \"#5dc3f0\", resourceId: 3 },\r\n            { id: \"6546\", state: \"done\", label: \"Edit Item Price\", tags: \"price, edit\", hex: \"#5dc3f0\", resourceId: 4 },\r\n            { id: \"9034\", state: \"new\", label: \"Login 404 issue\", tags: \"issue, login\", hex: \"#6bbd49\" }\r\n    ],\r\n    dataType: \"array\",\r\n    dataFields: fields\r\n};\r\n\r\nvar dataAdapter = new $.jqx.dataAdapter(source);\r\n\r\nvar resourcesAdapterFunc = function () {\r\n    var resourcesSource =\r\n    {\r\n        localData: [\r\n                { id: 0, name: \"No name\", image: \"../../jqwidgets/styles/images/common.png\", common: true },\r\n                { id: 1, name: \"Andrew Fuller\", image: \"../../images/andrew.png\" },\r\n                { id: 2, name: \"Janet Leverling\", image: \"../../images/janet.png\" },\r\n                { id: 3, name: \"Steven Buchanan\", image: \"../../images/steven.png\" },\r\n                { id: 4, name: \"Nancy Davolio\", image: \"../../images/nancy.png\" },\r\n                { id: 5, name: \"Michael Buchanan\", image: \"../../images/Michael.png\" },\r\n                { id: 6, name: \"Margaret Buchanan\", image: \"../../images/margaret.png\" },\r\n                { id: 7, name: \"Robert Buchanan\", image: \"../../images/robert.png\" },\r\n                { id: 8, name: \"Laura Buchanan\", image: \"../../images/Laura.png\" },\r\n                { id: 9, name: \"Laura Buchanan\", image: \"../../images/Anne.png\" }\r\n        ],\r\n        dataType: \"array\",\r\n        dataFields: [\r\n                { name: \"id\", type: \"number\" },\r\n                { name: \"name\", type: \"string\" },\r\n                { name: \"image\", type: \"string\" },\r\n                { name: \"common\", type: \"boolean\" }\r\n        ]\r\n    };\r\n\r\n    var resourcesDataAdapter = new $.jqx.dataAdapter(resourcesSource);\r\n    return resourcesDataAdapter;\r\n}\r\n\r\n$('#kanban').jqxKanban({\r\nwidth: 600,\r\nheight: 500,\r\nresources: resourcesAdapterFunc(),\r\nsource: dataAdapter,\r\ncolumns: [\r\n    { text: \"Backlog\", dataField: \"new\", maxItems: 5 },\r\n    { text: \"In Progress\", dataField: \"work\", maxItems: 5 },\r\n    { text: \"Done\", dataField: \"done\", maxItems: 5, collapseDirection: \"right\" }\r\n]\r\n});                      \r\n                        </CODE></PRE>\n\r\n<UL><LI>id - unique identifier of the resource. \r\n<LI>name - name of the resource. \r\n<LI>image - image of the resource. </LI></UL>\n\r\n<P>Get the <CODE>resources</CODE> property. </P>\n<PRE><CODE>var resources = $('#jqxKanban').jqxKanban('resources'); </CODE></PRE>",
            "example": "",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqwidgets-kanban-template",
            "exampleDescription": "resources is set to dataAdapter instance.",
            "dataType": "Array | Object",
            "ts_dataType": "any"
        },
        {
            "name": "template",
            "defaultValue": "''",
            "description": "<P>Sets or gets new HTML structure about kanban's cards.</P>\n\r\n<H4>Code example </H4>\n\r\n<P>Set the <CODE>template</CODE> property. </P>\n<PRE><CODE>\r\n$('#jqxKanban').jqxKanban({template : \"&lt;div class='jqx-kanban-item' id=''&gt;\"\r\n        + \"&lt;div class='jqx-kanban-item-color-status'&gt;&lt;/div&gt;\"\r\n        + \"&lt;div class='jqx-kanban-item-avatar'&gt;&lt;/div&gt;\"\r\n        + \"&lt;div class='jqx-kanban-item-text'&gt;&lt;/div&gt;\"\r\n        + \"&lt;div class='jqx-kanban-item-footer'&gt;&lt;/div&gt;\"\r\n        + \"&lt;/div&gt;\";\r\n}); \r\n                            </CODE></PRE>\n\r\n<P>Get the <CODE>template</CODE> property. </P>\n<PRE><CODE>var template = $('#jqxKanban').jqxKanban('template'); </CODE></PRE>",
            "example": "",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqwidgets-kanban-template-property",
            "exampleDescription": "template is set to a custom html structure",
            "dataType": "string",
            "exampleInit": {
                "template": "template",
                "exampleData": "\"&lt;div class='jqx-kanban-item' id=''>&lt;div class='jqx-kanban-item-color-status'>&lt;/div>&lt;div class='jqx-kanban-item-text'>&lt;/div>&lt;/div>\""
            }
        },
        {
            "name": "templateContent",
            "defaultValue": "null",
            "description": "<P>Sets or gets the default values about kanban's cards. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>templateContent</CODE> property. </P>\n<PRE><CODE>\r\n                            var templateContent = { status: \"new\", text: \"New text\", content: \"New content\", tags: \"New, taggs\", color: \"green\", resourceId: 0, className: \"\"},\r\n                            $('#jqxKanban').jqxKanban({ templateContent: templateContent }); \r\n                            </CODE></PRE>\n\r\n<P>Get the <CODE>templateContent</CODE> property. </P>\n<PRE><CODE>var selector = $('#jqxKanban').jqxKanban('templateContent'); </CODE></PRE>",
            "example": "",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqwidgets-kanban-template-content-property",
            "exampleDescription": "templateContent is set to a custom object",
            "dataType": "object",
            "ts_dataType": "any",
            "exampleInit": {
                "templateContent": "templateContent",
                "exampleData": "{ status: 'new', text: 'New text', content: 'New content', tags: 'New, taggs', color: 'green', resourceId: 0, className: '' }"
            },
            "customExample": {
                "codeType": "custom",
                "code": "&lt;template>\n    &lt;JqxKanban ref=\"myKanban\"\n               :width=\"600\" :height=\"500\" :columns=\"columns\" :source=\"source\" :resources=\"resources\"\n               :templateContent=\"templateContent\" />\n&lt;/template>\n\n&lt;script>\n    import JqxKanban from 'jqwidgets-scripts/jqwidgets-vue/vue_jqxkanban.vue';\n\n    export default {\n        components: {\n            JqxKanban\n        },\n        data: function () {\n            return {\n                templateContent: { status: 'new', text: 'New text', content: 'New content', tags: 'New, taggs', color: 'green', resourceId: 0, className: '' },\n                source: new jqx.dataAdapter(this.source),\n                columns: [\n                    { text: \"Backlog\", dataField: \"new\", maxItems: 5 },\n                    { text: \"In Progress\", dataField: \"work\", maxItems: 5 },\n                    { text: \"Done\", dataField: \"done\", maxItems: 5, collapseDirection: \"right\" }\n                ],\n                resources: new jqx.dataAdapter(this.resourcesSource)\n            }\n        },\n        beforeCreate: function () {\n            const fields = [\n                { name: 'status', map: 'state', type: 'string' },\n                { name: 'text', map: 'label', type: 'string' },\n                { name: 'tags', type: 'string' },\n                { name: 'color', map: 'hex', type: 'string' },\n                { name: 'resourceId', type: 'number' }\n            ];\n            this.source = {\n                localData: [\n                    { id: '1161', state: 'new', label: 'Combine Orders', tags: 'orders, combine', hex: '#5dc3f0', resourceId: 3 },\n                    { id: '1645', state: 'work', label: 'Change Billing Address', tags: 'billing', hex: '#f19b60', resourceId: 1 },\n                    { id: '9213', state: 'new', label: 'One item added to the cart', tags: 'cart', hex: '#5dc3f0', resourceId: 3 },\n                    { id: '6546', state: 'done', label: 'Edit Item Price', tags: 'price, edit', hex: '#5dc3f0', resourceId: 4 },\n                    { id: '9034', state: 'work' }\n                ],\n                dataType: 'array',\n                dataFields: fields\n            };\n            this.resourcesSource = {\n                localData: [\n                    { id: 0, name: 'No name', image: 'https://www.jqwidgets.com/jquery-widgets-demo/jqwidgets/styles/images/common.png', common: true },\n                    { id: 1, name: 'Andrew Fuller', image: 'https://www.jqwidgets.com/jquery-widgets-demo/images/andrew.png' },\n                    { id: 2, name: 'Janet Leverling', image: 'https://www.jqwidgets.com/jquery-widgets-demo/images/janet.png' },\n                    { id: 3, name: 'Steven Buchanan', image: 'https://www.jqwidgets.com/jquery-widgets-demo/images/steven.png' },\n                    { id: 4, name: 'Nancy Davolio', image: 'https://www.jqwidgets.com/jquery-widgets-demo/images/nancy.png' },\n                    { id: 5, name: 'Michael Buchanan', image: 'https://www.jqwidgets.com/jquery-widgets-demo/images/Michael.png' },\n                    { id: 6, name: 'Margaret Buchanan', image: 'https://www.jqwidgets.com/jquery-widgets-demo/images/margaret.png' },\n                    { id: 7, name: 'Robert Buchanan', image: 'https://www.jqwidgets.com/jquery-widgets-demo/images/robert.png' },\n                    { id: 8, name: 'Laura Buchanan', image: 'https://www.jqwidgets.com/jquery-widgets-demo/images/Laura.png' },\n                    { id: 9, name: 'Laura Buchanan', image: 'https://www.jqwidgets.com/jquery-widgets-demo/images/Anne.png' }\n                ],\n                dataType: 'array',\n                dataFields: [\n                    { name: 'id', type: 'number' },\n                    { name: 'name', type: 'string' },\n                    { name: 'image', type: 'string' },\n                    { name: 'common', type: 'boolean' }\n                ]\n            };\n        }\n    }\n&lt;/script>"
            }
        },
        {
            "name": "theme",
            "defaultValue": "''",
            "description": "<P>Sets the widget's theme. </P>\n\r\n<UL><LI>Include the theme's CSS file after jqx.base.css.<BR>The following code example adds the 'material' theme. <PRE><CODE>\r\n<PRE><CODE>&lt;link rel=\"stylesheet\" href=\"../../jqwidgets/styles/jqx.base.css\" type=\"text/css\" /&gt;\r\n&lt;link rel=\"stylesheet\" href=\"../../jqwidgets/styles/jqx.material.css\" type=\"text/css\" /&gt;\r\n</CODE></PRE>\r\n</CODE></PRE>\r\n<LI>Set the widget's theme property to 'material' when you initialize it. </LI></UL>",
            "example": "",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqwidgets-kanban-theme-property",
            "exampleDescription": "theme is set to 'arctic'",
            "dataType": "string",
            "exampleInit": {
                "theme": "material"
            }
        },
        {
            "name": "width",
            "defaultValue": "600",
            "description": "<P>Sets or gets the kanban's width. </P>\n\r\n<H4>Code examples </H4>\n\r\n<P>Set the <CODE>width</CODE> property. </P>\n<PRE><CODE>$('#jqxKanban').jqxKanban({width:850});</CODE></PRE>\n\r\n<P>Get the <CODE>width</CODE> property. </P>\n<PRE><CODE>var width = $('#jqxKanban').jqxKanban('width');</CODE></PRE>",
            "example": "",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqwidgets-kanban-template",
            "exampleDescription": "width is set to 600",
            "dataType": "string | number",
            "ts_dataType": "string | number"
        }
    ],
    "events": [
        {
            "name": "columnAttrClicked",
            "description": "<P>This event is triggered when jqxKanban column is clicked. </P>\n<H4>Code examples </H4>\n<P>Bind to the <CODE>columnAttrClicked</CODE> event by type: jqxKanban. </P>",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqwidgets-kanban-events",
            "exampleDescription": "Bind to the columnAttrClicked event by type: jqxKanban.",
            "example": "<PRE><CODE>\r\n$('#jqxKanban').on('columnAttrClicked', function (event) {\r\n    var args = event.args;\r\n    var column = args.column;\r\n    var cancelToggle = args.cancelToggle; // false by default. Set to true to cancel toggling dynamically.\r\n    var attribute = args.attribute; // title, button\r\n});\r\n                         </CODE></PRE>"
        },
        {
            "name": "columnCollapsed",
            "description": "<P>This event is triggered when jqxKanban column is collapsed. </P>\n<H4>Code examples </H4>\n<P>Bind to the <CODE>columnCollapsed</CODE> event by type: jqxKanban. </P>",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqwidgets-kanban-events",
            "exampleDescription": "Bind to the columnCollapsed event by type: jqxKanban.",
            "example": "<PRE><CODE>\r\n$('#jqxKanban').on('columnCollapsed', function (event) { \r\n    var args = event.args;\r\n    var column = args.column;\r\n}); \r\n                        </CODE></PRE>"
        },
        {
            "name": "columnExpanded",
            "description": "<P>This event is triggered when jqxKanban column is expanded. </P>\n<H4>Code examples </H4>\n<P>Bind to the <CODE>columnExpanded</CODE> event by type: jqxKanban. </P>",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqwidgets-kanban-events",
            "exampleDescription": "Bind to the columnExpanded event by type: jqxKanban.",
            "example": "<PRE><CODE>\r\n$('#jqxKanban').on('columnCollapsed', function (event) { \r\n    var args = event.args;\r\n    var column = args.column;\r\n}); \r\n</CODE></PRE>"
        },
        {
            "name": "itemAttrClicked",
            "description": "<P>This event is triggered when some element of an item is clicked. </P>\n<H4>Code examples </H4>\n<P>Bind to the <CODE>itemAttrClicked</CODE> event by type: jqxKanban. </P>",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqwidgets-kanban-events",
            "exampleDescription": "Bind to the itemAttrClicked event by type: jqxKanban.",
            "example": "<PRE><CODE>\r\n$('#jqxKanban').on('itemAttrClicked', function (event) {\r\n    var args = event.args;\r\n    var itemId = args.itemId;\r\n    var attribute = args.attribute; // template, colorStatus, content, keyword, text, avatar\r\n});\r\n</CODE></PRE>"
        },
        {
            "name": "itemMoved",
            "description": "<P>This event is triggered when an item is moved. </P>\n<H4>Code examples </H4>\n<P>Bind to the <CODE>itemMoved</CODE> event by type: jqxKanban. </P>",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqwidgets-kanban-events",
            "exampleDescription": "Bind to the itemMoved event by type: jqxKanban.",
            "example": "<PRE><CODE>\r\n$('#kanban').on('itemMoved', function (event) {\r\n    var args = event.args;\r\n    var itemId = args.itemId;\r\n    var oldParentId = args.oldParentId;\r\n    var newParentId = args.newParentId;\r\n    var itemData = args.itemData;\r\n    var oldColumn = args.oldColumn;\r\n    var newColumn = args.newColumn;\r\n});\r\n</CODE></PRE>"
        }
    ],
    "methods": [
        {
            "name": "addItem",
            "description": "<P>Add new item in widget. </P>\n<H4>Code examples </H4>\n<P>Invoke the <CODE>addItem</CODE> method. </P>\n<PRE><CODE>\r\nvar newItem = { status: \"new\", text: \"Cookies\", content: \"Content\", tags: \"cookies\", color: \"lightgreen\", resourceId: 1 };\r\n$('#jqxKanban').jqxKanban('addItem', newItem); \r\n                        </CODE></PRE>",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqwidgets-kanban-template",
            "exampleDescription": "add new item",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "newItem",
                    "dataType": "object",
                    "ts_dataType": "any",
                    "description": "The content of the new jqxKanban item.\r\nnewItem.status - string, newItem.text - string, newItem.content - string, newItem.tags - string, newItem.color - string, newItem.resourceId - string, newItem.className - string",
                    "optional": false
                }
            ],
            "exampleInit": {
                "args": [ "{ status: \"new\", text: \"New Task\", tags: \"new task\", color: \"#5dc3f0\" }" ]
            }
        },
        {
            "name": "destroy",
            "description": "<P>Add new item in widget. </P>\n<H4>Code examples </H4>\n<P>Invoke the <CODE>destroy</CODE> method. </P>\n<PRE><CODE>\r\n$('#jqxKanban').jqxKanban('destroy'); \r\n                        </CODE></PRE>",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqwidgets-kanban-destroy-method",
            "exampleDescription": "destroys the jqxKanban",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "None",
                    "dataType": null,
                    "description": "",
                    "optional": false
                }
            ]
        },
        {
            "name": "getColumn",
            "description": "<P>Returs all items as an array of objects. </P>\n<H4>Code examples </H4>\n<P>Invoke the <CODE>getColumn</CODE> method. </P>\n<PRE><CODE>\r\nvar column = $('#jqxKanban').jqxKanban('getColumn', 'work'); \r\n                            </CODE></PRE>",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqwidgets-kanban-getcolumn-method",
            "exampleDescription": "get the column",
            "returnDataType": "object",
            "ts_returnDataType": "KanbanColumns",
            "arguments": [
                {
                    "name": "dataField",
                    "dataType": "string",
                    "description": "",
                    "optional": false
                }
            ],
            "exampleInit": {
                "args": [ "'work'" ]
            }
        },
        {
            "name": "getColumnItems",
            "description": "<P>Returs all items as an array of objects. </P>\n<H4>Code examples </H4>\n<P>Invoke the <CODE>getColumnItems</CODE> method. </P>\n<PRE><CODE>\r\nvar items = $('#jqxKanban').jqxKanban('getColumnItems'); \r\n                            </CODE></PRE>",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqwidgets-kanban-getcolumnitems-method",
            "exampleDescription": "get the items",
            "returnDataType": "Array",
            "ts_returnDataType": "Array<KanbanSource>",
            "arguments": [
                {
                    "name": "dataField",
                    "dataType": "string",
                    "description": "",
                    "optional": false
                }
            ],
            "exampleInit": {
                "args": [ "'work'" ]
            }
        },
        {
            "name": "getItems",
            "description": "<P>Returs all items as an array of objects. </P>\n<H4>Code examples </H4>\n<P>Invoke the <CODE>getItems</CODE> method. </P>\n<PRE><CODE>\r\nvar items = $('#jqxKanban').jqxKanban('getItems'); \r\n                            </CODE></PRE>",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqwidgets-kanban-getitems-method",
            "exampleDescription": "get the items",
            "returnDataType": "object",
            "ts_returnDataType": "KanbanSource",
            "arguments": [
                {
                    "name": "None",
                    "dataType": null,
                    "description": "",
                    "optional": false
                }
            ]
        },
        {
            "name": "removeItem",
            "description": "<P>Removes an item. </P>\n<H4>Code examples </H4>\n<P>Invoke the <CODE>removeItem</CODE> method. </P>\n<PRE><CODE>\r\n$('#jqxKanban').jqxKanban('removeItem', \"1236\");\r\n                            </CODE></PRE>",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqwidgets-kanban-template",
            "exampleDescription": "removes an item",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "itemId",
                    "dataType": "string",
                    "description": "Id of the item, which must be removed",
                    "optional": false
                }
            ],
            "exampleInit": {
                "args": [ "'1161'" ]
            }
        },
        {
            "name": "updateItem",
            "description": "<P>Update an item. </P>\n<H4>Code examples </H4>\n<P>Invoke the <CODE>updateItem</CODE> method. </P>\n<PRE><CODE>\r\nvar itemId = '12354';\r\nvar newContent = { text: \"Cookies\", content: \"Content\", tags: \"cookies\", color: \"lightgreen\", resourceId: 1, className: \"standard\" };\r\n$('#jqxKanban').jqxKanban('updateItem', itemId, newContent); </CODE></PRE>",
            "exampleURL": "https://www.jqwidgets.com/jseditor/?key=jqwidgets-kanban-template",
            "exampleDescription": "update an item",
            "returnDataType": "None",
            "arguments": [
                {
                    "name": "itemId",
                    "dataType": "string",
                    "description": "Id of the item which content must be replaced",
                    "optional": false
                },
                {
                    "name": "newContent",
                    "dataType": "object",
                    "ts_dataType": "KanbanUpdateItem",
                    "description": "The new content of the updated kanban's card.\r\nnewContent.status - string, newContent.text - string, newContent.content - string, newContent.tags - string, newContent.color - string, newContent.resourceID - string, newContent.className - string",
                    "optional": false
                }
            ],
            "exampleInit": {
                "args": [ "'1161'", "{ 'status': 'new', 'text': 'Task', 'tags': 'task', 'color': '#5dc3f0', 'resourceId': 3 }" ]
            }
        }
    ]
}