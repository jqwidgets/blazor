<JqxScheduler @ref="myScheduler" onComponentReady="onReady"
    width=800 height=600 source=source showLegend=true view=view
    appointmentDataFields=appointmentDataFields views=views>    
</JqxScheduler>

@code {
    JqxScheduler myScheduler;

    string view = "weekView";

    IDictionary<string, string> appointmentDataFields = new Dictionary<string, string>()
    {
        { "from", "from" },
        { "to", "to" },
        { "id", "id" },
        { "description", "description" },
        { "location", "place" },
        { "style", "style" },
        { "subject", "subject" },
        { "resourceId", "calendar" },
        { "recurrencePattern", "recurrenceRule" },
        { "recurrenceException", "recurrenceException" }
    };

    string[] views = new string[]
    {
        "dayView",
        "weekView",
        "monthView"
    };

    Dictionary<string, object> source = new Dictionary<string, object>
    {
        { "dataType", "array" },
        { "dataFields", new Dictionary<string, string>[]
            {
                new Dictionary<string, string>() { { "name", "id" }, { "type", "string" } },
                new Dictionary<string, string>() { { "name", "description" }, { "type", "string" } },
                new Dictionary<string, string>() { { "name", "location" }, { "type", "string" } },
                new Dictionary<string, string>() { { "name", "subject" }, { "type", "string" } },
                new Dictionary<string, string>() { { "name", "calendar" }, { "type", "string" } },
                new Dictionary<string, string>() { { "name", "recurrenceRule" }, { "type", "string" } },
                new Dictionary<string, string>() { { "name", "recurrenceException" }, { "type", "string" } },
                new Dictionary<string, string>() { { "name", "style" }, { "type", "string" } },
                new Dictionary<string, string>() { { "name", "from" }, { "type", "date" } },
                new Dictionary<string, string>() { { "name", "to" }, { "type", "date" } }
            }
        },
        { "id", "id" },
        { "localData", data }
    };

    static Dictionary<string, object>[] data = new Dictionary<string, object>[] 
    {
        new Dictionary<string, object>()
        {
            { "id", "id4" },
            { "description", "" },
            { "style", "#AA4643" },
            { "location", "" },
            { "subject", "New Projects Planning" },
            { "calendar", "Room 2" },
            { "from", (DateTime.Today.AddDays(-1) + new TimeSpan(8, 0, 0)).ToString("yyyy-M-dd H:mm") },
            { "to", (DateTime.Today.AddDays(-1) + new TimeSpan(13, 0, 0)).ToString("yyyy-M-dd H:mm") }
        },
        new Dictionary<string, object>()
        {
            { "id", "id5" },
            { "description", "" },
            { "style", "#89A54E" },
            { "location", "" },
            { "subject", "Interview with James" },
            { "calendar", "Room 1" },
            { "from", (DateTime.Today.AddDays(2) + new TimeSpan(13, 0, 0)).ToString("yyyy-M-dd H:mm") },
            { "to", (DateTime.Today.AddDays(2) + new TimeSpan(15, 0, 0)).ToString("yyyy-M-dd H:mm") }
        },
        new Dictionary<string, object>()
        {
            { "id", "id6" },
            { "description", "" },
            { "style", "#71588F" },
            { "location", "" },
            { "subject", "Interview with Nancy" },
            { "calendar", "Room 2" },
            { "from", (DateTime.Today.AddDays(3) + new TimeSpan(14, 0, 0)).ToString("yyyy-M-dd H:mm") },
            { "to", (DateTime.Today.AddDays(3) + new TimeSpan(16, 0, 0)).ToString("yyyy-M-dd H:mm") }
        },
        new Dictionary<string, object>()
        {
            { "id", "id7" },
            { "description", "" },
            { "style", "#307DD7" },
            { "location", "" },
            { "subject", "Daily Meeting" },
            { "calendar", "Room 1" },
            { "recurrenceRule", "FREQ=DAILY" },
            { "recurrenceException", (DateTime.Today.AddDays(1) + new TimeSpan(9, 0, 0)) + "," + (DateTime.Today.AddDays(3) + new TimeSpan(12, 0, 0)) },
            { "from", (DateTime.Today + new TimeSpan(10, 0, 0)).ToString("yyyy-M-dd H:mm") },
            { "to", (DateTime.Today + new TimeSpan(11, 0, 0)).ToString("yyyy-M-dd H:mm") }
        }
    };

    private void onReady()
    {
        myScheduler.ensureAppointmentVisible("id7");
    }
}
