<JqxDataTable @ref="myDataTable" 
    width=850 source=source columns=columns 
    altRows=true pageable=true sortable=true>
</JqxDataTable>

<div style="float: left; margin-left: 10px">
  <table>
    <tbody>
      <tr>
        <td align="right">
          <div><strong>Settings</strong></div>
        </td>
        <td align="left"></td>
      </tr>
      <tr>
        <td align="right">Column:</td>
        <td align="left">
          <JqxDropDownList @ref="columnName"
              width=100 selectedIndex=0 autoDropDownHeight=true source=columnsSource>
          </JqxDropDownList>
        </td>
      </tr>
      <tr>
        <td align="right">Sort Order:</td>
        <td align="left">
          <JqxDropDownList @ref="sortOrder"
              width=100 selectedIndex=0 autoDropDownHeight=true source=orderSource>
          </JqxDropDownList>
        </td>
      </tr>
      <tr>
        <td align="right"></td>
        <td align="left">
          <JqxButton onClick="sortBtnOnClick" width=50>Sort</JqxButton>
          <JqxButton onClick="clearBtnOnClick" width=50>Clear</JqxButton>
        </td>
      </tr>
    </tbody>
  </table>
</div>

@code {
    JqxDataTable myDataTable;
    JqxDropDownList columnName;
    JqxDropDownList sortOrder;

    string[] columnsSource = new string[] { "Name", "Last Name", "Product", "Quantity", "Unit Price", "Total" };
    string[] orderSource = new string[] { "Ascending", "Descending" };

    IDictionary<string, object> source = new Dictionary<string, object>()
    {
        { "localData", generateData(85) },
        { "dataType", "array" },        
        { 
            "dataFields",
            new Dictionary<string, string>[]
            {
                new Dictionary<string, string>() { { "name", "firstname" }, { "type", "string" } },
                new Dictionary<string, string>() { { "name", "lastname" }, { "type", "string" } },
                new Dictionary<string, string>() { { "name", "productname" }, { "type", "string" } },
                new Dictionary<string, string>() { { "name", "quantity" }, { "type", "number" } },
                new Dictionary<string, string>() { { "name", "price" }, { "type", "number" } },
                new Dictionary<string, string>() { { "name", "total" }, { "type", "number" } }
            }
        },
        { "sortcolumn", "firstname" },
        { "sortdirection", "asc" }
    };

    IDictionary<string, object>[] columns = new Dictionary<string, object>[]
    {
        new Dictionary<string, object>() 
        {
            { "text", "Name" }, { "datafield", "firstname" }, { "width", 200 }
        },
        new Dictionary<string, object>() 
        {
            { "text", "Last Name" }, { "datafield", "lastname" }, { "width", 200 }
        },
        new Dictionary<string, object>() 
        {
            { "text", "Product" }, { "editable", false }, { "datafield", "productname" }, { "width", 180 }
        },
        new Dictionary<string, object>() 
        {
            { "text", "Quantity" }, { "datafield", "quantity" }, { "width", 80 },
            { "align", "right" }, { "cellsalign", "right" }
        },
        new Dictionary<string, object>() 
        {
            { "text", "Unit Price" }, { "datafield", "price" }, { "width", 90 }, 
            { "align", "right" }, { "cellsalign", "right" },{ "cellsFormat", "c2" }
        },
        new Dictionary<string, object>() 
        {
            { "text", "Total" }, { "datafield", "total" }, { "width", 100 }, 
            { "align", "right" }, { "cellsalign", "right" }, { "cellsFormat", "c2" }
        }
    };
    
    public void sortBtnOnClick(IDictionary<string, object> e)
    {
        int columnIndex = (int)columnName.selectedIndex;
        string sortOrderValue = sortOrder.selectedIndex == 0 ? "asc" : "desc";

        myDataTable.sortBy(columns[columnIndex]["datafield"].ToString(), sortOrderValue);
    }

    public void clearBtnOnClick(IDictionary<string, object> e)
    {
        myDataTable.sortBy("firstname", null);
    }

    public static IList<IDictionary<string, object>> generateData(int number)
    {
        IList<IDictionary<string, object>> data = new List<IDictionary<string, object>>();

        string[] firstNames = new string[] { "Andrew", "Nancy", "Shelley", "Regina", "Yoshi", "Antoni", "Mayumi", "Ian", "Peter", "Lars", "Petra", "Martin", "Sven", "Elio", "Beate", "Cheryl", "Michael", "Guylene" };
        string[] lastNames = new string[] { "Fuller", "Davolio", "Burke", "Murphy", "Nagase", "Saavedra", "Ohno", "Devling", "Wilson", "Peterson", "Winkler", "Bein", "Petersen", "Rossi", "Vileid", "Saylor", "Bjorn", "Nodier" };
        string[] productNames = new string[] { "Black Tea", "Green Tea", "Caffe Espresso", "Doubleshot Espresso", "Caffe Latte", "White Chocolate Mocha", "Cramel Latte", "Caffe Americano", "Cappuccino", "Espresso Truffle", "Espresso con Panna", "Peppermint Mocha Twist" };
        double[] priceValues = new double[] { 2.25, 1.5, 3.0, 3.3, 4.5, 3.6, 3.8, 2.5, 5.0, 1.75, 3.25, 4.0 };

        Random random = new Random();
        for (int i = 0; i < number; i++)
        {
           
            Dictionary<string, object> row = new Dictionary<string, object>();
            int productIndex = random.Next(0, productNames.Count());    
            double price = priceValues[productIndex];
            int quantity = random.Next(1, 100);

            row.Add("firstname", firstNames[random.Next(0, firstNames.Length)]);
            row.Add("lastname", lastNames[random.Next(0, lastNames.Length)]);
            row.Add("productname", productNames[random.Next(0, productNames.Length)]);
            row.Add("price", price);
            row.Add("quantity", quantity);
            row.Add("total", price * quantity);

            data.Add(row);
        }

        return data;
    }
}

<style>
    .jqx-button {
        float: left;
    }
</style>