@inject IJSRuntime JSRuntime;

<div style='font-family: Verdana Arial; font-size: 12px; width: 400px;'>
    <div style='float: left; width: 400px;'>
        <h3 style='margin-left: 15px;'>Categories</h3>
        <JqxCheckBox width="width" height="height" enableContainerClick="false">Entertainment</JqxCheckBox>
        <JqxCheckBox width="width" height="height" isChecked="true">Computers</JqxCheckBox>
        <JqxCheckBox width="width" height="height">Sports</JqxCheckBox>
    </div>
    <div style='float: left; width: 400px; margin-top: 10px;'>
        <JqxCheckBox width="width" height="height">Health</JqxCheckBox>
        <JqxCheckBox width="width" height="height">Finance</JqxCheckBox>
        <JqxCheckBox width="width" height="height">Travel</JqxCheckBox>
    </div>
    <div style='float: left; width: 400px; margin-top: 10px;'>
        <JqxCheckBox width="width" height="height">Music</JqxCheckBox>
        <JqxCheckBox width="width" height="height">Technology</JqxCheckBox> 
        <JqxCheckBox width="width" height="height">Publishing</JqxCheckBox>
    </div>
    <br />
    <div style='float: left; width: 400px; margin-top: 10px;'>
        <h3 style='margin-left: 15px;'>States</h3>
        <JqxCheckBox onChange="checkbox10Handler" width="width" height="height" isChecked="true"><span @ref="checkBox10Span">Checked</span></JqxCheckBox>
        <JqxCheckBox onChange="checkbox11Handler" width="width" height="height"><span @ref="checkBox11Span">Unchecked</span></JqxCheckBox>
    </div>
    <div style='float: left; width: 400px; margin-top: 10px;'>
        <JqxCheckBox onIndeterminate="checkbox12IndeterminateHandler" onChange="checkbox12ChangeHandler" width="width" height="height" hasThreeStates="true" isChecked="null">
            <span @ref="checkBox12Span">Indeterminate</span>
        </JqxCheckBox>
        <JqxCheckBox width="width" height="height" isChecked="true" disabled="true">Disabled</JqxCheckBox>
    </div>   
</div>

@code { 
    ElementReference checkBox10Span;
    ElementReference checkBox11Span;
    ElementReference checkBox12Span;     
    int width = 120;
    int height = 25;

    private void checkbox10Handler(IDictionary<string, object> e) 
    {
        var isChecked = e["checked"];
        string newLabel = isChecked.ToString() == "True" ? "Checked": "Unchecked";
        JSRuntime.InvokeVoidAsync("Example.updateInnerHtml", checkBox10Span, newLabel);
    }

    private void checkbox11Handler(IDictionary<string, object> e) 
    {
        var isChecked = e["checked"];
        string newLabel = isChecked.ToString() == "True" ? "Checked": "Unchecked";
        JSRuntime.InvokeVoidAsync("Example.updateInnerHtml", checkBox11Span, newLabel);
    }
    
    private void checkbox12ChangeHandler(IDictionary<string, object> e) 
    {
        string isChecked = e["checked"].ToString();
      
        string newLabel = "";
        if (isChecked == "True") 
        {
            newLabel = "Checked";
        }  
        else if (isChecked == "False") 
        {
            newLabel = "Unchecked";
        }
        
        JSRuntime.InvokeVoidAsync("Example.updateInnerHtml", checkBox12Span, newLabel);
    }
    private void checkbox12IndeterminateHandler(IDictionary<string, object> e) 
    {
        string newLabel = "Indeterminate"; 

        JSRuntime.InvokeVoidAsync("Example.updateInnerHtml", checkBox12Span, newLabel);
    }
} 

<style>
    .jqx-checkbox {
        margin-left: 10px;
        float: left;
    }
</style>
